----------------------------------------------------------------------
-- Data Type
-------------------------------------------------------------------
CREATE TYPE "STRTABLETYPE"  AS 
		("TABLE" VARCHAR(255)) 
	 INSTANTIABLE 
	 INLINE LENGTH 299 
	 WITHOUT COMPARISONS 
	 NOT FINAL 
	 REF USING VARCHAR(16) FOR BIT DATA
	 MODE DB2SQL;

CREATE TYPE "NUMTABLETYPE"  AS 
		("TABLE" BIGINT) 
	 INSTANTIABLE 
	 INLINE LENGTH 42 
	 WITHOUT COMPARISONS 
	 NOT FINAL 
	 REF USING VARCHAR(16) FOR BIT DATA
	 MODE DB2SQL;

----------------------------------------------------------------------
-- Sequences
----------------------------------------------------------------------	
CREATE SEQUENCE AGREEMT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE AGREEMT_ST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE APPR_CMDT_TYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE APPR_CMDT_TYPE_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ASSET_PDC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE BKG_LOCTN_EMP_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE BKG_LOCTN_EXT_SYS_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE BKG_LOCTN_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE BUS_PARAM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CASH_DEPOSIT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CASH_MARGIN_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CASH_MARGIN_ST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CC_CERTIFICATE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CC_CERTIFICATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CC_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CC_TASK_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CCC_CERT_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CDS_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CHECKLIST_ITEM_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CHECKLIST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CHECKLIST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMD_SUBLIMIT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMD_SUBLIMIT_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_ACCOUNT_SEC_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
	
CREATE SEQUENCE CMS_ASSET_TRADE_IN_A_SEQ
  AS INTEGER
  NO CACHE
  MAXVALUE 999999
  CYCLE;

CREATE SEQUENCE CMS_ASSET_TRADE_IN_S_SEQ
  AS INTEGER
  NO CACHE
  MAXVALUE 999999
  CYCLE;

CREATE SEQUENCE CMS_ASST_GC_DEBTOR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_ASST_GC_FAO_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_ASST_GC_INSR_FAO_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_ASST_GC_INSR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_ASST_GC_INSR_STK_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_ASST_GC_STOCK_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_AUTH_REPORT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_AUTHENTICATION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BATCH_CIF_FUSION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE CMS_BATCH_CIF_UPDATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE CMS_BL_BUILDUP_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_DEV_DOC_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_DISBURSE_DETAIL_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_DISBURSE_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_FDR_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_PROJECT_SCHEDULE_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_PROPERTY_TYPE_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_SALES_PROCEEDS_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BL_SETTLEMENT_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_BRIDGING_LOAN_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CF_ADVANCE_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CF_FACILITY_TYPE_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CF_FDR_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CF_PAYMENT_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CF_REPORT_SG_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CF_TNC_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CHARGE_DETAIL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CHARGE_DETAIL_STG_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CHECKLIST_ITEM_SHARE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CONTRACT_FINANCE_SEQ AS BIGINT
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 9999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CREDIT_RISK_PARAM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CUSTODIAN_DOC_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_CUSTODIAN_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_DOCUMENT_SHARE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_EARMARK_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE CMS_EARMARK_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE CMS_FEED_EXCEPTION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_FEED_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	ORDER;

CREATE SEQUENCE CMS_FOREX_HISTORY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_FOREX_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_GOLD_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

-- CREATE SEQUENCE CMS_LIMIT_SECURITY_MAP_SEQ AS INTEGER
-- 	START WITH 1
-- 	INCREMENT BY 1
-- 	MAXVALUE 999999999
-- 	MINVALUE 1
-- 	CYCLE
-- 	NO CACHE
-- 	NO ORDER;

CREATE SEQUENCE CMS_LIMIT_SECURITY_MAP_STG_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_MQ_MSG_LOG_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_TRADE_MSG_LOG_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_NOMINEES_CUSTOMER_TEMP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_PRICE_FEED_HISTORY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_PRICE_FEED_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_PROPERTY_INDEX_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_PWDHISTORY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_PWDPOLICY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_REPORT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
	
CREATE SEQUENCE CMS_REPORT_MASTER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;	

CREATE SEQUENCE CMS_REPORT_TEMPLATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
	
CREATE SEQUENCE CMS_REPORT_PARAM_DUEDATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_REPORT_FREQUNCY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
		
CREATE SEQUENCE CMS_REV_CHECKLIST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 99999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_STG_CREDIT_RISK_PARAM_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
        
CREATE SEQUENCE CMS_TRADE_COMMISSION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_TRADE_PRICING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_TRADE_SUPPLIER_BUYER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_VALUATION_PARAMETERS_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COBORROWER_LIMIT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COL_LIMIT_CHARGE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COL_LIMIT_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COL_PLEDGOR_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COLLATERAL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COLLATERAL_TASK_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMM_CODE_ENTRY_STG_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMM_CODE_ENTRY_STGREF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_CONTR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_CONTR_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_DEAL_CASH_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_DEAL_NO_POOL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_DEAL_NO_SPECIFIC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_DEAL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_FIN_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_PRICE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_RELEASE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_SETTLEMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_TITLE_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_UOM_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMODITY_UOM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMON_CODE_CATEGORY_ENTRY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE COMMON_CODE_CATEGORY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CONTACT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CONVENANT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE  RECURRENT_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CONVENANT_SUB_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE CPC_BKG_LOCTN_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CREDIT_GRADE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CREDIT_STATUS_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CRP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CUSTODIAN_AUTHORIZER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CUSTODIAN_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CUSTOMER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CUSTOMER_X_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DAP_CTRY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE DDN_CERT_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DDN_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DDN_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DEFER_REQUEST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DEFER_REQUEST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DIARY_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
	
CREATE SEQUENCE DOCUMENT_DYNAMIC_PROPERTY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;	

CREATE SEQUENCE DOCUMENT_ITEM_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE DOCUMENT_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE EAI_MESSAGE_REF_NO_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE STP_MESSAGE_REF_NO_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE EMP_EMP_CODE_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE EMP_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE EMP_PROFILE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE FEE_DETAILS_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE FOREX_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE HEDGE_PRICE_EXTENSION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE HEDGING_CONTR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE HEDGING_CONTR_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE INSURANCE_POLICY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE INT_RATE_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE INT_RATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ISIC_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE KYC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LEGAL_ENTITY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIMIT_CHARGE_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIMIT_CHARGE_MAP_STG_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIMIT_PROFILE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIMIT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIMIT_SEQ_REPORT AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIMIT_X_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LIQUIDATION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_AGENCY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_AGENCY_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_BORROWER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_BORROWER_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_GUARANTOR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_GUARANTOR_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_LIMIT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_LIMIT_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_PARTICIPANT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_PARTICIPANT_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_SCHEDULE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_SCHEDULE_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_SUBLIMIT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LOAN_SUBLIMIT_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE LSP_OFF_ADDR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MARKETABLE_COMMODITY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MARKETABLE_EQUITY_DETAIL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE MARKETABLE_EQUITY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MF_CHECKLIST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MF_CHECKLIST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MF_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MF_SEC_SUBTYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE MF_TEMPLATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NON_CUSTOMER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NOTIFICATION_RECIP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NOTIFICATION_RECUR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NOTIFICATION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NOTIFICATION_TYPE_RECIP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NOTIFICATION_TYPE_RECUR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NOTIFICATION_TYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE NPL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PLEDGOR_CREDIT_GRADE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PLEDGOR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE POLICY_CAP_GRP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 2147483647
	MINVALUE 1
	NO CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE POLICY_CAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 2147483647
	MINVALUE 1
	NO CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PRECOND_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE PROFILE_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILE_NONRIC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILE_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILEBUYER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILEBUYER_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILESUPPLIER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROFILESUPPLIER_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROPERTY_IDX_DISTRICT_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROPERTY_IDX_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROPERTY_IDX_MUKIM_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROPERTY_IDX_PROPERTY_TYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROPERTY_IDX_SEC_SUBTYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PROPERTY_IDX_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PSC_CERTIFICATE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PSC_CERTIFICATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE PSCC_CERT_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE REC_CHECKLIST_SUB_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE RECURRENT_CHECKLIST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE RECURRENT_CHECKLIST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE REPORT_REQUEST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ROLETYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE SC_CERTIFICATE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SC_CERTIFICATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCC_CERT_REF_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_COBO_XREF_MAP AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_COUNTRY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_CURRENCY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_GRP_CREDIT_GRADE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_GRP_LE_LE_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_GRP_LE_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_GRP_MAP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_GRP_PROFILE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_LSP_JOINT_BORROWER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SCI_PLG_RPT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SEC_APPORTIONMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SEC_RECOVER_EXPENSE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SEC_RECOVER_INC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SEC_RECOVERY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SECURITY_ASSETLIFE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SECURITY_INSTRUMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SECURITY_INSTRUMENT_ST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SECURITY_PARAMETER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SECURITY_SUBTYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SETTLEMENT_WAREHOUSE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SHARE_SECURITY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SML_COLLATERAL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SML_INSURANCE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SML_PLEDGOR_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SML_VALUATION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SQ_DEMO_CMS_REPORT AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ST_MF_CHECKLIST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ST_MF_CHECKLIST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ST_MF_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ST_MF_SEC_SUBTYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE ST_MF_TEMPLATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_APPORTIONMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_BUS_PARAM_GRP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_BUS_PARAM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_CHECKLIST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_CHECKLIST_ITEM_SHARE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_CHECKLIST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
	
CREATE SEQUENCE STG_DOCUMENT_DYNAMIC_PROPERTY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;		

CREATE SEQUENCE STG_DOCUMENT_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_NON_CUSTOMER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_PROPERTY_IDX_DISTRICT_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_PROPERTY_IDX_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_PROPERTY_IDX_MUKIM_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_PROPERTY_IDX_PROPERTY_TYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_PROPERTY_IDX_SEC_SUBTYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_PROPERTY_IDX_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_TEMPLATE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE STG_TEMPLATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SUBLIMITTYPE_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SUBLIMITTYPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SUBLIMITTYPE_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TAT_ENTRY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TB_DEAL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TB_DEAL_ST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TB_DEAL_VAL_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TB_DEAL_VAL_ST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAM_CMS_SEGMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAM_COUNTRY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAM_ORG_GROUP_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 2147483647
	MINVALUE 1
	NO CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAM_ORGANISATION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAM_SEGMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAMMEMBER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEAMMEMBERSHIP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEMP_TRX_HISTORY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEMPLATE_ITEM_CODE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEMPLATE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TEMPLATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE THRES_RATE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE THRES_RATE_ST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TITLEDOCUMENT_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TITLEDOCUMENT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TITLEDOCUMENT_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TRX_HISTORY_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE TRX_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE USER_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	CACHE 20
	NO ORDER;

CREATE SEQUENCE VALUATION_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE VIEW_REPORT_REQUEST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE WAIVER_REQUEST_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE WAIVER_REQUEST_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE WAREHOUSE_GROUP_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE WAREHOUSE_RECEIPT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE WAREHOUSE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE WAREHOUSE_STAGING_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE SEC_ENVELOPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;
	
CREATE SEQUENCE STG_SEC_ENVELOPE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;	
	
CREATE SEQUENCE SEC_ENVELOPE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;	
	
CREATE SEQUENCE STG_SEC_ENVELOPE_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_DOC_LOAN_APP_TYPE_SEQ AS INTEGER
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999
    MINVALUE 1
    CYCLE
    NO CACHE
    NO ORDER; 

CREATE SEQUENCE STAGE_CMS_DOC_LOAN_APP_TYPE_SEQ AS INTEGER
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999
    MINVALUE 1
    CYCLE
    NO CACHE
    NO ORDER;

----------------------------------------------------------------------
-- Tables
----------------------------------------------------------------------
CREATE TABLE BUS_PARAM ( 
	PARAMETER_PK   	BIGINT NOT NULL,
	PARAMETER_CODE 	VARCHAR(40) NOT NULL,
	PARAMETER_NAME 	VARCHAR(255),
	PARAMETER_VALUE	VARCHAR(255),
	VERSION_STATUS 	VARCHAR(20),
	ENTITY_ID      	BIGINT NOT NULL,
	VERSION_NUMBER 	DECIMAL(31,0),
	EFFECTIVE_DATE 	TIMESTAMP,
	VERSION_TIME   	BIGINT NOT NULL,
	STATUS         	CHARACTER(1),
	GROUP_CODE     	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX BUS_PARAM_I1
	ON BUS_PARAM(GROUP_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE BUS_PARAM
	ADD CONSTRAINT CC1169518086845
	PRIMARY KEY (PARAMETER_PK);

ALTER TABLE BUS_PARAM
	ADD CONSTRAINT UNI_BUS_PARAM
	UNIQUE (PARAMETER_CODE, PARAMETER_PK);

CREATE TABLE BUS_PARAM_GRP ( 
	GROUP_CODE  	VARCHAR(40) NOT NULL,
	GROUP_NAME  	VARCHAR(255),
	VERSION_TIME	BIGINT NOT NULL,
	STATUS      	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE BUS_PARAM_GRP
	ADD CONSTRAINT CC1169518725764
	PRIMARY KEY (GROUP_CODE);


CREATE TABLE CMS_DOC_LOAN_APP_TYPE (
    DOC_LOAN_ID BIGINT NOT NULL,
    APP_TYPE VARCHAR(10) NOT NULL,
    DOCUMENT_ID BIGINT,
    STATUS VARCHAR(10),
    CMS_REF_ID BIGINT,
    PRIMARY KEY (DOC_LOAN_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX"; 


CREATE TABLE STAGE_DOC_LOAN_APP_TYPE (
    DOC_LOAN_ID BIGINT NOT NULL,
    APP_TYPE VARCHAR(10) NOT NULL,
    DOCUMENT_ID BIGINT,
    STATUS VARCHAR(10),
    CMS_REF_ID BIGINT,
    PRIMARY KEY (DOC_LOAN_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX"; 

CREATE TABLE CMS_ACCOUNT_SEC_MAP ( 
	CMS_ACCOUNT_SEC_MAP_ID  	BIGINT,
	ASM_EXT_SYS_ACCOUNT_NUM 	VARCHAR(19),
	ASM_EXT_SYS_ACCOUNT_TYPE	CHARACTER(1),
	ASM_EXT_SYS_ACCOUNT_SEQ 	BIGINT,
	ASM_SRC_SECURITY_ID     	VARCHAR(19),
	CMS_LSP_SYS_XREF_ID     	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	STATUS                  	CHARACTER(1),
	last_allocation_date timestamp,
	allocated_amt decimal(30,12),
	security_sub_type_id varchar(30) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX ASM_IDX1
	ON CMS_ACCOUNT_SEC_MAP(CMS_COLLATERAL_ID, CMS_LSP_APPR_LMTS_ID, ASM_EXT_SYS_ACCOUNT_NUM, ASM_EXT_SYS_ACCOUNT_SEQ, ASM_SRC_SECURITY_ID)
	ALLOW REVERSE SCANS ;

create index account_sec_map_idx1 on cms_account_sec_map
(cms_lsp_sys_xref_id)
allow reverse scans;
		
CREATE TABLE CMS_ASSET (
  CMS_COLLATERAL_ID             BIGINT   NOT NULL,
  PHY_INSPECTION_FREQ           VARCHAR(10),
  LAST_PHY_INSPECT_DATE         TIMESTAMP,
  NEXT_PHY_INSPECT_DATE         TIMESTAMP,
  ENV_RISKY_STATUS              CHAR(2),
  ENV_RISKY_DATE                TIMESTAMP,
  ENV_RISKY_REMARK              VARCHAR(250),
  ASSET_DESCRIPTION             VARCHAR(250),
  TYPE_OF_ASSET                 VARCHAR(20),
  REG_NO                        VARCHAR(25),
  REG_FEE                       DECIMAL(17,2),
  REG_DATE                      TIMESTAMP,
  MANUFACTURE_YEAR              INT,
  BRAND                         VARCHAR(100),
  MODEL_NO                      VARCHAR(50),
  PURCHASE_PRICE                DECIMAL(21,6),
  PURCHASE_DATE                 TIMESTAMP,
  INVOICE_TYPE                  VARCHAR(50),
  AGENT_NAME                    VARCHAR(100),
  AGENT_LOCATION                VARCHAR(50),
  APPROVED_BUYER                VARCHAR(100),
  APPROVED_BUYER_LOCATION       VARCHAR(50),
  BANK_ACC_NO                   VARCHAR(20),
  RECEIVABLES_BY_BANK           CHAR(1),
  BANK_ACC_NO_LOCATION          VARCHAR(50),
  AGENT_BANK_RECEIVABLES        VARCHAR(50),
  AGENT_BANK_LOCATION           CHAR(2),
  INSURER_NAME                  VARCHAR(100),
  INSURANCE_TYPE                VARCHAR(50),
  INSURED_AGAINST               VARCHAR(50),
  INSURABLE_AMT                 DECIMAL(20,2),
  INSURED_AMT                   DECIMAL(20,2),
  INS_EFFECTIVE_DATE            TIMESTAMP,
  INS_EXPIRY_DATE               TIMESTAMP,
  POLICY_NO                     VARCHAR(50),
  COVERAGE_TYPE_OTHERS          VARCHAR(50),
  INSURERS                      VARCHAR(100),
  NOMINAL_VALUE                 DECIMAL(20,2),
  MARGIN_DEBTOR                 DECIMAL(5,2),
  MARGIN_STOCK                  DECIMAL(5,2),
  CMV_DEBTOR                    DECIMAL(20,2),
  FSV_DEBTOR                    DECIMAL(20,2),
  CMV_STOCK                     DECIMAL(20,2),
  FSV_STOCK                     DECIMAL(20,2),
  PHY_INSPECTION_DONE           CHAR(1),
  PHY_INSPECTION_FREQ_UNIT      CHAR(2),
  INS_TOTAL_COVERAGE            DECIMAL(20,2),
  INSR_CVR_STOCK_PERIOD         SMALLINT,
  INSR_CVR_STOCK_PERIOD_UNIT    CHAR(1),
  INSR_CVR_FAO_PERIOD           SMALLINT,
  INSR_CVR_FAO_PERIOD_UNIT      CHAR(1),
  MARGIN_FAO                    DECIMAL(5,2),
  CMV_FAO                       DECIMAL(20,2),
  FSV_FAO                       DECIMAL(20,2),
  LAST_USED_ID_IDX_STOCK        SMALLINT   WITH DEFAULT 0,
  LAST_USED_ID_IDX_FAO          SMALLINT   WITH DEFAULT 0,
  LAST_USED_ID_IDX_INSR         SMALLINT   WITH DEFAULT 0,
  STOCK_INSR_GRACE_PERIOD       SMALLINT,
  STOCK_INSR_GRACE_PERIOD_FREQ  CHAR(1),
  FAO_INSR_GRACE_PERIOD         SMALLINT,
  FAO_INSR_GRACE_PERIOD_FREQ    CHAR(1),
  BANK_SHARE_PCT                DECIMAL(5,2),
  OTHER_REMARKS                 VARCHAR(250),
  CURR_STK_INSR_SHORTFALL_AMT   DECIMAL(20,2),
  PREV_STK_INSR_SHORTFALL_AMT   DECIMAL(20,2),
  DRWG_PWR_LESS_INSR_GROSS_AMT  DECIMAL(20,2),
  DRWG_PWR_GROSS_AMT            DECIMAL(20,2),
  SALES_PROCEED                 DECIMAL(17,2),
  DEPRECIATE_RATE               DECIMAL(20,2),
  RESIDUAL_ASSET_LIFE           INTEGER,
  RESIDUAL_ASSET_LIFE_UOM       VARCHAR(10),
  ASSET_VALUE                   DECIMAL(20,2),
  SCRAP_VALUE                   DECIMAL(20,2),
  DOC_PERFECT_AGE               INTEGER,
  REG_CARD_NO                   VARCHAR(20),
  PREV_OWNER_NAME               VARCHAR(50),
  PREV_FINANCIER_NAME           VARCHAR(50),
  REPOSSESSION_DATE             DATE,
  REPOSSESSION_AGE              INTEGER,
  YARD                          VARCHAR(40),
  GOOD_STATUS                   VARCHAR(10),
  PROJECT_NAME                  VARCHAR(80),
  AWARDED_DATE                  DATE,
  LETTER_INSTRUCT_FLAG          CHAR(1),
  LETTER_UNDERTAKE_FLAG         CHAR(1),
  BLANKET_ASSIGNMENT            VARCHAR(80),
  CASH_VALUE_FOR_FORCE_SALE     CHAR(1),
  BOND_ISSUER_NAME              VARCHAR(40),
  BOND_ISSUED_DATE              TIMESTAMP,
  ASSET_TYPE_HOST_REF           VARCHAR(250),
  INIT_RESIDUAL_ASSET_LIFE      INTEGER,
  INIT_RESIDUAL_ASSET_LIFE_UOM  VARCHAR(10),
  INIT_RESIDUAL_ASSET_LIFE_DATE DATE,
  DEPRECIABLE_ASSET_VALUE       DECIMAL(20,2),
  DEPRECIABLE_ASSET_VALUE_DATE  DATE,
  PRI_CAVEAT_GUARANTEE_DATE    	TIMESTAMP,
  CHATTEL_SOLD_DATE				TIMESTAMP,
  RL_SERIAL_NO					VARCHAR(50),
  CHEQUE_DATE					TIMESTAMP,
  CHEQUE_REFERENCE_NO			VARCHAR(20),
  PUBLIC_TRANSPORT        		CHARACTER(1),
  INSPECTION_STATUS_NUM 		VARCHAR(40),
  INSPECTION_STATUS_VALUE  		VARCHAR(10),
  INTEREST_RATE					DECIMAL(11,9)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET
	ADD CONSTRAINT CC1169518763548
	PRIMARY KEY (CMS_COLLATERAL_ID);
	
CREATE INDEX CMS_ASSET_IDX1
	ON CMS_ASSET(REG_NO, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;	

CREATE INDEX CMS_ASSET_IDX2
	ON CMS_ASSET ("MODEL_NO" ASC, "BRAND" ASC, "MANUFACTURE_YEAR" ASC,
   			"GOOD_STATUS" ASC, "CMS_COLLATERAL_ID" ASC) 
   	ALLOW REVERSE SCANS;
   	
	
CREATE TABLE CMS_ASSET_TRADE_IN (
  ID BIGINT	NOT NULL,
  COLLATERAL_ID	BIGINT,
  REF_ID	BIGINT,
  MAKE	VARCHAR(100),
  MODEL	VARCHAR(50),
  YEAR_OF_MANUFACTURE	BIGINT,
  REGISTRATION_NO	VARCHAR(25),
  TRADE_IN_VALUE DECIMAL(20,2),
  TRADE_IN_DEPOSIT	DECIMAL(20,2), 
  CURRENCY_CODE	CHARACTER(3),
  VERSION_TIME	BIGINT
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET_TRADE_IN
	ADD CONSTRAINT CC1169518763547
	PRIMARY KEY (ID);
	
CREATE INDEX ASSET_TRADE_IN_IDX1
	ON CMS_ASSET_TRADE_IN (COLLATERAL_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE STAGE_ASSET_TRADE_IN  (
  ID BIGINT	NOT NULL,
  COLLATERAL_ID	BIGINT,
  REF_ID	BIGINT,
  MAKE	VARCHAR(100),
  MODEL	VARCHAR(50),
  YEAR_OF_MANUFACTURE	BIGINT,
  REGISTRATION_NO	VARCHAR(25),
  TRADE_IN_VALUE DECIMAL(20,2),
  TRADE_IN_DEPOSIT	DECIMAL(20,2),	
  CURRENCY_CODE	CHARACTER(3),
  VERSION_TIME	BIGINT
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_ASSET_TRADE_IN
	ADD CONSTRAINT CC1169518763546
	PRIMARY KEY (ID);

create index STAGE_ASSET_TRADE_IN_PK1 on STAGE_ASSET_TRADE_IN
(COLLATERAL_ID);	
	
CREATE TABLE CMS_ASSET_AIRCRAFT ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	INS_BROKER_UNDERTAKE    	CHARACTER(1),
	PROCESS_AGENT           	VARCHAR(100),
	PROCESS_AGENT_COUNTRY   	CHARACTER(2),
	SPECIALIST_LEGAL_OPINION	VARCHAR(250),
	EXPORT_CRD_AGENCY       	VARCHAR(100),
	GUARANTORS              	VARCHAR(100),
	AIRCRAFT_SERIAL_NO      	VARCHAR(50),
	MANUFACTURER_NAME       	VARCHAR(50),
	MANUFACTURE_WARRANTIES  	VARCHAR(50),
	ASSIGNORS               	VARCHAR(100),
	INSURE_ASMNT            	CHARACTER(1),
	AMT_ASSMNT_ISURE        	DECIMAL(20,2),
	EFFECTIVE_DATE_ASMNT    	TIMESTAMP,
	EXP_DATE_ASMNT          	TIMESTAMP,
	REINSURE_ASMNT          	CHARACTER(1),
	TRADEIN_VALUE               DECIMAL(17,2),
    TRADEIN_DEPOSIT             DECIMAL(17,2),
	EFFECTIVE_DATE_REINSURE 	TIMESTAMP,
	EXP_DATE_REINSURE       	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET_AIRCRAFT
	ADD CONSTRAINT ASSET_AIRCRAFT_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_ASSET_GOLD ( 
	CMS_COLLATERAL_ID  	BIGINT NOT NULL,
	GOLD_GRADE         	        VARCHAR(30),
	PURCHASE_RECEIPT_NO	        VARCHAR(40),
	GOLD_UNIT_PRICE_CURRENCY    CHAR(3),
	GOLD_UNIT_PRICE    	        DECIMAL(15,4),
	CERT_EXPIRY_DATE   	        TIMESTAMP,
	GOLD_WEIGHT        	        DECIMAL(15,6),
	GOLD_UOM           	        VARCHAR(30),
	AUCTION_DATE       	        TIMESTAMP,
	AUCTION_PRICE      	        DECIMAL(17,2),
	AUCTIONEER         	        VARCHAR(80),
	GOLD_UNIT_PRICE_UOM	        VARCHAR(30)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET_GOLD
	ADD CONSTRAINT ASSET_GOLD_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_ASSET_PDC ( 
	ASSET_PDC_ID             	BIGINT NOT NULL,
	CHEQUE_AMOUNT            	DECIMAL(20,2),
	CHEQUE_AMOUNT_CURRENCY   	CHARACTER(3),
	TYPE_OF_CHQ              	VARCHAR(20),
	TO_CREDIT                	VARCHAR(100),
	LOCATION_OF_BANK         	VARCHAR(50),
	RECEIVABLES_BY_BANK      	CHARACTER(1),
	DRAWEE_BANK              	VARCHAR(100),
	ISSUE_COUNTRY            	CHARACTER(3),
	ISSUE_DATE               	TIMESTAMP,
	EXPIRY_DATE              	TIMESTAMP,
	SECURITY_CUSTODIAN       	VARCHAR(100),
	EXCHANGE_CONTROL_OBTAINED	CHARACTER(1),
	CMS_COLLATERAL_ID        	BIGINT,
	MARGIN                   	DECIMAL(7,3),
	VALUE_BEFORE_MARGIN      	DECIMAL(20,2),
	VALUATION_DATE           	TIMESTAMP,
	VALUATION_CURRENCY       	VARCHAR(3),
	CMS_REF_ID               	BIGINT,
	STATUS                   	VARCHAR(10),
	CUSTODIAN_TYPE           	CHARACTER(1),
	SOURCE_SECURITY_ID       	VARCHAR(20),
	SOURCE_ID                	VARCHAR(10),
	EXCHANGE_CONTROL_DATE		TIMESTAMP,
    ISSUER						VARCHAR(40),
	VALUE_AFTER_MARGIN			DECIMAL(20,2)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX ASSET_PDC_I1
	ON CMS_ASSET_PDC(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_ASSET_PDC
	ADD CONSTRAINT CC1169518793221
	PRIMARY KEY (ASSET_PDC_ID);

CREATE TABLE CMS_ASSET_PLANT_EQUIP ( 
	CMS_COLLATERAL_ID  	BIGINT NOT NULL,
	PLANT_EQUIP_PURPOSE	VARCHAR(40),
	EQUIP_MF           	VARCHAR(40),
	EQUIP_RISK_GRADING 	VARCHAR(40),
	EQUIP_CODE         	VARCHAR(40),
	QUANTITY           	DECIMAL(9,2),
	SERIAL_NO			VARCHAR(50),
	INVOICE_NO			VARCHAR(50),
	PRICE_LIST          DECIMAL(17,2),
	DOWNPAYMENT_TRADEIN	DECIMAL(17,2),
	DOWNPAYMENT_CASH	DECIMAL(17,2),
	TRADEIN_VALUE		DECIMAL(17,2),
	INSPECTION_STATUS_NUM 	VARCHAR(40),
	INSPECTION_STATUS_VALUE VARCHAR(10),
	INVOICE_DATE 		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET_PLANT_EQUIP
	ADD CONSTRAINT ASSET_PLANT_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_ASSET_VEHICLE ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	COVERAGE_TYPE           	VARCHAR(20),
	CHASSIS_NUMBER          	VARCHAR(25),
	INS_INDICATOR           	CHARACTER(1),
	AUTO_DR_COLLATERAL_FEE  	CHARACTER(1),
	DOWNPAYMENT_TRADEIN     	DECIMAL(17,2),
	DOWNPAYMENT_CASH        	DECIMAL(17,2),
	FREIGHT_CHARGES         	DECIMAL(17,2),
	PRICE_LIST              	DECIMAL(17,2),
	HEAVYVEHICLE_TYPE       	CHARACTER(1),
	ENGINE_NUMBER           	VARCHAR(35),
	COE_AMOUNT              	DECIMAL(20,2),
	ENERGY_SOURCE           	VARCHAR(10),
	TRANSMISSION_TYPE       	CHARACTER(1),
	HORSE_POWER             	VARCHAR(20),
	VEHICLE_COLOR           	VARCHAR(20),
    PBT_PBR_INDICATOR           VARCHAR(40),
    PBT_PBR_PERIOD           	INTEGER,
	AMT_COLLECTED_FROM_SALES	DECIMAL(15,2),
	ROAD_TAX_AMT    			DECIMAL(15,2),
	ROAD_TAX_AMT_TYPE    		CHARACTER(1),
	ROAD_TAX_EXPIRY_DATE    	TIMESTAMP,
	ALLOW_PASSIVE    			CHARACTER(1),
	LOG_BOOK_NUMBER    			VARCHAR(50),
	ENGINE_CAPACITY    			VARCHAR(50),
	OWNERSHIP_CLAIM_NUMBER    	VARCHAR(50),
	YARD_OPTIONS    			CHARACTER(1),
	DEALER_NAME    				VARCHAR(40),
	E_HAK_MILIK_NUMBER    		VARCHAR(50),
	TRADEIN_VALUE				DECIMAL(17,2),
	INVOICE_DATE 			TIMESTAMP,
	INVOICE_NO				VARCHAR(50)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET_VEHICLE
	ADD CONSTRAINT CMS_ASSET_VEH_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);
	
CREATE INDEX CMS_ASSET_VEHICLE_IDX1
	ON CMS_ASSET_VEHICLE(CHASSIS_NUMBER, ENGINE_NUMBER, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;		

CREATE TABLE CMS_ASSET_VESSEL ( 
	CMS_COLLATERAL_ID    	BIGINT NOT NULL,
	VESSEL_NAME          	VARCHAR(60),
	REG_COUNTRY          	CHARACTER(2),
	VESSEL_STATE         	VARCHAR(10),
	EXPT_OCCUP_DATE      	TIMESTAMP,
	EXPT_OCCUP           	VARCHAR(60),
	OCCUP_TYPE           	VARCHAR(10),
	BUILD_YEAR           	INTEGER,
	PURCHASE_CURRENCY    	CHARACTER(3),
	BUILDER              	VARCHAR(60),
	MAIN_REG             	VARCHAR(40),
	LENGTH               	VARCHAR(40),
	WIDTH                	VARCHAR(40),
	DEPTH                	VARCHAR(40),
	DECK_LOADING         	VARCHAR(40),
	DECK_WEIGHT          	VARCHAR(40),
	SIDE_BOARD           	VARCHAR(40),
	BOW                  	VARCHAR(40),
	DECK                 	VARCHAR(40),
	DECK_THICKNESS       	VARCHAR(40),
	BOTTOM               	VARCHAR(40),
	WINCH_DRIVE          	VARCHAR(40),
	BHP                  	VARCHAR(40),
	SPEED                	VARCHAR(40),
	ANCHOR               	VARCHAR(40),
	ANCHOR_DRIVE         	VARCHAR(40),
	CLASS_SOCIETY        	VARCHAR(40),
	CONSTRUCT_COUNTRY    	CHARACTER(2),
	CONSTRUCT_PLACE      	VARCHAR(40),
	VESSEL_USE           	VARCHAR(60),
	CHARTER_CONTRACT     	CHARACTER(1),
	CHARTERER_NAME       	VARCHAR(40),
	CHARTER_PERIOD       	INTEGER,
	CHARTER_PERIOD_UNIT  	VARCHAR(10),
	CHARTER_AMT          	DECIMAL(20,2),
	CHARTER_CURRENCY     	CHARACTER(3),
	CHARTER_RATE_UNIT    	VARCHAR(10),
	CHARTER_RATE_UNIT_OTH	VARCHAR(40),
	TRADEIN_VALUE 			DECIMAL(20,2),
	TRADEIN_DEPOSIT 		DECIMAL(20,2),
	CHARTER_REMARKS      	VARCHAR(2000) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ASSET_VESSEL
	ADD CONSTRAINT CMS_ASST_VESSEL_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_ASST_GC_DEBTOR ( 
	CMS_ASST_GC_DEBTOR_ID    	BIGINT NOT NULL,
	CMS_COLLATERAL_ID        	BIGINT,
	MTH_1_DEBT_AMT           	DECIMAL(20,2),
	MTH_2_DEBT_AMT           	DECIMAL(20,2),
	MTH_3_DEBT_AMT           	DECIMAL(20,2),
	MTH_4_DEBT_AMT           	DECIMAL(20,2),
	MTH_5_DEBT_AMT           	DECIMAL(20,2),
	MTH_6_DEBT_AMT           	DECIMAL(20,2),
	MTH_7_DEBT_AMT           	DECIMAL(20,2),
	MTH_8_DEBT_AMT           	DECIMAL(20,2),
	MTH_9_DEBT_AMT           	DECIMAL(20,2),
	MTH_10_DEBT_AMT          	DECIMAL(20,2),
	MTH_11_DEBT_AMT          	DECIMAL(20,2),
	MTH_12_DEBT_AMT          	DECIMAL(20,2),
	MTH_MORE_THAN_12_DEBT_AMT	DECIMAL(20,2),
	APPLICABLE_PERIOD        	SMALLINT,
	APPLICABLE_PERIOD_UNIT   	CHARACTER(1),
	GROSS_VALUE              	DECIMAL(20,2),
	NET_VALUE                	DECIMAL(20,2),
	DEBT_AMT_CCY             	CHARACTER(3),
	TOTAL_APPLICABLE_DEBTOR  	DECIMAL(20,2),
	NET_VALUE_CCY            	CHARACTER(3),
	VALUATION_DATE           	TIMESTAMP,
	REVAL_FREQ               	SMALLINT,
	REVAL_FREQ_UNIT          	CHARACTER(1),
	TRADEIN_VALUE 				DECIMAL(20,2),
	TRADEIN_DEPOSIT 			DECIMAL(20,2),
	REVALUATION_DATE         	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX AST_GC_DBT_U1
	ON CMS_ASST_GC_DEBTOR(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_ASST_GC_DEBTOR
	ADD CONSTRAINT CC1169518832477
	PRIMARY KEY (CMS_ASST_GC_DEBTOR_ID);

CREATE TABLE CMS_ASST_GC_FXASST_OTHR ( 
	CMS_ASST_GC_FAO_ID	BIGINT NOT NULL,
	CMS_COLLATERAL_ID 	BIGINT,
	FXASST_OTHR_ID    	VARCHAR(20),
	STATUS            	VARCHAR(20),
	DESCRIPTION       	VARCHAR(100),
	ADDRESS           	VARCHAR(100),
	VALUATION_DATE    	TIMESTAMP,
	VALUATION_CCY     	CHARACTER(3),
	REVAL_FREQ        	SMALLINT,
	REVAL_FREQ_UNIT   	CHARACTER(1),
	REVALUATION_DATE  	TIMESTAMP,
	GROSS_VALUE       	DECIMAL(20,2),
	MARGIN            	DECIMAL(5,2),
	VALUER            	VARCHAR(100),
	NET_VALUE         	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX AST_GC_FXO_U1
	ON CMS_ASST_GC_FXASST_OTHR(CMS_COLLATERAL_ID, FXASST_OTHR_ID, STATUS)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_ASST_GC_FXASST_OTHR
	ADD CONSTRAINT CC1169518861569
	PRIMARY KEY (CMS_ASST_GC_FAO_ID);

CREATE TABLE CMS_ASST_GC_INSR_FAO_MAP ( 
	CMS_ASST_GC_INSR_FAO_MAP_ID	BIGINT NOT NULL,
	CMS_REF_ID                 	BIGINT NOT NULL,
	STATUS                     	VARCHAR(20),
	CMS_COLLATERAL_ID          	BIGINT,
	INSR_ID                    	VARCHAR(20),
	FXASST_OTHR_ID             	VARCHAR(20),
	INSR_COVERAGE_AMT          	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX AST_GC_INF_I1
	ON CMS_ASST_GC_INSR_FAO_MAP(CMS_COLLATERAL_ID, INSR_ID, FXASST_OTHR_ID, STATUS)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_ASST_GC_INSR_FAO_MAP
	ADD CONSTRAINT CC1169518981111
	PRIMARY KEY (CMS_ASST_GC_INSR_FAO_MAP_ID);

CREATE TABLE CMS_ASST_GC_INSR_STK_MAP ( 
	CMS_ASST_GC_INSR_STK_MAP_ID	BIGINT NOT NULL,
	CMS_REF_ID                 	BIGINT NOT NULL,
	STATUS                     	VARCHAR(20),
	CMS_COLLATERAL_ID          	BIGINT,
	INSR_ID                    	VARCHAR(20),
	STOCK_ID                   	VARCHAR(20),
	INSR_COVERAGE_AMT          	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX AST_GS_INS_I3
	ON CMS_ASST_GC_INSR_STK_MAP(CMS_COLLATERAL_ID, INSR_ID, STOCK_ID, STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX AST_GC_INS_I1
	ON CMS_ASST_GC_INSR_STK_MAP(INSR_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX AST_GC_INS_I2
	ON CMS_ASST_GC_INSR_STK_MAP(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_ASST_GC_INSR_STK_MAP
	ADD CONSTRAINT CC1169519020267
	PRIMARY KEY (CMS_ASST_GC_INSR_STK_MAP_ID);

CREATE TABLE CMS_ASST_GC_STOCK ( 
	CMS_ASST_GC_STOCK_ID        	BIGINT NOT NULL,
	CMS_COLLATERAL_ID           	BIGINT,
	STOCK_ID                    	VARCHAR(20) NOT NULL,
	STATUS                      	VARCHAR(20),
	VALUATION_CCY               	CHARACTER(3),
	VALUATION_DATE              	TIMESTAMP,
	GROSS_VALUE                 	DECIMAL(20,2),
	MARGIN                      	DECIMAL(5,2),
	REVAL_FREQ                  	SMALLINT,
	REVAL_FREQ_UNIT             	CHARACTER(1),
	REVALUATION_DATE            	TIMESTAMP,
	VAL_RAW_MATERIAL_AMT        	DECIMAL(20,2),
	VAL_RAW_MATERIAL_MARGIN     	DECIMAL(5,2),
	VAL_FINISH_GOODS_AMT        	DECIMAL(20,2),
	VAL_FINISH_GOODS_MARGIN     	DECIMAL(5,2),
	VAL_WORK_PROGRESS_AMT       	DECIMAL(20,2),
	VAL_WORK_PROGRESS_MARGIN    	DECIMAL(5,2),
	VAL_GOODS_TRANSIT_AMT       	DECIMAL(20,2),
	VAL_GOODS_TRANSIT_MARGIN    	DECIMAL(5,2),
	VAL_STORES_SPARES_AMT       	DECIMAL(20,2),
	VAL_STORES_SPARES_MARGIN    	DECIMAL(5,2),
	VAL_OTHER_MERCHANDISE_AMT   	DECIMAL(20,2),
	VAL_OTHER_MERCHANDISE_MARGIN	DECIMAL(5,2),
	OWE_CREDITOR_AMT            	DECIMAL(20,2),
	PHY_INSPECTION_DONE         	CHARACTER(1),
	PHY_INSPECTION_FREQ         	SMALLINT,
	PHY_INSPECTION_FREQ_UNIT    	VARCHAR(2),
	LAST_PHY_INSPECT_DATE       	TIMESTAMP,
	NEXT_PHY_INSPECT_DATE       	TIMESTAMP,
	ADDRESS                     	VARCHAR(150),
	VALUER                      	VARCHAR(100),
	NET_VALUE                   	DECIMAL(20,2),
	RECOVERABLE_AMT             	DECIMAL(20,2),
	RECOVERABLE_AMT_CCY         	CHARACTER(3) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX AST_GC_STK_U1
	ON CMS_ASST_GC_STOCK(CMS_COLLATERAL_ID, STOCK_ID, STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX AST_GC_STK_I1
	ON CMS_ASST_GC_STOCK(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX AST_GC_STK_I2
	ON CMS_ASST_GC_STOCK(NEXT_PHY_INSPECT_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_ASST_GC_STOCK
	ADD CONSTRAINT CC1169519151916
	PRIMARY KEY (CMS_ASST_GC_STOCK_ID);

CREATE TABLE CMS_AUTH_REPORT ( 
	USER_ID   	BIGINT,
	REPORT_ID 	BIGINT,
	SID       	BIGINT,
	REQUEST_TS	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_AUTHENTICATION ( 
	LOGIN_ID                  	VARCHAR(30) NOT NULL,
	ROLE                      	VARCHAR(30) NOT NULL,
	PASSWORD                  	VARCHAR(50) NOT NULL,
	PWD_SET_DATE              	TIMESTAMP NOT NULL,
	FORCE_PWD_CHANGE          	VARCHAR(30),
	LAST_LOGIN_TIME           	TIMESTAMP,
	LAST_LOGOUT_TIME          	TIMESTAMP,
	STATUS                    	VARCHAR(30) NOT NULL,
	LOGIN_ATTEMPTS            	BIGINT,
	FORCE_LOGINID_CHANGE      	VARCHAR(30),
	SECONDARY_PWD             	VARCHAR(50),
	SECONDARY_PWD_SET_DATE    	TIMESTAMP,
	FORCE_SECONDARY_PWD_CHANGE	VARCHAR(30),
	SECONDARY_PWD_ATTEMPTS    	BIGINT,
	SECONDARY_PWD_STATUS      	VARCHAR(30),
	SESSION_EXPIRY            	BIGINT,
	PASSWORD_POLICY_ID        	BIGINT NOT NULL,
	CREDENTIALS_REF_ID        	BIGINT NOT NULL,
	LAST_ACCESS_TIME			TIMESTAMP,
	LAST_LOGIN_IP 				varchar(15),
	LAST_LOGOUT_IP 				varchar(15)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_AUTHENTICATION
	ADD CONSTRAINT CC1169519191203
	PRIMARY KEY (LOGIN_ID, ROLE);


CREATE TABLE CMS_BATCH_CIF_FUSION ( 
	CMS_BATCH_CIF_FUSION_ID	BIGINT NOT NULL,
	OLD_LE_ID              	VARCHAR(20) NOT NULL,
	NEW_LE_ID              	VARCHAR(20) NOT NULL,
	SOURCE_ID              	VARCHAR(10),
	PROCESSED_IND          	CHARACTER(1),
	TIME_RECEIVED          	TIMESTAMP,
	TIME_PROCESSED         	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_BATCH_CIF_UPDATE ( 
	CMS_BATCH_CIF_UPDATE_ID	BIGINT NOT NULL,
	LE_ID                  	VARCHAR(20) NOT NULL,
	SOURCE_ID              	VARCHAR(10),
	PROCESSED_IND          	CHARACTER(1),
	TIME_RECEIVED          	TIMESTAMP,
	TIME_PROCESSED         	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_BATCH_DDN_DOC ( 
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	DDN_ISSUED            	CHARACTER(1),
	DDN_ID                	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX BCH_DDN_DOC_I1
	ON CMS_BATCH_DDN_DOC(DDN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_BATCH_DDN_DOC
	ADD CONSTRAINT CC1169519257048
	PRIMARY KEY (CMS_LSP_LMT_PROFILE_ID);

CREATE TABLE CMS_BCA_COBORROWER_MAP ( 
	CMS_LSP_LMT_PROFILE_ID   	BIGINT NOT NULL,
	CMS_BCA_STATUS           	VARCHAR(20),
	CMS_BCA_TAT_CREATE_DATE  	TIMESTAMP,
	CMS_CUSTOMER_ID          	BIGINT NOT NULL,
	LSP_LE_ID                	VARCHAR(20),
	LSP_SHORT_NAME           	VARCHAR(100),
	CMS_SUB_ORIG_COUNTRY     	CHARACTER(2),
	CMS_SUB_ORIG_ORGANISATION	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BCA_COBORROWER_MAP
	ADD CONSTRAINT CC1169519325856
	PRIMARY KEY (CMS_LSP_LMT_PROFILE_ID, CMS_CUSTOMER_ID);

CREATE TABLE CMS_BCA_PLEDGOR_MAP ( 
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	CMS_BCA_STATUS         	VARCHAR(20),
	CMS_BCA_TAT_CREATE_DATE	TIMESTAMP,
	CMS_PLEDGOR_DTL_ID     	BIGINT NOT NULL,
	PLG_LE_ID              	VARCHAR(20),
	PLG_PLEDGOR_ID         	BIGINT,
	PLG_LEGAL_NAME         	VARCHAR(100),
	PLEDGOR_COUNTRY        	CHARACTER(2),
	PLEDGOR_ORGANISATION   	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BCA_PLEDGOR_MAP
	ADD CONSTRAINT CC1169519364312
	PRIMARY KEY (CMS_LSP_LMT_PROFILE_ID, CMS_PLEDGOR_DTL_ID);

CREATE TABLE CMS_BCA_SEC_MAP ( 
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	CMS_CUSTOMER_ID       	BIGINT NOT NULL,
	CMS_COLLATERAL_ID     	BIGINT NOT NULL,
	SCI_SECURITY_DTL_ID   	VARCHAR(20) NOT NULL,
	LE_ID                 	VARCHAR(20) NOT NULL,
	CMS_ORIG_COUNTRY      	VARCHAR(20) NOT NULL,
	CMS_ORIG_ORGANISATION 	VARCHAR(20) NOT NULL,
	SECURITY_LOCATION     	VARCHAR(20) NOT NULL,
	CMS_BCA_STATUS        	VARCHAR(20),
	SECURITY_STATUS       	VARCHAR(20),
	SECURITY_ORGANISATION 	VARCHAR(20),
	CB_CUSTOMER_ID        	BIGINT NOT NULL,
	CB_ORIG_COUNTRY       	VARCHAR(20),
	CB_ORIG_ORGANISATION  	VARCHAR(20),
	CUSTOMER_CATEGORY     	CHARACTER(2) NOT NULL,
	LSP_SHORT_NAME        	VARCHAR(100),
	LSP_LE_ID             	VARCHAR(20),
	CB_LEGAL_NAME         	VARCHAR(100),
	CB_LE_ID              	VARCHAR(20),
	FAM_CODE              	VARCHAR(10),
	FAM_NAME              	VARCHAR(100),
	CUSTOMER_SEGMENT      	VARCHAR(255),
	LLP_ID                	BIGINT,
	LSP_ID                	BIGINT,
	CB_LSP_ID             	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BCA_SEC_MAP
	ADD CONSTRAINT PK_CMS_BCA_SEC_LI1
	PRIMARY KEY (CUSTOMER_CATEGORY, CMS_LSP_LMT_PROFILE_ID, CMS_CUSTOMER_ID, CMS_COLLATERAL_ID, SCI_SECURITY_DTL_ID, LE_ID, CMS_ORIG_COUNTRY, CMS_ORIG_ORGANISATION, SECURITY_LOCATION, CB_CUSTOMER_ID);

CREATE TABLE CMS_BFL_TAT_PARAM ( 
	BFL_TAT_ID   	BIGINT NOT NULL,
	BCA_TYPE     	VARCHAR(20),
	BFL_TYPE     	VARCHAR(100),
	SEGMENT      	VARCHAR(10),
	COUNTRY      	VARCHAR(20),
	LOCAL_DAYS   	BIGINT,
	OVERSEAS_DAYS	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX BFL_TAT_PRM_U1
	ON CMS_BFL_TAT_PARAM(BCA_TYPE, BFL_TYPE, SEGMENT, COUNTRY)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_BFL_TAT_PARAM
	ADD CONSTRAINT CC1169519421834
	PRIMARY KEY (BFL_TAT_ID);

CREATE TABLE CMS_BL_BUILDUP ( 
	BUILDUP_ID         	BIGINT NOT NULL,
	PROJECT_ID         	BIGINT,
	PROPERTY_TYPE      	VARCHAR(5),
	UNIT_ID            	VARCHAR(30),
	BLOCK_NO           	VARCHAR(30),
	TITLE_NO           	VARCHAR(30),
	UNIT_NO            	VARCHAR(30),
	UNIT_DISCHARGE_IND 	CHARACTER(1),
	APPROX_AREA_UOM    	VARCHAR(10),
	APPROX_AREA        	DECIMAL(7,2),
	SEC_APPROX_AREA_UOM	VARCHAR(10),
	SEC_APPROX_AREA    	DECIMAL(7,2),
	REDEMPTION_CURRENCY	VARCHAR(3),
	REDEMPTION_AMOUNT  	DECIMAL(20,2),
	SALES_CURRENCY     	VARCHAR(3),
	SALES_AMOUNT       	DECIMAL(20,2),
	SALES_DATE         	TIMESTAMP,
	PURCHASER_NAME     	VARCHAR(100),
	END_FINANCIER      	VARCHAR(100),
	REMARKS            	VARCHAR(500),
	TENANCY_DATE       	TIMESTAMP,
	TENANCY_NAME       	VARCHAR(100),
	TENANCY_PERIOD_UOM 	VARCHAR(3),
	TENANCY_PERIOD     	DECIMAL(3,0),
	TENANCY_EXPIRY_DATE	TIMESTAMP,
	RENTAL_CURRENCY    	VARCHAR(3),
	RENTAL_AMOUNT      	DECIMAL(20,2),
	PAYMENT_FREQ       	VARCHAR(5),
	COMMON_REF_ID      	BIGINT,
	IS_DELETED         	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_BUILDUP
	ADD CONSTRAINT BL_BUL_ID_PK
	PRIMARY KEY (BUILDUP_ID);

CREATE TABLE CMS_BL_DEVELOPMENT_DOCUMENT ( 
	DEV_DOC_ID   	BIGINT NOT NULL,
	SCHEDULE_ID  	BIGINT,
	DOC_NAME     	VARCHAR(100),
	DOC_REF      	VARCHAR(50),
	RECEIVE_DATE 	TIMESTAMP,
	DOC_DATE     	TIMESTAMP,
	COMMON_REF_ID	BIGINT,
	IS_DELETED   	CHARACTER(1),
	REMARKS      	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_DEVELOPMENT_DOCUMENT
	ADD CONSTRAINT BL_DEV_ID_PK
	PRIMARY KEY (DEV_DOC_ID);

CREATE TABLE CMS_BL_DISBURSEMENT ( 
	DISBURSEMENT_ID	BIGINT NOT NULL,
	PROJECT_ID     	BIGINT,
	PURPOSE        	VARCHAR(10),
	COMMON_REF_ID  	BIGINT,
	IS_DELETED     	CHARACTER(1),
	REMARKS        	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_DISBURSEMENT
	ADD CONSTRAINT BL_DISB_ID_PK
	PRIMARY KEY (DISBURSEMENT_ID);

CREATE TABLE CMS_BL_DISBURSEMENT_DETAIL ( 
	DISBURSE_DETAIL_ID	BIGINT NOT NULL,
	DISBURSEMENT_ID   	BIGINT,
	DISBURSE_DATE     	TIMESTAMP,
	SUB_PURPOSE       	VARCHAR(10),
	INVOICE_NO        	VARCHAR(30),
	INVOICE_CURRENCY  	VARCHAR(3),
	INVOICE_AMOUNT    	DECIMAL(20,2),
	DISBURSE_CURRENCY 	VARCHAR(3),
	DISBURSE_AMOUNT   	DECIMAL(20,2),
	DISBURSE_MODE     	VARCHAR(10),
	PAYEE             	VARCHAR(150),
	REFERENCE_NO      	VARCHAR(30),
	GL_REFERENCE_NO   	VARCHAR(30),
	COMMON_REF_ID     	BIGINT,
	IS_DELETED        	CHARACTER(1),
	REMARKS           	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_DISBURSEMENT_DETAIL
	ADD CONSTRAINT BL_DIS_DTL_ID_PK
	PRIMARY KEY (DISBURSE_DETAIL_ID);

CREATE TABLE CMS_BL_FDR ( 
	FDR_ID       	BIGINT NOT NULL,
	PROJECT_ID   	BIGINT,
	FDR_DATE     	TIMESTAMP,
	ACCOUNT_NO   	VARCHAR(25),
	FDR_CURRENCY 	VARCHAR(3),
	FDR_AMOUNT   	DECIMAL(20,2),
	REFERENCE_NO 	VARCHAR(30),
	COMMON_REF_ID	BIGINT,
	IS_DELETED   	CHARACTER(1),
	REMARKS      	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_FDR
	ADD CONSTRAINT BL_FDR_ID_PK
	PRIMARY KEY (FDR_ID);

CREATE TABLE CMS_BL_PROJECT_SCHEDULE ( 
	SCHEDULE_ID      	BIGINT NOT NULL,
	PROJECT_ID       	BIGINT,
	PROGRESS_STAGE   	VARCHAR(100),
	START_DATE       	TIMESTAMP,
	END_DATE         	TIMESTAMP,
	ACTUAL_START_DATE	TIMESTAMP,
	ACTUAL_END_DATE  	TIMESTAMP,
	COMMON_REF_ID    	BIGINT,
	IS_DELETED       	CHARACTER(1),
	REMARKS          	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_PROJECT_SCHEDULE
	ADD CONSTRAINT BL_SCHD_ID_PK
	PRIMARY KEY (SCHEDULE_ID);

CREATE TABLE CMS_BL_PROPERTY_TYPE ( 
	PROPERTY_TYPE_ID    	BIGINT NOT NULL,
	PROJECT_ID          	BIGINT,
	PROPERTY_TYPE       	VARCHAR(5),
	PROPERTY_TYPE_OTHERS	VARCHAR(50),
	NO_OF_UNITS         	DECIMAL(5,0),
	COMMON_REF_ID       	BIGINT,
	IS_DELETED          	CHARACTER(1),
	REMARKS             	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_PROPERTY_TYPE
	ADD CONSTRAINT BL_PROP_ID_PK
	PRIMARY KEY (PROPERTY_TYPE_ID);

CREATE TABLE CMS_BL_SALES_PROCEEDS ( 
	PROCEEDS_ID        	BIGINT NOT NULL,
	BUILDUP_ID         	BIGINT,
	PROCEEDS_DATE      	DATE,
	PURPOSE            	VARCHAR(10),
	PURPOSE_PERCENT    	DECIMAL(4,1),
	BANK_NAME          	VARCHAR(100),
	CHEQUE_NO          	VARCHAR(50),
	RECEIVE_CURRENCY   	VARCHAR(3),
	RECEIVE_AMOUNT     	DECIMAL(20,2),
	STATUS             	VARCHAR(3),
	REMARKS            	VARCHAR(500),
	DISTRIBUTE_DATE    	TIMESTAMP,
	DISTRIBUTE_CURRENCY	VARCHAR(3),
	DISTRIBUTE_AMOUNT  	DECIMAL(20,2),
	TL_IND             	CHARACTER(1),
	TL_CURRENCY        	VARCHAR(3),
	TL_AMOUNT          	DECIMAL(20,2),
	OD_IND             	CHARACTER(1),
	OD_CURRENCY        	VARCHAR(3),
	OD_AMOUNT          	DECIMAL(20,2),
	FDR_IND            	CHARACTER(1),
	FDR_CURRENCY       	VARCHAR(3),
	FDR_AMOUNT         	DECIMAL(20,2),
	HDA_IND            	CHARACTER(1),
	HDA_CURRENCY       	VARCHAR(3),
	HDA_AMOUNT         	DECIMAL(20,2),
	OTHERS_IND         	CHARACTER(1),
	OTHERS_ACCOUNT     	VARCHAR(25),
	OTHERS_CURRENCY    	VARCHAR(3),
	OTHERS_AMOUNT      	DECIMAL(20,2),
	COMMON_REF_ID      	BIGINT,
	IS_DELETED         	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_SALES_PROCEEDS
	ADD CONSTRAINT BL_SALE_ID_PK
	PRIMARY KEY (PROCEEDS_ID);

CREATE TABLE CMS_BL_SETTLEMENT ( 
	SETTLEMENT_ID       	BIGINT NOT NULL,
	PROJECT_ID          	BIGINT,
	SETTLEMENT_DATE     	TIMESTAMP,
	SETTLED_CURRENCY    	VARCHAR(3),
	SETTLED_AMOUNT      	DECIMAL(20,2),
	OUTSTANDING_CURRENCY	VARCHAR(3),
	OUTSTANDING_AMOUNT  	DECIMAL(20,2),
	COMMON_REF_ID       	BIGINT,
	IS_DELETED          	CHARACTER(1),
	REMARKS             	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BL_SETTLEMENT
	ADD CONSTRAINT BL_SETT_ID_PK
	PRIMARY KEY (SETTLEMENT_ID);

CREATE TABLE CMS_BRIDGING_LOAN ( 
	PROJECT_ID              	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	PROJECT_NUMBER          	VARCHAR(50),
	CONTRACT_DATE           	TIMESTAMP,
	CONTRACTED_CURRENCY     	VARCHAR(3),
	CONTRACTED_AMOUNT       	DECIMAL(20,2),
	FINANCE_PERCENT         	DECIMAL(5,2),
	CONTRACT_SETTLEMENT_DATE	TIMESTAMP,
	COLLECTION_ACCOUNT      	VARCHAR(25),
	HDA_ACCOUNT             	VARCHAR(25),
	PROJECT_ACCOUNT         	VARCHAR(25),
	CURRENT_ACCOUNT         	VARCHAR(25),
	NO_OF_TYPE              	DECIMAL(2,0),
	NO_OF_UNITS             	DECIMAL(4,0),
	EXPECTED_START_DATE     	TIMESTAMP,
	EXPECTED_COMPLETION_DATE	TIMESTAMP,
	ACTUAL_START_DATE       	TIMESTAMP,
	ACTUAL_COMPLETION_DATE  	TIMESTAMP,
	AVAILABILITY_EXPIRY_DATE	TIMESTAMP,
	FULL_SETTLEMENT_DATE    	TIMESTAMP,
	IS_DELETED              	CHARACTER(1),
	REMARKS                 	VARCHAR(2000),
	VERSION_TIME            	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_BRIDGING_LOAN
	ADD CONSTRAINT BL_PROJ_ID_PK
	PRIMARY KEY (PROJECT_ID);

CREATE TABLE CMS_CASH ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	TOTAL_DEPOSIT_AMT       	DECIMAL(20,2),
	COUNT_DEPOSIT           	SMALLINT,
	INTEREST_CAPITIALISATION	CHARACTER(1),
	MINIMAL_FSV             	DECIMAL(20,2),
	MINIMAL_FSV_CURRENCY    	CHARACTER(3),
	HOLDING_PERIOD          	DECIMAL(9,3),
	HOLDING_PERIOD_UOM      	VARCHAR(10),
	PRI_CAVEAT_GUARANTEE_DATE	TIMESTAMP,
	DESCRIPTION					VARCHAR(250),
	CREDIT_CARD_FD_REF_NO		VARCHAR(50),
	ISSUER						VARCHAR(100)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CASH
	ADD CONSTRAINT CC1169519529319
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_CASH_DEPOSIT ( 
	CASH_DEPOSIT_ID         	BIGINT NOT NULL,
	DEPOSIT_RECEIPT_NUMBER  	VARCHAR(25),
	DEPOSIT_AMOUNT          	DECIMAL(30,4),
	DEPOSIT_AMOUNT_CURRENCY 	CHARACTER(3),
	DEPOSIT_MATURITY_DATE   	TIMESTAMP,
	CMS_COLLATERAL_ID       	BIGINT,
	CMS_REF_ID              	BIGINT,
	STATUS                  	VARCHAR(10),
	FDR_RATE                	DECIMAL(11,9),
	ISSUE_DATE              	TIMESTAMP,
	THIRD_PARTY_BANK        	VARCHAR(1),
	ACCOUNT_TYPE_NUM        	VARCHAR(15),
	ACCOUNT_TYPE_VALUE      	VARCHAR(15),
	SHARED_SECURITY_IND     	CHARACTER(1),
	SECURITY_DEPOSIT_IND    	CHARACTER(1),
	SOURCE_SECURITY_ID      	VARCHAR(50),
	SOURCE_ID               	VARCHAR(10),
	DEPOSIT_NUMBER          	VARCHAR(15),
	DEPOSIT_REFERENCE_NUMBER	VARCHAR(20),
	IS_OWN_BANK					CHARACTER(1),
	GROUP_ACCOUNT_NO			VARCHAR(50),
	TENURE						BIGINT,
	TENURE_UNIT					CHARACTER(1),
	HOLD_STATUS					CHAR(1),
	HAS_VALIDATE				CHAR(1)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CASH_DEP_I1
	ON CMS_CASH_DEPOSIT(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CASH_DEP_I2
	ON CMS_CASH_DEPOSIT(DEPOSIT_RECEIPT_NUMBER, SOURCE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CASH_DEPOSIT
	ADD CONSTRAINT CC1169519611487
	PRIMARY KEY (CASH_DEPOSIT_ID);

CREATE TABLE CMS_CASH_MARGIN ( 
	CASH_MARGIN_ID	BIGINT NOT NULL,
	AGREEMENT_ID  	BIGINT NOT NULL,
	TRX_DATE      	TIMESTAMP,
	NAP_CURRENCY  	CHARACTER(3),
	NAP           	DECIMAL(21,6),
	NAP_SIGN_ADD  	CHARACTER(1),
	CASH_INTEREST 	DECIMAL(21,6),
	GROUP_ID      	BIGINT NOT NULL,
	STATUS        	VARCHAR(20),
	VERSION_TIME  	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CASH_MARGIN
	ADD CONSTRAINT CASH_MARGIN_PK
	PRIMARY KEY (CASH_MARGIN_ID);

CREATE TABLE CMS_CC_DOC_LOC ( 
	DOC_LOC_ID            	BIGINT NOT NULL,
	SUB_CATEGORY          	VARCHAR(20) NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT,
	CMS_LE_SUB_PROFILE_ID 	BIGINT,
	CMS_PLEDGOR_DTL_ID    	BIGINT,
	DOC_ORIG_COUNTRY      	VARCHAR(20),
	DOC_ORIG_ORGANISATION 	VARCHAR(20),
	REMARKS               	VARCHAR(350),
	IS_DELETED            	CHARACTER(1),
	VERSION_TIME          	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CC_DOC_LOC_I1
	ON CMS_CC_DOC_LOC(CMS_LSP_LMT_PROFILE_ID, CMS_LE_SUB_PROFILE_ID, CMS_PLEDGOR_DTL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CC_DOC_LOC
	ADD CONSTRAINT CC1169519976572
	PRIMARY KEY (DOC_LOC_ID);

CREATE TABLE CMS_CC_TASK ( 
	TASK_ID               	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	CMS_PLEDGOR_DTL_ID    	BIGINT,
	CMS_LMP_SUB_PROFILE_ID	BIGINT,
	CATEGORY              	VARCHAR(40),
	DMCL_CNTRY_ISO_CODE   	CHARACTER(2),
	ORG_CODE              	VARCHAR(20),
	REMARKS               	VARCHAR(256),
	VERSION_TIME          	BIGINT,
	IS_DELETED            	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CC_TASK_I1
	ON CMS_CC_TASK(CMS_LMP_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CC_TASK_I2
	ON CMS_CC_TASK(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CC_TASK
	ADD CONSTRAINT CC1169520029338
	PRIMARY KEY (TASK_ID);

CREATE TABLE CMS_CCC_GENERATED ( 
	CCC_ID                 	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	CMS_LE_SUB_PROFILE_ID  	BIGINT,
	CMS_PLEDGOR_DTL_ID     	BIGINT,
	CHECKLIST_ID           	BIGINT,
	SUB_CATEGORY           	VARCHAR(20) NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	DOUBLE,
	CCC_REF                	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	VARCHAR(20),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	VARCHAR(20),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	BCA_EXT_RVW_DATE       	TIMESTAMP,
	BCA_APPR_DATE          	TIMESTAMP,
	BCA_NEXT_RVW_DATE      	TIMESTAMP,
	BCA_ORIG_CTRY          	VARCHAR(20),
	BCA_ORIG_ORG           	VARCHAR(20),
	BCA_APPR_AUTHORITY     	VARCHAR(100),
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	BFL_ISSUED_DATE        	TIMESTAMP,
	LEGAL_NAME             	VARCHAR(100),
	CUST_NAME              	VARCHAR(100),
	CUST_SEGMENT           	VARCHAR(10),
	CREDIT_GRADE_CODE      	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CCC_GEN_I4
	ON CMS_CCC_GENERATED(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CCC_GEN_I2
	ON CMS_CCC_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CCC_GEN_I3
	ON CMS_CCC_GENERATED(CMS_PLEDGOR_DTL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CCC_GEN_I1
	ON CMS_CCC_GENERATED(CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CCC_GEN_I5
	ON CMS_CCC_GENERATED(GENERATION_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CCC_GENERATED
	ADD CONSTRAINT CC1169520156401
	PRIMARY KEY (CCC_ID);

CREATE TABLE CMS_CCC_GENERATED_ITEM ( 
	CCC_ITEM_ID         	BIGINT NOT NULL,
	CCC_ID              	BIGINT,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	IS_DELETED          	CHARACTER(1),
	ACTIVATED_LIMIT_CCY 	CHARACTER(3),
	ACTIVATED_LIMIT     	DECIMAL(20,2) NOT NULL,
	CCC_ITEM_REF        	BIGINT,
	LIMIT_TYPE          	VARCHAR(10),
	MATURITY_DATE       	TIMESTAMP,
	LMT_AMT_CCY         	CHARACTER(3),
	LMT_AMT             	DECIMAL(20,0),
	PRD_TYPE            	VARCHAR(10),
	LMT_BKG_CTRY        	VARCHAR(20),
	LMT_BKG_ORG         	VARCHAR(20),
	OUTER_LMT_REF       	BIGINT,
	COBORROWER_LEID     	VARCHAR(20),
	COBORROWER_NAME     	VARCHAR(100),
	LMT_APPROVAL_DATE   	TIMESTAMP,
	CLEAN_TYPE          	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CCC_GEN_ITM_I1
	ON CMS_CCC_GENERATED_ITEM(CCC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CCC_GENERATED_ITEM
	ADD CONSTRAINT CC1169520268552
	PRIMARY KEY (CCC_ITEM_ID);

ALTER TABLE CMS_CCC_GENERATED_ITEM
	ADD CONSTRAINT SQL070123141924960
	FOREIGN KEY(CCC_ID)
	REFERENCES CMS_CCC_GENERATED(CCC_ID)
	ON DELETE NO ACTION 
	ON UPDATE NO ACTION ;

CREATE TABLE CMS_CF_ADVANCE ( 
	ADVANCE_ID             	BIGINT NOT NULL,
	CONTRACT_ID            	BIGINT,
	FACILITY_TYPE_ID       	BIGINT,
	REFERENCE_NO           	VARCHAR(30),
	DRAWDOWN_DATE          	TIMESTAMP,
	TENOR_UOM              	VARCHAR(3),
	TENOR_PERIOD           	DECIMAL(3,0),
	CLAIM_CURRENCY         	VARCHAR(3),
	CLAIM_AMOUNT           	DECIMAL(20,2),
	EXPIRY_DATE            	TIMESTAMP,
	ACTUAL_ADVANCE_CURRENCY	VARCHAR(3),
	ACTUAL_ADVANCE_AMOUNT  	DECIMAL(20,2),
	COMMON_REF             	BIGINT,
	IS_DELETED             	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CF_ADVANCE
	ADD CONSTRAINT CF_ADV_ID_PK
	PRIMARY KEY (ADVANCE_ID);


CREATE TABLE CMS_CF_FACILITY_TYPE ( 
	FACILITY_TYPE_ID	BIGINT NOT NULL,
	CONTRACT_ID     	BIGINT,
	FACILITY_TYPE   	VARCHAR(5),
	FACITLITY_OTHERS	VARCHAR(50),
	FACILITY_DATE   	TIMESTAMP,
	MOA             	DECIMAL(5,2),
	MAX_CAP_CURRENCY	VARCHAR(3),
	MAX_CAP_AMOUNT  	DECIMAL(20,2),
	COMMON_REF      	BIGINT,
	IS_DELETED      	CHARACTER(1),
	REMARKS         	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CF_FACILITY_TYPE
	ADD CONSTRAINT CF_FAC_ID_PK
	PRIMARY KEY (FACILITY_TYPE_ID);

CREATE TABLE CMS_CF_FDR ( 
	FDR_ID      	BIGINT NOT NULL,
	CONTRACT_ID 	BIGINT,
	FDR_DATE    	TIMESTAMP,
	ACCOUNT_NO  	VARCHAR(25),
	FDR_CURRENCY	VARCHAR(3),
	FDR_AMOUNT  	DECIMAL(20,2),
	REFERENCE_NO	VARCHAR(100),
	COMMON_REF  	BIGINT,
	IS_DELETED  	CHARACTER(1),
	REMARKS     	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CF_FDR
	ADD CONSTRAINT CF_FDR_ID_PK
	PRIMARY KEY (FDR_ID);

CREATE TABLE CMS_CF_PAYMENT ( 
	PAYMENT_ID             	BIGINT NOT NULL,
	ADVANCE_ID             	BIGINT,
	RECEIVE_DATE           	TIMESTAMP,
	RECEIVE_CURRENCY       	VARCHAR(3),
	RECEIVE_AMOUNT         	DECIMAL(20,2),
	RECEIVE_FROM           	VARCHAR(30),
	DISTRIBUTE_DATE        	TIMESTAMP,
	DISTRIBUTE_CURRENCY    	VARCHAR(3),
	DISTRIBUTE_AMOUNT      	DECIMAL(20,2),
	FDR_IND                	CHARACTER(1),
	FDR_CURRENCY           	VARCHAR(3),
	FDR_AMOUNT             	DECIMAL(20,2),
	REPO_IND               	CHARACTER(1),
	REPO_CURRENCY          	VARCHAR(3),
	REPO_AMOUNT            	DECIMAL(20,2),
	APG_IND                	CHARACTER(1),
	APG_CURRENCY           	VARCHAR(3),
	APG_AMOUNT             	DECIMAL(20,2),
	TL1_IND                	CHARACTER(1),
	TL1_CURRENCY           	VARCHAR(3),
	TL1_AMOUNT             	DECIMAL(20,2),
	TL2_IND                	CHARACTER(1),
	TL2_CURRENCY           	VARCHAR(3),
	TL2_AMOUNT             	DECIMAL(20,2),
	TL3_IND                	CHARACTER(1),
	TL3_CURRENCY           	VARCHAR(3),
	TL3_AMOUNT             	DECIMAL(20,2),
	BQ_IND                 	CHARACTER(1),
	BQ_CURRENCY            	VARCHAR(3),
	BQ_AMOUNT              	DECIMAL(20,2),
	COLLECTION_ACC_IND     	CHARACTER(1),
	COLLECTION_ACC_CURRENCY	VARCHAR(3),
	COLLECTION_ACC_AMOUNT  	DECIMAL(20,2),
	OTH_IND                	CHARACTER(1),
	OTH_CURRENCY           	VARCHAR(3),
	OTH_AMOUNT             	DECIMAL(20,2),
	COMMON_REF             	BIGINT,
	IS_DELETED             	CHARACTER(1),
	REMARKS                	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CF_PAYMENT
	ADD CONSTRAINT CF_PAY_ID_PK
	PRIMARY KEY (PAYMENT_ID);


CREATE TABLE CMS_CF_REPORT_SG ( 
	REPORT_ROW_ID   	BIGINT,
	CONTRACT_ID     	BIGINT,
	DATE            	TIMESTAMP,
	REFERENCE_NO    	VARCHAR(30),
	EXISTING_LMT_CCY	CHARACTER(3),
	EXISTING_LMT_AMT	DECIMAL(20,2),
	NEW_CREDIT_LIMIT	DECIMAL(20,2),
	CURRENCY        	CHARACTER(3),
	AMOUNT          	DECIMAL(20,2),
	OD1_LIMIT       	DECIMAL(20,2),
	OD2_LIMIT       	DECIMAL(20,2),
	REF_ID          	BIGINT,
	TRANS_TYPE      	CHARACTER(3),
	STATUS          	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_CF_TERMS_CONDITIONS ( 
	TNC_ID      	BIGINT NOT NULL,
	CONTRACT_ID 	BIGINT,
	TERMS       	VARCHAR(10),
	TERMS_OTHERS	VARCHAR(50),
	TNC_DATE    	TIMESTAMP,
	CONDITIONS  	VARCHAR(100),
	STATUS      	VARCHAR(10),
	COMMON_REF  	BIGINT,
	IS_DELETED  	CHARACTER(1),
	REMARKS     	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CF_TERMS_CONDITIONS
	ADD CONSTRAINT CF_TNC_ID_PK
	PRIMARY KEY (TNC_ID);

CREATE TABLE CMS_CHARGE_DETAIL ( 
	CHARGE_DETAIL_ID           	BIGINT NOT NULL,
	CHARGE_NATURE              	VARCHAR(20),
	CHARGE_AMOUNT              	DECIMAL(20,2),
	CHARGE_CURRENCY_CODE       	CHARACTER(3),
	LEGAL_CHARGE_DATE          	TIMESTAMP,
	LE_CHARGE                  	CHARACTER(1),
	LE_CHARGE_DATE             	TIMESTAMP,
	LE_JURIDICT                	CHARACTER(1),
	LE_JURIDICT_DATE           	TIMESTAMP,
	LE_GOVNLAW                 	CHARACTER(1),
	LE_GOVNLAW_DATE            	TIMESTAMP,
	PRIOR_CHARGE_AMOUNT        	DECIMAL(20,2),
	PRIOR_CHARGE_CURRENCY      	CHARACTER(3),
	SECURITY_RANK              	SMALLINT,
	PRIOR_CHARGEE              	VARCHAR(100),
	CHARGE_TYPE                	CHARACTER(1),
	CMS_COLLATERAL_ID          	BIGINT,
	SCI_LAS_SEC_ID             	VARCHAR(50),
	CONFIRM_CHARGE_DATE        	TIMESTAMP,
	CMS_REF_ID                 	BIGINT,
	CMS_ACTUAL_CHARGE_AMOUNT   	DECIMAL(20,2),
	CMS_ACTUAL_CHARGE_CCY      	CHARACTER(3),
	STATUS                     	VARCHAR(10),
	PRIOR_CHARGE_TYPE          	VARCHAR(10),
	IS_LEGAL_ENFORCE           	CHARACTER(1),
	IS_LEGAL_ENFORCE_DATE      	TIMESTAMP,
	SOURCE_ID                  	VARCHAR(10),
	TOOLTIP_DATE_LEGALLY_CHARGE	TIMESTAMP,
	CAVEAT_WAIVED_IND          	CHARACTER(1),
	CAVEAT_REF_NO              	VARCHAR(50),
	EXPIRY_DATE                	TIMESTAMP,
	PRESENTATION_NO            	VARCHAR(50),
	PRESENTATION_DATE          	TIMESTAMP,
	LODGED_DATE                	TIMESTAMP,
	SOLICITOR_NAME             	VARCHAR(100),
	FOLIO_CHARGE 				VARCHAR(10),
	JILID_CHARGE 				VARCHAR(10),
	PARTY_CHARGE                CHARACTER(1),
	CHARGE_PENDING_REDEMPTION CHARACTER(1)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CHG_DTL_I1
	ON CMS_CHARGE_DETAIL(CMS_COLLATERAL_ID, SECURITY_RANK)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHG_DTL_I2
	ON CMS_CHARGE_DETAIL(SCI_LAS_SEC_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHG_DTL_I3
	ON CMS_CHARGE_DETAIL(SOURCE_ID, STATUS, CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHG_DTL_I4
	ON CMS_CHARGE_DETAIL(CMS_COLLATERAL_ID, SOURCE_ID, CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS;
	
ALTER TABLE CMS_CHARGE_DETAIL
	ADD CONSTRAINT CC1170231451131
	PRIMARY KEY (CHARGE_DETAIL_ID);

CREATE TABLE CMS_CHECKLIST ( 
	CHECKLIST_ID             	BIGINT NOT NULL,
	CMS_COLLATERAL_ID        	BIGINT,
	MASTERLIST_ID            	BIGINT,
	CATEGORY                 	VARCHAR(40),
	VERSION_TIME             	BIGINT NOT NULL,
	CMS_PLEDGOR_DTL_ID       	BIGINT,
	CMS_LSP_LMT_PROFILE_ID   	BIGINT,
	CMS_LMP_SUB_PROFILE_ID   	BIGINT,
	SUB_CATEGORY             	VARCHAR(20),
	STATUS                   	VARCHAR(30),
	LAST_DOC_REC_DATE        	TIMESTAMP,
	LEGAL_FIRM               	VARCHAR(40),
	LAW_FIRM_PANEL_FLAG         VARCHAR(2),
	LAWYER_REFERENCE_NUMBER   	VARCHAR(50),
	LAWYER_IN_CHARGE     		VARCHAR(20),
	LAW_FIRM_ADDRESS     		VARCHAR(200),
	LAW_FIRM_CONTACT_NUMBER   	VARCHAR(20),
	LAWYER_EMAIL      			VARCHAR(50),
	ALLOW_DELETE_IND         	CHARACTER(1),
	DOC_ORIG_COUNTRY         	VARCHAR(20),
	DOC_ORIG_ORGANISATION    	VARCHAR(20),
	APPLICATION_TYPE    		VARCHAR(40),
	REMARKS                  	VARCHAR(2000),
	DEFICIENCY_IDENTIFY_DATE 	TIMESTAMP,
	NEXT_ACTION_DATE         	TIMESTAMP,
	VALUER_FIRM                	VARCHAR(40),
	VALUER_FIRM_PANEL_FLAG     	VARCHAR(2),
	VALUER_REFERENCE_NUMBER    	VARCHAR(50),
	VALUER_IN_CHARGE           	VARCHAR(20),
	VALUER_FIRM_ADDRESS        	VARCHAR(200),
	VALUER_FIRM_CONTACT_NUMBER 	VARCHAR(20),
	VALUER_EMAIL               	VARCHAR(50),
	INSURER_FIRM               	VARCHAR(40),
	INSURER_FIRM_PANEL_FLAG    	VARCHAR(2),
	INSURER_REFERENCE_NUMBER   	VARCHAR(50),
	INSURER_IN_CHARGE          	VARCHAR(20),
	INSURER_FIRM_ADDRESS       	VARCHAR(200),
	INSURER_FIRM_CONTACT_NUMBER	VARCHAR(20),
	INSURER_EMAIL              	VARCHAR(50),
	DISABLE_COLLABORATION_IND	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CHKLIST_I1
	ON CMS_CHECKLIST(CMS_LMP_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_I2
	ON CMS_CHECKLIST(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_I3
	ON CMS_CHECKLIST(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX CHKLIST_I4
	ON CMS_CHECKLIST(CATEGORY, SUB_CATEGORY, CHECKLIST_ID)
	ALLOW REVERSE SCANS ;	

ALTER TABLE CMS_CHECKLIST
	ADD CONSTRAINT CC1169520355417
	PRIMARY KEY (CHECKLIST_ID);

CREATE TABLE CMS_CHECKLIST_ITEM ( 
	DOC_ITEM_ID                 	BIGINT NOT NULL,
	DOC_DESCRIPTION             	VARCHAR(500),
	IS_PRE_APPROVE       			CHARACTER(1),
	IS_INHERITED           			CHARACTER(1),
	IN_VAULT                    	CHARACTER(1),
	IN_EXT_CUSTODY              	CHARACTER(1),
	IS_MANDATORY                	CHARACTER(1),
	ACTION_PARTY                	VARCHAR(100),
	STATUS                      	VARCHAR(30),
	DOC_DATE                    	TIMESTAMP,
	EXPIRY_DATE                 	TIMESTAMP,
	IS_AUDIT                    	CHARACTER(1),
	REMARKS                     	VARCHAR(1600),
	IS_DELETED                  	CHARACTER(1),
	CHECKLIST_ID                	BIGINT,
	DOCUMENT_ID                 	BIGINT,
	DOCUMENT_CODE               	VARCHAR(20),
	DOC_ITEM_REF                	BIGINT NOT NULL,
	FORM_NO                     	VARCHAR(50),
	DOC_REFERENCE               	VARCHAR(100),
	DEFER_EXPIRY_DATE           	TIMESTAMP,
	MONITOR_TYPE                	VARCHAR(20),
	IS_LOCKED                   	CHARACTER(1),
	IDENTIFY_DATE               	TIMESTAMP,
	DOC_COMPLETION_DATE         	TIMESTAMP,
	LAST_UPDATE_DATE            	TIMESTAMP,
	CPC_CUST_STATUS             	VARCHAR(30),
	PARENT_CHECKLIST_ITEM_REF   	BIGINT,
	DEFER_EXTENDED_DATE         	TIMESTAMP,
	CPC_CUST_STATUS_UPDATE_DATE 	TIMESTAMP,
	EFFECTIVE_DATE              	TIMESTAMP,
	CUST_STATUS_LAST_UPDATE_DATE	TIMESTAMP,
	SHARE_STATUS                	CHARACTER(1),
	RECEIVED_DATE            		TIMESTAMP,
    COMPLETED_DATE           		TIMESTAMP,
    EXPECTED_RETURN_DATE     		TIMESTAMP,
    WAIVED_DATE              		TIMESTAMP,
    LODGED_DATE              		TIMESTAMP,
    TEMP_UPLIFTED_DATE       		TIMESTAMP,
    PERM_UPLIFTED_DATE       		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX CHKLIST_ITM_U1
	ON CMS_CHECKLIST_ITEM(DOC_ITEM_REF)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I3
	ON CMS_CHECKLIST_ITEM(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I5
	ON CMS_CHECKLIST_ITEM(DOCUMENT_CODE)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I7
	ON CMS_CHECKLIST_ITEM(IDENTIFY_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I4
	ON CMS_CHECKLIST_ITEM(EXPIRY_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I2
	ON CMS_CHECKLIST_ITEM(IS_DELETED)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I1
	ON CMS_CHECKLIST_ITEM(STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHKLIST_ITM_I6
	ON CMS_CHECKLIST_ITEM(LAST_UPDATE_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CHECKLIST_ITEM
	ADD CONSTRAINT CC1169520399821
	PRIMARY KEY (DOC_ITEM_ID);

CREATE TABLE CMS_CHECKLIST_ITEM_SHARE ( 
	CHECKLIST_ITEM_SHARE_ID 	BIGINT NOT NULL,
	DOC_ITEM_ID             	BIGINT,
	CHECKLIST_ID            	BIGINT,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	CMS_LMP_SUB_PROFILE_ID  	BIGINT,
	CMS_PLEDGOR_DTL_ID      	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT,
	DETAILS                 	VARCHAR(1600),
	CHECKLIST_ITEM_SHARE_REF	BIGINT,
	STATUS                  	VARCHAR(12) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CHK_ITM_SH_I2
	ON CMS_CHECKLIST_ITEM_SHARE(STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX CHK_ITM_SH_I1
	ON CMS_CHECKLIST_ITEM_SHARE(DOC_ITEM_ID, CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CHECKLIST_ITEM_SHARE
	ADD CONSTRAINT CC1169520425798
	PRIMARY KEY (CHECKLIST_ITEM_SHARE_ID);

CREATE TABLE CMS_CMDT_APPV ( 
	APPV_COMMODITY_ID	BIGINT NOT NULL,
	CMS_REF_ID       	BIGINT NOT NULL,
	PROFILE_ID       	BIGINT,
	CMS_COLLATERAL_ID	BIGINT,
	STATUS           	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_APPV_I1
	ON CMS_CMDT_APPV(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_APPV_I2
	ON CMS_CMDT_APPV(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_APPV
	ADD CONSTRAINT CC1169520620869
	PRIMARY KEY (APPV_COMMODITY_ID);

CREATE TABLE CMS_CMDT_BUYER ( 
	BUYER_ID  	BIGINT NOT NULL,
	NAME      	VARCHAR(150) NOT NULL,
	PROFILE_ID	BIGINT,
	CMS_REF_ID	BIGINT,
	STATUS    	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_BUY_I1
	ON CMS_CMDT_BUYER(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_BUYER
	ADD CONSTRAINT CC1169520665913
	PRIMARY KEY (BUYER_ID);

CREATE TABLE CMS_CMDT_CNTR ( 
	CONTRACT_ID        	BIGINT NOT NULL,
	CONTRACT_NO        	VARCHAR(50) NOT NULL,
	CONTRACT_CCY       	CHARACTER(3) NOT NULL,
	CMS_REF_ID         	BIGINT NOT NULL,
	CONTRACT_QTY_UOM_ID	VARCHAR(40),
	CMS_COLLATERAL_ID  	BIGINT,
	APPV_COMMODITY_ID  	BIGINT,
	MATURITY_DATE      	TIMESTAMP,
	MIN_SHPG_FREQ      	SMALLINT,
	MIN_SHPG_FREQ_UNIT 	CHARACTER(2),
	LAST_SHIPMENT_DATE 	TIMESTAMP,
	CONTRACT_REMK      	VARCHAR(250),
	QTY_DIFF_SIGN      	CHARACTER(2),
	QTY_DIFF_PCT       	INTEGER,
	SUPPLIER_ID        	BIGINT,
	STATUS             	VARCHAR(20),
	CONTRACT_AMT       	DECIMAL(20,2),
	CONTRACT_QTY       	DECIMAL(19,4),
	CONTRACT_PRICE     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_CNTR_I2
	ON CMS_CMDT_CNTR(APPV_COMMODITY_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_CNTR_I3
	ON CMS_CMDT_CNTR(SUPPLIER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_CNTR_I1
	ON CMS_CMDT_CNTR(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_CNTR
	ADD CONSTRAINT CC1169520685892
	PRIMARY KEY (CONTRACT_ID);

CREATE TABLE CMS_CMDT_DEAL ( 
	DEAL_ID                    	BIGINT NOT NULL,
	CMS_COLLATERAL_ID          	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID       	BIGINT,
	DEAL_NO                    	VARCHAR(18) NOT NULL,
	DEAL_TYPE                  	CHARACTER(2) NOT NULL,
	TRX_REF_NO                 	VARCHAR(20) NOT NULL,
	MATURITY_DATE              	TIMESTAMP NOT NULL,
	ORIG_FACE_AMT_CCY          	CHARACTER(3) NOT NULL,
	FINANCE_PCT                	INTEGER NOT NULL,
	IS_PRE_SOLD                	CHARACTER(1) NOT NULL,
	IS_ATTAIN_ENFORCE          	CHARACTER(1) NOT NULL,
	CNTR_RIC                   	VARCHAR(20),
	CASH_REQ_PCT               	INTEGER,
	CASH_MARGIN_PCT            	INTEGER,
	IS_CASH_WITHIN_REQ         	CHARACTER(1),
	SHIPPING_MARKS             	VARCHAR(20),
	LATEST_SHIP_DATE           	TIMESTAMP,
	CONTAINER_NO               	VARCHAR(20),
	ATTAIN_ENFORCE_DATE        	TIMESTAMP,
	DEAL_REMK                  	VARCHAR(250),
	IS_PLEDGE_DOC_REQ          	CHARACTER(1),
	HEDGE_CNTR_ID              	BIGINT,
	HEDGE_PRICE                	DECIMAL(21,6),
	HEDGE_PRICE_CCY            	CHARACTER(3),
	CNTR_ID                    	BIGINT,
	CNTR_PROFILE_ID            	BIGINT,
	CNTR_PRICE_TYPE            	CHARACTER(2),
	CNTR_QTY_UOM_ID            	VARCHAR(40),
	CNTR_QTY_DIFF_UOM_ID       	VARCHAR(40),
	CNTR_QTY_DIFF_SIGN         	CHARACTER(2),
	CNTR_MKT_UOM_ID            	VARCHAR(40),
	CNTR_METRIC_UOM_ID         	VARCHAR(40),
	CNTR_PRICE_DIFF_SIGN       	CHARACTER(2),
	CNTR_PRICE_DIFF_CCY        	CHARACTER(3),
	CNTR_PRICE_DIFF            	DECIMAL(21,6),
	CNTR_PRICE_CCY             	CHARACTER(3),
	CNTR_PRICE                 	DECIMAL(21,6),
	ACT_PRICE                  	DECIMAL(21,6),
	ACT_PRICE_CCY              	CHARACTER(3),
	ACT_ADJUST_PRICE           	DECIMAL(21,6),
	ACT_ADJUST_PRICE_CCY       	CHARACTER(3),
	ACT_MKT_PRICE_DATE         	TIMESTAMP,
	ACT_COMMON_DIFF            	DECIMAL(21,6),
	ACT_COMMON_DIFF_CCY        	CHARACTER(3),
	ACT_COMMON_DIFF_SIGN       	CHARACTER(2),
	ACT_EOD_CUST_DIFF          	DECIMAL(21,6),
	ACT_EOD_CUST_DIFF_CCY      	CHARACTER(3),
	ACT_EOD_CUST_DIFF_SIGN     	CHARACTER(2),
	DEAL_CMV_CCY               	CHARACTER(3),
	DEAL_FSV_CCY               	CHARACTER(3),
	STATUS                     	VARCHAR(20),
	VERSION_TIME               	BIGINT,
	DEAL_CMV                   	DECIMAL(20,2),
	DEAL_FSV                   	DECIMAL(20,2),
	CNTR_QTY_DIFF              	DECIMAL(21,6),
	ORIG_FACE_AMT              	DECIMAL(20,2),
	ACT_QTY                    	DECIMAL(19,4),
	CNTR_METRIC_CONVERT_UOM_QTY	DECIMAL(19,4),
	CNTR_MKT_UOM_CONVERT_QTY   	DECIMAL(19,4),
	CNTR_QTY                   	DECIMAL(19,4),
	HEDGE_QTY                  	DECIMAL(19,4),
	DEAL_DATE                  	TIMESTAMP,
	EXTENDED_MATURITY_DATE     	TIMESTAMP,
	SUB_LIMIT_ID               	BIGINT,
	CUSTOMER_CATEGORY          	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID   	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_DEAL_I5
	ON CMS_CMDT_DEAL(CNTR_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_DEAL_I3
	ON CMS_CMDT_DEAL(HEDGE_CNTR_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_DEAL_I1
	ON CMS_CMDT_DEAL(CMS_LSP_CO_BORROW_LMT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_DEAL_I2
	ON CMS_CMDT_DEAL(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_DEAL_I4
	ON CMS_CMDT_DEAL(CNTR_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CMDT_DEAL_I6
	ON CMS_CMDT_DEAL(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_DEAL
	ADD CONSTRAINT CC1169520729515
	PRIMARY KEY (DEAL_ID);

CREATE TABLE CMS_CMDT_LOAN ( 
	LOAN_ID                 	BIGINT NOT NULL,
	CMS_COLLATERAL_ID       	BIGINT,
	CMS_REF_ID              	BIGINT NOT NULL,
	ADMIN_AGT_NAME          	VARCHAR(150),
	COLLATERAL_AGT_NAME     	VARCHAR(150),
	DOC_AGT_NAME            	VARCHAR(150),
	LC_ISSUE_BANK_NAME      	VARCHAR(150),
	GLOBAL_AMT_CCY          	CHARACTER(3),
	APPV_CCY_LIST           	VARCHAR(120),
	LOAN_FACILITY_TYPE      	CHARACTER(1),
	FACILITY_COMMIT_DATE    	TIMESTAMP,
	FACILITY_EFFECTIVE_DATE 	TIMESTAMP,
	FACILITY_MATURITY_DATE  	TIMESTAMP,
	FACILITY_TERMINATE_DATE 	TIMESTAMP,
	LC_LAST_ISSUE_DATE      	TIMESTAMP,
	LAST_LC_MATURITY_DATE   	TIMESTAMP,
	TRX_TYPE                	CHARACTER(1),
	AGT_BANK_COUNSEL_NAME   	VARCHAR(150),
	IS_ALLOW_TERM_OUT       	CHARACTER(1),
	IS_ALLOW_PREPAY         	CHARACTER(1),
	IS_ALLOW_PREPAY_PENALTY 	CHARACTER(1),
	PREPAY_MIN_AMT_CCY      	CHARACTER(3),
	NOTICE_DAY_QTY          	SMALLINT,
	GOVERN_LAW              	VARCHAR(150),
	INTEREST_PERIOD_QTY     	INTEGER,
	INTEREST_PERIOD_UNIT    	CHARACTER(1),
	MAX_OUTSTD_LOAN_QTY     	INTEGER,
	MIN_DRAWDOWN_CCY        	CHARACTER(3),
	MAX_DRAWDOWN_CCY        	CHARACTER(3),
	MIN_DRAWDOWN_QTY        	INTEGER,
	MAX_DRAWDOWN_QTY        	INTEGER,
	MIN_ASSIGNMT_FEE_AMT    	DECIMAL(20,2),
	IS_BORROWER_AGREE       	CHARACTER(1),
	MJRTY_LNDR_CNSNT_PCT    	DECIMAL(5,2),
	DEFAULT_RATE_PCT        	DECIMAL(5,2),
	CALCULATE_BASE_DAY_QTY  	SMALLINT,
	DEBT_RATE_PCT           	DECIMAL(5,2),
	PAYMT_FREQ              	CHARACTER(1),
	PRINCIPAL_AMT_CCY       	CHARACTER(3),
	MAX_ASSIGNMT_FEE_AMT_CCY	CHARACTER(3),
	MAX_ASSIGNMT_FEE_AMT    	DECIMAL(20,2),
	MIN_ASSIGNMT_FEE_AMT_CCY	CHARACTER(3),
	AGNCY_FEE_AMT           	DECIMAL(20,2),
	AGNCY_FEE_AMT_CCY       	CHARACTER(3),
	CLOSE_FEE_AMT           	DECIMAL(20,2),
	CLOSE_FEE_AMT_CCY       	CHARACTER(3),
	COMMIT_FEE_AMT          	DECIMAL(20,2),
	COMMIT_FEE_AMT_CCY      	CHARACTER(3),
	FACILITY_FEE_AMT        	DECIMAL(20,2),
	FACILITY_FEE_AMT_CCY    	CHARACTER(3),
	UPFRONT_FEE_AMT         	DECIMAL(20,2),
	UPFRONT_FEE_AMT_CCY     	CHARACTER(3),
	LC_FEE_AMT              	DECIMAL(20,2),
	LC_FEE_AMT_CCY          	CHARACTER(3),
	AMEND_FEE_AMT           	DECIMAL(20,2),
	AMEND_FEE_AMT_CCY       	CHARACTER(3),
	EXTEND_FEE_AMT          	DECIMAL(20,2),
	EXTEND_FEE_AMT_CCY      	CHARACTER(3),
	ARRANGE_FEE_AMT         	DECIMAL(20,2),
	ARRANGE_FEE_AMT_CCY     	CHARACTER(3),
	OTHER_FEE_AMT           	DECIMAL(20,2),
	OTHER_FEE_AMT_CCY       	CHARACTER(3),
	VERSION_TIME            	BIGINT,
	STATUS                  	VARCHAR(20),
	IS_EQUAL_INSTL          	CHARACTER(1),
	PREPAY_MIN_AMT          	DECIMAL(20,2),
	MIN_DRAWDOWN_AMT        	DECIMAL(20,2),
	MAX_DRAWDOWN_AMT        	DECIMAL(20,2),
	PRINCIPAL_AMT           	DECIMAL(20,2),
	GLOBAL_AMT              	DECIMAL(20,2),
	IS_MULTIPLE_CURR        	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_LOAN_I1
	ON CMS_CMDT_LOAN(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_LOAN
	ADD CONSTRAINT CC1169520758587
	PRIMARY KEY (LOAN_ID);

CREATE TABLE CMS_CMDT_PRICE ( 
	COMMODITY_PRICE_ID    	BIGINT NOT NULL,
	GROUP_ID              	BIGINT NOT NULL,
	PROFILE_ID            	BIGINT,
	CLOSE_PRICE_CURRENCY  	CHARACTER(3),
	CLOSE_PRICE           	DECIMAL(21,6),
	CURRENT_PRICE_CURRENCY	CHARACTER(3),
	CURRENT_PRICE         	DECIMAL(21,6),
	PRICE_UOM_ID          	VARCHAR(40),
	CLOSE_UPDATE_DATE     	TIMESTAMP,
	CURRENT_UPDATE_DATE   	TIMESTAMP,
	STATUS                	VARCHAR(20),
	VERSION_TIME          	BIGINT,
	CLOSE_PRI_FIRST_UDATE 	TIMESTAMP,
	CURR_PRI_FIRST_UDATE  	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_PRC_I1
	ON CMS_CMDT_PRICE(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_PRICE
	ADD CONSTRAINT CC1169520792305
	PRIMARY KEY (COMMODITY_PRICE_ID);

CREATE TABLE CMS_CMDT_PROFILE ( 
	PROFILE_ID        	BIGINT NOT NULL,
	CATEGORY          	VARCHAR(40) NOT NULL,
	PRODUCT_TYPE      	VARCHAR(40) NOT NULL,
	PRODUCT_SUB_TYPE  	VARCHAR(40) NOT NULL,
	RIC               	VARCHAR(20) NOT NULL,
	PRICE_TYPE        	CHARACTER(1) NOT NULL,
	RIC_TYPE          	CHARACTER(1) NOT NULL,
	GROUP_ID          	BIGINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	PRICE_DIFF_SIGN   	VARCHAR(2),
	PRICE_DIFFERENTIAL	DECIMAL(19,6),
	MARKET_NAME       	VARCHAR(50),
	COUNTRY_AREA      	VARCHAR(50),
	CHAINS            	VARCHAR(50),
	OUTRIGHTS         	VARCHAR(50),
	VERSION_TIME      	BIGINT,
	STATUS            	VARCHAR(20),
	NON_RIC_DESC      	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CMDT_PROFILE
	ADD CONSTRAINT CC1169520814397
	PRIMARY KEY (PROFILE_ID);

CREATE TABLE CMS_CMDT_SUB_LMT ( 
	SUB_LMT_ID     	BIGINT NOT NULL,
	CHARGE_ID      	BIGINT,
	SUB_LMT_TYPE_ID	BIGINT,
	SUB_LMT_CCY    	CHARACTER(3),
	GROUP_ID       	BIGINT,
	CMS_REF_ID     	BIGINT,
	VERSION_TIME   	BIGINT,
	STATUS         	VARCHAR(20),
	INNER_FLAG     	CHARACTER(1),
	ACTIVE_AMOUNT  	DECIMAL(20,2),
	SUB_LMT_AMOUNT 	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_SUB_LMT_I1
	ON CMS_CMDT_SUB_LMT(CHARGE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_SUB_LMT
	ADD CONSTRAINT CC1169520849587
	PRIMARY KEY (SUB_LMT_ID);

CREATE TABLE CMS_CMDT_SUB_LMT_TYPE ( 
	SUB_LMT_TYPE_ID  	BIGINT NOT NULL,
	LMT_TYPE_CODE    	VARCHAR(40),
	SUB_LMT_TYPE_DESC	VARCHAR(100),
	GROUP_ID         	BIGINT,
	CMS_REF_ID       	BIGINT,
	VERSION_TIME     	BIGINT,
	STATUS           	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CMDT_SUB_LMT_TYPE
	ADD CONSTRAINT CC1169520870778
	PRIMARY KEY (SUB_LMT_TYPE_ID);

CREATE TABLE CMS_CMDT_SUPPLIER ( 
	SUPPLIER_ID	BIGINT NOT NULL,
	NAME       	VARCHAR(150) NOT NULL,
	PROFILE_ID 	BIGINT,
	CMS_REF_ID 	BIGINT,
	STATUS     	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_SUP_I1
	ON CMS_CMDT_SUPPLIER(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_SUPPLIER
	ADD CONSTRAINT CC1169520902313
	PRIMARY KEY (SUPPLIER_ID);

CREATE TABLE CMS_CMDT_UOM ( 
	COMMODITY_UOM_ID	BIGINT NOT NULL,
	PROFILE_ID      	BIGINT NOT NULL,
	UOM_NAME        	VARCHAR(20) NOT NULL,
	MKT_UOM         	VARCHAR(40) NOT NULL,
	GROUP_ID        	BIGINT NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	METRIC_UOM      	VARCHAR(40),
	VERSION_TIME    	BIGINT,
	STATUS          	VARCHAR(20),
	METRIC_UOM_QTY  	DECIMAL(21,6),
	MKT_UOM_QTY     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CMDT_UOM_I1
	ON CMS_CMDT_UOM(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CMDT_UOM
	ADD CONSTRAINT CC1169520979404
	PRIMARY KEY (COMMODITY_UOM_ID);

CREATE TABLE CMS_CMDT_WRHSE ( 
	WAREHOUSE_ID  	BIGINT NOT NULL,
	COUNTRY_CODE  	CHARACTER(2) NOT NULL,
	WAREHOUSE_NAME	VARCHAR(150) NOT NULL,
	GROUP_ID      	BIGINT NOT NULL,
	CMS_REF_ID    	BIGINT NOT NULL,
	VERSION_TIME  	BIGINT,
	STATUS        	VARCHAR(20),
	ADDR_LINE_1   	VARCHAR(100),
	ADDR_LINE_2   	VARCHAR(100),
	CITY          	VARCHAR(30),
	STATE         	VARCHAR(50),
	POSTAL_CODE   	VARCHAR(30),
	WRHSE_REMK    	VARCHAR(250),
	ATTN_PARTY_NM 	VARCHAR(50),
	EMAIL_ADDR    	VARCHAR(50),
	FAX           	VARCHAR(30),
	TEL           	VARCHAR(30),
	TEL_EXT       	VARCHAR(30) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CMDT_WRHSE
	ADD CONSTRAINT CC1169521002077
	PRIMARY KEY (WAREHOUSE_ID);

CREATE TABLE CMS_COLLATERAL_TASK ( 
	TASK_ID               	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID  	BIGINT,
	CMS_COLLATERAL_ID     	BIGINT,
	SECURITY_LOCATION     	VARCHAR(20),
	REMARKS               	VARCHAR(256),
	VERSION_TIME          	BIGINT,
	IS_DELETED            	CHARACTER(1),
	SECURITY_ORGANISATION 	VARCHAR(20),
	CMS_LE_SUB_PROFILE_ID 	BIGINT,
	CUSTOMER_CATEGORY     	VARCHAR(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX COL_TASK_I3
	ON CMS_COLLATERAL_TASK(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX COL_TASK_I1
	ON CMS_COLLATERAL_TASK(CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX COL_TASK_I4
	ON CMS_COLLATERAL_TASK(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX COL_TASK_I2
	ON CMS_COLLATERAL_TASK(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_COLLATERAL_TASK
	ADD CONSTRAINT CC1169521024179
	PRIMARY KEY (TASK_ID);

CREATE TABLE CMS_COMMODITY ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	ENV_RISKY_STATUS        	CHARACTER(2),
	ENV_RISKY_DATE          	TIMESTAMP,
	ENV_RISKY_REMK          	VARCHAR(250),
	APPV_EOD_PRICE_DIFF_SIGN	CHARACTER(2),
	APPV_EOD_PRICE_DIFF     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_COMMODITY
	ADD CONSTRAINT CC1169521049034
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_CONTRACT_FINANCING ( 
	CONTRACT_ID              	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID   	BIGINT,
	CMS_LSP_APPR_LMTS_ID     	BIGINT,
	CONTRACT_NUMBER          	VARCHAR(50),
	CONTRACT_DATE            	TIMESTAMP,
	AWARDER_TYPE             	VARCHAR(3),
	AWARDER_TYPE_OTHERS      	VARCHAR(50),
	AWARDER_NAME             	VARCHAR(100),
	CONTRACT_TYPE            	VARCHAR(2),
	CONTRACT_TYPE_OTHERS     	VARCHAR(50),
	START_DATE               	TIMESTAMP,
	EXPIRY_DATE              	TIMESTAMP,
	EXTENDED_DATE            	TIMESTAMP,
	CONTRACTED_CURRENCY      	VARCHAR(3),
	CONTRACTED_AMOUNT        	DECIMAL(20,2),
	ACTUAL_FINANCE_CURRENCY  	VARCHAR(3),
	ACTUAL_FINANCE_AMOUNT    	DECIMAL(20,2),
	FINANCE_PERCENT          	DECIMAL(5,2),
	PROJECTED_PROFIT_CURRENCY	VARCHAR(3),
	PROJECTED_PROFIT_AMOUNT  	DECIMAL(20,2),
	COLLECTION_ACCOUNT       	VARCHAR(25),
	PROJECT_ACCOUNT          	VARCHAR(25),
	FACILITY_EXPIRY_DATE     	TIMESTAMP,
	SINKING_FUND_IND         	CHARACTER(1),
	SINKING_FUND_PARTY       	VARCHAR(3),
	BUILD_UP_FDR             	DECIMAL(5,2),
	CONTRACT_DESCRIPTION     	VARCHAR(2000),
	IS_DELETED               	CHARACTER(1),
	REMARKS                  	VARCHAR(2000),
	VERSION_TIME             	BIGINT 
	) IN CMS_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_CONTRACT_FINANCING
	ADD CONSTRAINT CF_CONT_ID_PK
	PRIMARY KEY (CONTRACT_ID);

CREATE TABLE CMS_CONVENANT ( 
	CONVENANT_ID          	BIGINT NOT NULL,
	CONVENANT_REF_ID      	BIGINT NOT NULL,
	CONV_DESCRIPTION      	VARCHAR(500),
	REMARKS               	VARCHAR(2000),
	IS_VERIFIED           	CHARACTER(1),
	IS_DELETED            	CHARACTER(1),
	DATE_CHECKED          	TIMESTAMP,
	RECURRENT_DOC_ID      	BIGINT,
	FREQUENCY             	BIGINT,
	FREQUENCY_UNIT        	VARCHAR(20),
	DUE_DATE              	TIMESTAMP,
	PRINT_REMINDER_IND    	CHARACTER(1),
	DOC_END_DATE          	TIMESTAMP,
	GRACE_PERIOD          	BIGINT,
	GRACE_PERIOD_UNIT     	VARCHAR(20),
	CHASE_REMIND_IND      	CHARACTER(1),
	ONE_OFF               	CHARACTER(1) DEFAULT  'N',
	LAST_DOC_ENTRY_DATE   	TIMESTAMP,
	RISK_TRIGGER          	CHARACTER(1) DEFAULT 'N',
	FEE                   	CHARACTER(1) DEFAULT 'N',
	IS_PARAMETERIZED_DESC   CHARACTER(1) DEFAULT 'Y',
	SOURCE_ID 				VARCHAR(10),
	END_DATE_CHANGED_COUNT	INTEGER 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CONVENANT_I1
	ON CMS_CONVENANT(RECURRENT_DOC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CONVENANT
	ADD CONSTRAINT CC1169521077916
	PRIMARY KEY (CONVENANT_ID);

CREATE TABLE CMS_CONVENANT_SUB_ITEM ( 
	SUB_ITEM_ID       	BIGINT NOT NULL,
	SUB_ITEM_REF_ID   	BIGINT NOT NULL,
	DOC_END_DATE      	TIMESTAMP,
	DUE_DATE          	TIMESTAMP,
	CHECKED_DATE      	TIMESTAMP,
	DEFERRED_DATE     	TIMESTAMP,
	PRINT_REMINDER_IND	CHARACTER(1),
	IS_DELETED_IND    	CHARACTER(1),
	CONVENANT_ID      	BIGINT,
	STATUS            	VARCHAR(30),
	WAIVED_DATE       	TIMESTAMP,
	DEFERRED_CNT      	BIGINT DEFAULT 0,
	REMARKS           	VARCHAR(2000),
	IS_VERIFIED_IND   	CHARACTER(1),
	FREQUENCY         	BIGINT,
	FREQUENCY_UNIT    	VARCHAR(20),
	GRACE_PERIOD      	BIGINT,
	GRACE_PERIOD_UNIT 	VARCHAR(20),
	ACTION_PARTY    	VARCHAR(40)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CONV_SUB_I1
	ON CMS_CONVENANT_SUB_ITEM(CONVENANT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CONV_SUB_I2
	ON CMS_CONVENANT_SUB_ITEM(DEFERRED_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CONVENANT_SUB_ITEM
	ADD CONSTRAINT CC1169521102551
	PRIMARY KEY (SUB_ITEM_ID);

CREATE TABLE CMS_CREDIT_RISK_PARAM ( 
	PARAM_ID         	BIGINT NOT NULL,
	PARAM_TYPE       	VARCHAR(10),
	MOA              	DECIMAL(5,2),
	MAX_CAP          	DECIMAL(5,2),
	IS_LIQUID        	CHARACTER(1),
	IS_INT_SUSPEND   	CHARACTER(1),
	FEED_ID          	BIGINT NOT NULL,
	PARAM_REF        	BIGINT NOT NULL,
	VERSION_TIME     	BIGINT,
	STATUS           	CHARACTER(1),
	IS_FI            	CHARACTER(1),
	BOARD_TYPE       	VARCHAR(20),
	SHARE_STATUS     	VARCHAR(20),
	IS_ACCEPTABLE    	CHARACTER(1),
	UNACCEPTABLE_DATE	TIMESTAMP,
	PREV_SHARE_STATUS	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;
    
CREATE UNIQUE INDEX CRP_I1
	ON CMS_CREDIT_RISK_PARAM(FEED_ID)
	ALLOW REVERSE SCANS ;  
    

CREATE TABLE CMS_CUST_DOC ( 
	CUSTODIAN_DOC_ID             	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID       	BIGINT,
	CHECKLIST_ID                 	BIGINT,
	CMS_PLEDGOR_DTL_ID           	BIGINT,
	CMS_LMP_SUB_PROFILE_ID       	BIGINT,
	CATEGORY                     	VARCHAR(40) NOT NULL,
	SUB_CATEGORY                 	VARCHAR(20),
	VERSION_TIME                 	BIGINT NOT NULL,
	LAST_UPDATE_DATE             	TIMESTAMP,
	CMS_COLLATERAL_ID            	BIGINT,
	UPDATED_CHKLIST_ITEM_REF_LIST	VARCHAR(4000),
	REVERSAL_REMARKS             	VARCHAR(1600),
	REVERSAL_ID                  	BIGINT,
	REVERSAL_REMARKS_UPDATED_BY  	BIGINT,
	REVERSAL_RMK_UPDATED_USERINFO	VARCHAR(100) 
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX CUST_DOC_I1
	ON CMS_CUST_DOC(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CUST_DOC
	ADD CONSTRAINT CC1169521131082
	PRIMARY KEY (CUSTODIAN_DOC_ID);

CREATE TABLE CMS_CUST_DOC_ITEM ( 
	CUSTODIAN_DOC_ITEM_ID	BIGINT NOT NULL,
	CUSTODIAN_DOC_ID     	BIGINT,
	STATUS               	VARCHAR(34) NOT NULL,
	REASON               	VARCHAR(200),
	CHECKLIST_ITEM_REF_ID	BIGINT NOT NULL,
	CHECKLIST_ITEM_ID    	BIGINT,
	CMS_REF_ID           	BIGINT,
	LAST_UPDATE_DATE     	TIMESTAMP,
	MAKER_USER_ID        	BIGINT,
	CHECKER_USER_ID      	BIGINT,
	MAKER_TRX_DATE       	TIMESTAMP,
	CHECKER_TRX_DATE     	TIMESTAMP,
	REVERSAL_DATE        	TIMESTAMP,
	CUSTODIAN_DOC_ITEM_BARCODE	VARCHAR(100),
	SEC_ENVELOPE_BARCODE	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CUST_DOC_IT_I1
	ON CMS_CUST_DOC_ITEM(CUSTODIAN_DOC_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CUST_DOC_IT_I3
	ON CMS_CUST_DOC_ITEM(MAKER_TRX_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX CUST_DOC_IT_I2
	ON CMS_CUST_DOC_ITEM(CHECKER_TRX_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX CUST_DOC_IT_I4
	ON CMS_CUST_DOC_ITEM(CHECKLIST_ITEM_REF_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CUST_DOC_ITEM
	ADD CONSTRAINT CMS_CDI_PK_II
	PRIMARY KEY (CUSTODIAN_DOC_ITEM_ID);

CREATE TABLE CMS_CUSTODIAN_AUTHORIZER ( 
	CUSTODIAN_AUTHZ_ID	BIGINT NOT NULL,
	CUSTODIAN_DOC_ID  	BIGINT,
	AUTHZ_ROLE        	VARCHAR(20) NOT NULL,
	AUTHZ_NAME        	VARCHAR(30) NOT NULL,
	SIGNATORY_NO      	VARCHAR(10) NOT NULL,
	AUTHZ_DATE        	TIMESTAMP NOT NULL,
	OPERATION         	VARCHAR(30) NOT NULL,
	CHECKLIST_ITEM_REF	BIGINT NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CUST_AUTH_I1
	ON CMS_CUSTODIAN_AUTHORIZER(CUSTODIAN_DOC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CUSTODIAN_AUTHORIZER
	ADD CONSTRAINT CC1169521159103
	PRIMARY KEY (CUSTODIAN_AUTHZ_ID);

CREATE TABLE CMS_CUSTODIAN_DOC ( 
	CUSTODIAN_DOC_ID      	BIGINT NOT NULL,
	STATUS                	VARCHAR(30),
	REASON                	VARCHAR(200),
	CHECKLIST_ITEM_ID     	BIGINT,
	CMS_LSP_APPR_LMTS_ID  	BIGINT,
	CHECKLIST_ID          	BIGINT,
	CMS_PLEDGOR_DTL_ID    	BIGINT,
	CMS_LMP_SUB_PROFILE_ID	BIGINT,
	CMS_COLLATERAL_ID     	BIGINT,
	CATEGORY              	VARCHAR(40) NOT NULL,
	SUB_CATEGORY          	VARCHAR(20) NOT NULL,
	VERSION_TIME          	BIGINT NOT NULL,
	LAST_UPDATE_DATE      	TIMESTAMP,
	NEW_CMS_REF_ID        	BIGINT,
	NEW_STAGE_ITEM_ID     	BIGINT,
	NEW_MAKER_USER_ID     	BIGINT,
	NEW_CHECKER_USER_ID   	BIGINT,
	NEW_MAKER_TRX_DATE    	TIMESTAMP,
	NEW_CHECKER_TRX_DATE  	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CUSTO_DOC_I3
	ON CMS_CUSTODIAN_DOC(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CUSTO_DOC_I1
	ON CMS_CUSTODIAN_DOC(STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX CUSTO_DOC_I4
	ON CMS_CUSTODIAN_DOC(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CUSTO_DOC_I2
	ON CMS_CUSTODIAN_DOC(CHECKLIST_ITEM_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_CUSTODIAN_DOC
	ADD CONSTRAINT CC1169521186492
	PRIMARY KEY (CUSTODIAN_DOC_ID);

CREATE TABLE CMS_DAP_COUNTRY ( 
	DAP_COUNTRY_ID      	BIGINT NOT NULL,
	DATA_ACCESS_ID      	BIGINT NOT NULL,
	GRANTED_COUNTRY     	VARCHAR(20),
	GRANTED_ORGANISATION	VARCHAR(20),
	DENIED_COUNTRY      	VARCHAR(20),
	DENIED_ORGANISATION 	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DAP_COUNTRY
	ADD CONSTRAINT CC1169521229103
	PRIMARY KEY (DAP_COUNTRY_ID);

CREATE TABLE CMS_DDN_GENERATED ( 
	DDN_ID                 	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	DEFERRED_TO            	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	DOUBLE,
	IS_SCC_ISSUED          	CHARACTER(1),
	VALID_FOR              	DOUBLE,
	EXTENDED_TO_DATE       	TIMESTAMP,
	APPROVAL_DATE          	TIMESTAMP,
	APPROVAL_BY            	VARCHAR(50),
	DDN_REF                	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	VARCHAR(20),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	VARCHAR(20),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	TYPE                   	CHARACTER(3),
	BCA_APPROVAL_DATE      	TIMESTAMP,
	BCA_APPROVAL_AUTHORITY 	VARCHAR(100),
	BCA_NEXT_REVIEW_DATE   	TIMESTAMP,
	BCA_EXT_REVIEW_DATE    	TIMESTAMP,
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	BCA_ORIGINAL_COUNTRY   	VARCHAR(20),
	BCA_ORIGINAL_ORG       	VARCHAR(20),
	LEGAL_NAME             	VARCHAR(100),
	CUSTOMER_NAME          	VARCHAR(100),
	CUST_SEGMENT_CODE      	VARCHAR(10),
	BFL_ISSUED_DATE        	TIMESTAMP,
	CREDIT_GRADE_CODE      	VARCHAR(10),
	SUB_PROFILE_ID         	VARCHAR(20),
	LEGAL_ID               	VARCHAR(20),
	RELEASE_TO				VARCHAR(50)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX DDN_GEN_I1
	ON CMS_DDN_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX DDN_GEN_I2
	ON CMS_DDN_GENERATED(GENERATION_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_DDN_GENERATED
	ADD CONSTRAINT CC1169521274839
	PRIMARY KEY (DDN_ID);

CREATE TABLE CMS_DDN_GENERATED_ITEM ( 
	DDN_ITEM_ID           	BIGINT NOT NULL,
	DDN_ID                	BIGINT,
	CMS_LSP_APPR_LMTS_ID  	BIGINT NOT NULL,
	DDN_LIMIT_CCY         	CHARACTER(3),
	DDN_LIMIT             	DECIMAL(20,2),
	HAS_ISSUED            	CHARACTER(1) NOT NULL,
	IS_DELETED            	CHARACTER(1),
	DDN_ITEM_REF          	BIGINT,
	ISSUE_DATE            	TIMESTAMP,
	LIMIT_TYPE            	VARCHAR(10),
	HAS_CERTIFICATION     	CHARACTER(1),
	MATURITY_DATE         	TIMESTAMP,
	APPROVED_LIMIT_AMT_CCY	CHARACTER(3),
	APPROVED_LIMIT_AMT    	DECIMAL(20,2),
	BKG_LOCTN_CTRY        	VARCHAR(20),
	SECURITY_IDS          	VARCHAR(2000),
	SECURITY_TYPES        	VARCHAR(2000),
	BKG_LOCTN_ORG         	VARCHAR(20),
	OUTER_LIMIT_REF       	VARCHAR(100),
	CO_BORROWER_LEGAL_ID  	VARCHAR(20),
	CO_BORROWER_NAME      	VARCHAR(100),
	APPROVAL_LIMIT_DATE   	TIMESTAMP,
	PRODUCT_TYPE          	VARCHAR(20),
	DOC_NUMBER				BIGINT,
	DOC_CODE				VARCHAR(20),
	DOC_DESC				VARCHAR(500),
	DATE_DEFER				TIMESTAMP,
	DATE_OF_RETURN			TIMESTAMP,
	DOC_STATUS				VARCHAR(30),
	ACTION_PARTY			VARCHAR(100),
	APPROVAL_DATE			TIMESTAMP,
	APPROVED_BY				VARCHAR(50)
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX DDN_GEN_IT_I1
	ON CMS_DDN_GENERATED_ITEM(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX DDN_GEN_IT_I2
	ON CMS_DDN_GENERATED_ITEM(DDN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_DDN_GENERATED_ITEM
	ADD CONSTRAINT CC1169521296130
	PRIMARY KEY (DDN_ITEM_ID);

CREATE TABLE CMS_DEAL_CASH ( 
	CASH_DEPOSIT_ID 	BIGINT NOT NULL,
	DEPOSIT_TYPE    	CHARACTER(1) NOT NULL,
	DEPOSIT_REF_NO  	VARCHAR(15) NOT NULL,
	DEPOSIT_CCY     	CHARACTER(3) NOT NULL,
	LOC_CTRY        	CHARACTER(2) NOT NULL,
	MATURITY_DATE   	TIMESTAMP NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	DEAL_ID         	BIGINT,
	STATUS          	VARCHAR(20),
	DEPOSIT_AMT     	DECIMAL(20,2),
	LAST_UPDATE_DATE	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX DEAL_CASH_I1
	ON CMS_DEAL_CASH(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_DEAL_CASH
	ADD CONSTRAINT CC1169521334375
	PRIMARY KEY (CASH_DEPOSIT_ID);

CREATE TABLE CMS_DEFERRAL_GENERATED ( 
	DEFERRAL_ID             	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	PROPOSED_BY             	VARCHAR(50),
	PROPOSED_BY_DESIGNAT    	VARCHAR(50),
	PROPOSED_BY_SIGN_NO     	VARCHAR(20),
	PROPOSED_BY_DATE        	TIMESTAMP,
	SUPPORTED_BY            	VARCHAR(50),
	SUPPORTED_BY_DESIGNAT   	VARCHAR(50),
	SUPPORTED_BY_COIN_NO    	VARCHAR(20),
	SUPPORTED_BY_DATE       	TIMESTAMP,
	APPROVED_BY_SCO         	VARCHAR(50),
	APPROVED_BY_SCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_SCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_SCO_DATE    	TIMESTAMP,
	APPROVED_BY_RCO         	VARCHAR(50),
	APPROVED_BY_RCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_RCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_RCO_DATE    	TIMESTAMP,
	APPROVED_BY_CCO         	VARCHAR(50),
	APPROVED_BY_CCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_CCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_CCO_DATE    	TIMESTAMP,
	NAME                    	VARCHAR(50),
	CREDIT_COMMITTEE        	VARCHAR(50),
	MIN_OF_MEETING          	VARCHAR(100),
	MEETING_DATE            	TIMESTAMP,
	REASON                  	VARCHAR(640),
	VERSION_TIME            	BIGINT,
	CMS_CUSTOMER_ID         	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DEFERRAL_GENERATED
	ADD CONSTRAINT CC1169521361554
	PRIMARY KEY (DEFERRAL_ID);

CREATE TABLE CMS_DEFERRAL_GENERATED_ITEM ( 
	DEFERRAL_ITEM_ID 	BIGINT NOT NULL,
	DEFERRAL_ITEM_REF	BIGINT,
	DEFERRAL_ID      	BIGINT,
	CHECKLIST_ID     	BIGINT,
	CHECKLIST_ITEM_ID	BIGINT,
	IS_DELETED       	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX DEF_GEN_IT_I1
	ON CMS_DEFERRAL_GENERATED_ITEM(DEFERRAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_DEFERRAL_GENERATED_ITEM
	ADD CONSTRAINT CC1169521386319
	PRIMARY KEY (DEFERRAL_ITEM_ID);

CREATE TABLE CMS_DIARY_ITEM ( 
	ITEM_ID                	BIGINT NOT NULL,
	LE_ID                  	VARCHAR(20) NOT NULL,
	CUSTOMER_NAME          	VARCHAR(100) NOT NULL,
	DESCRIPTION            	VARCHAR(150) NOT NULL,
	NARRATION              	VARCHAR(1600),
	ITEM_DUE_DATE          	TIMESTAMP NOT NULL,
	ITEM_EXPIRY_DATE       	TIMESTAMP NOT NULL,
	LAST_UPDATED_BY        	VARCHAR(50),
	LAST_UPDATED_TIME      	TIMESTAMP,
	IS_OBSOLETE            	CHARACTER(1),
	VERSION_TIME           	BIGINT,
	ALLOWED_COUNTRY        	CHARACTER(2),
	TEAM_TYPE_MEMBERSHIP_ID	BIGINT NOT NULL,
	CUSTOMER_SEGMENT       	VARCHAR(15),
	FAM                    	VARCHAR(50),
	TEAM_ID					BIGINT
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX DIARY_IT_I2
	ON CMS_DIARY_ITEM(TEAM_TYPE_MEMBERSHIP_ID, ITEM_DUE_DATE, ALLOWED_COUNTRY)
	ALLOW REVERSE SCANS ;

CREATE INDEX DIARY_IT_I4
	ON CMS_DIARY_ITEM(TEAM_TYPE_MEMBERSHIP_ID, ITEM_EXPIRY_DATE, ALLOWED_COUNTRY)
	ALLOW REVERSE SCANS ;

CREATE INDEX DIARY_IT_I3
	ON CMS_DIARY_ITEM(LE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_DIARY_ITEM
	ADD CONSTRAINT CC1169521409142
	PRIMARY KEY (ITEM_ID);

CREATE TABLE CMS_DOC_DYNAMIC_PROPERTY_SETUP (
	SETUP_ID 					BIGINT NOT NULL,
	SECURITY_SUB_TYPE_ID      	VARCHAR(30),
	PROPERTY_NAME				VARCHAR(30),
	PROPERTY_LABEL				VARCHAR(30),
	CATEGORY_CODE				VARCHAR(40),
	INPUT_TYPE					VARCHAR(30)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX DOC_DYN_PROP_SETUP_IDX1
	ON CMS_DOC_DYNAMIC_PROPERTY_SETUP (SECURITY_SUB_TYPE_ID, CATEGORY_CODE);
	
CREATE TABLE CMS_DOCUMENT ( 
	CMS_COLLATERAL_ID    		BIGINT NOT NULL,
	ISDA_DATE            		TIMESTAMP,
	ISDA_PROD_DESC       		VARCHAR(50),
	IFEMA_DATE           		TIMESTAMP,
	IFEMA_PROD_DESC      		VARCHAR(50),
	ICOM_DATE            		TIMESTAMP,
	ICOM_PROD_DESC       		VARCHAR(50),
	DOC_DESC             		VARCHAR(250),
	DOCUMENT_DATE       	 	TIMESTAMP,
	MIN_AMT              		DECIMAL(20,2),
	MIN_AMT_CCY          		CHARACTER(3),
	MAX_AMT              		DECIMAL(20,2),
	MAX_AMT_CCY          		CHARACTER(3),
	DOC_AMT             	 	DECIMAL(20,2),
	DOC_AMT_CCY         	 	CHARACTER(3),
	DOC_REF_NO           		VARCHAR(100),
	DEED_ASSIGNMT_TYPE   		VARCHAR(20),
	PROJECT_NAME         		VARCHAR(80),
	AWARDED_DATE         		TIMESTAMP,
	LETTER_INSTRUCT_FLAG 		CHARACTER(1),
	LETTER_UNDERTAKE_FLAG		CHARACTER(1),
	BLANKET_ASSIGNMENT   		VARCHAR(80),
	ISSUER 						VARCHAR(100),
	LEASE_RENTAL_AGREEMENT_IND 	CHAR(1),
	LEASE_LIMITATION 			VARCHAR(100),
	PROPERTY_TYPE 				VARCHAR(40),
	LOTS_LOCATION 				VARCHAR(15),
	TITLE_NUMBER_TYPE 			VARCHAR(20),
	TITLE_NUMBER 				VARCHAR(20),
	BUY_BACK_AMT 				DECIMAL(20,2),
	BUY_BACK_AMT_CCY 			CHAR(3),
	LEASE_TYPE 					VARCHAR(20),
	CONTRACT_NO    				VARCHAR(50),
	CONTRACT_AMT    			DECIMAL(20,2),
	CONTRACT_NAME    			VARCHAR(50),
	CONTRACT_DATE    			TIMESTAMP,
	LEASE_AGREEMENT_DATE 		TIMESTAMP,
	GURANTEE_AMOUNT 			DECIMAL(20, 2)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DOCUMENT
	ADD CONSTRAINT CC1169521431454
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_DOCUMENT_GLOBALLIST ( 
	DOCUMENT_ID         	BIGINT NOT NULL,
	DOCUMENT_DESCRIPTION	VARCHAR(500) NOT NULL,
	DOCUMENT_CODE       	VARCHAR(20),
	CATEGORY            	VARCHAR(20) NOT NULL,
	EXPIRY_DATE         	TIMESTAMP,
	VERSION_TIME        	BIGINT,
	MONITOR_TYPE        	VARCHAR(20), 
    DOC_VERSION      		VARCHAR(7),
    IS_PRE_APPROVE   		CHAR(1),
    IS_FOR_BORROWER  		CHAR(1),
    IS_FOR_PLEDGOR   		CHAR(1),
    LOAN_APP_TYPE    		VARCHAR(40)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DOCUMENT_GLOBALLIST
	ADD CONSTRAINT CC1169521454217
	PRIMARY KEY (DOCUMENT_ID);

CREATE INDEX DOC_GLOBAL_IDX1
	ON CMS_DOCUMENT_GLOBALLIST (EXPIRY_DATE, DOCUMENT_ID)
	ALLOW REVERSE SCANS;
	
CREATE INDEX DOC_GLOBAL_IDX2
	ON CMS_DOCUMENT_GLOBALLIST (DOCUMENT_CODE)
	ALLOW REVERSE SCANS;
	
CREATE TABLE CMS_DOCUMENT_ITEM ( 
	DOC_ITEM_ID    					BIGINT NOT NULL,
	DOC_DESCRIPTION					VARCHAR(500),
	IN_VAULT       					CHARACTER(1),
	IN_EXT_CUSTODY 					CHARACTER(1),
	IS_MANDATORY   					CHARACTER(1),
	IS_MANDATORY_FOR_BORROWER   	CHARACTER(1),
	IS_MANDATORY_FOR_PLEDGOR   		CHARACTER(1),
	EXPIRY_DATE    					TIMESTAMP,
	IS_AUDIT       					CHARACTER(1),
	IS_DELETED     					CHARACTER(1),
	MASTERLIST_ID  					BIGINT,
	DOCUMENT_ID    					BIGINT,
	DOCUMENT_CODE  					VARCHAR(20),
	FROM_DOC_ID    					BIGINT,
	MONITOR_TYPE   					VARCHAR(20),
	DOC_VERSION      				VARCHAR(7),
	WITH_TITLE					CHAR(1),
	IS_PROPERTY_COMPLETED				CHAR(1),
	WITHOUT_TITLE					CHAR(1),
	UNDER_CONSTRUCTION				CHAR(1),
	NEW_WITH_FBR					CHAR(1),
	NEW_WITHOUT_FBR					CHAR(1), 
	USED_WITH_FBR					CHAR(1),
	USED_WITHOUT_FBR				CHAR(1), 
	IS_PRE_APPROVE   				CHAR(1),
	IS_FOR_BORROWER  				CHAR(1),
	IS_FOR_PLEDGOR   				CHAR(1),
    LOAN_APP_TYPE    				VARCHAR(40)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DOCUMENT_ITEM
	ADD CONSTRAINT CC1169521481606
	PRIMARY KEY (DOC_ITEM_ID);

CREATE TABLE CMS_DOCUMENT_MASTERLIST ( 
	MASTERLIST_ID       	BIGINT NOT NULL,
	COUNTRY_ISO_CODE    	CHARACTER(2),
	CATEGORY            	VARCHAR(40),
	APPLICABLE_LAW      	VARCHAR(20),
	SECURITY_SUB_TYPE_ID	VARCHAR(30),
	FROM_TEMPLATE_ID    	BIGINT,
	CUSTOMER_TYPE_CODE  	VARCHAR(20),
	SECURITY_TYPE_ID    	VARCHAR(20),
	VERSION_TIME        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX DOC_MLST_I1
	ON CMS_DOCUMENT_MASTERLIST(CATEGORY, APPLICABLE_LAW, CUSTOMER_TYPE_CODE, COUNTRY_ISO_CODE)
	ALLOW REVERSE SCANS ;

CREATE INDEX DOC_MLST_I2
	ON CMS_DOCUMENT_MASTERLIST(CATEGORY, SECURITY_TYPE_ID, SECURITY_SUB_TYPE_ID, COUNTRY_ISO_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_DOCUMENT_MASTERLIST
	ADD CONSTRAINT CC1169521509476
	PRIMARY KEY (MASTERLIST_ID);
	
	
CREATE TABLE CMS_DOCUMENT_PROPERTY (
	PROPERTY_ID   	BIGINT NOT NULL,
	DOC_ITEM_ID 	BIGINT,
	SETUP_ID 		BIGINT,
    CATEGORY_CODE   VARCHAR(40),
	PROPERTY_VALUE	VARCHAR(40),
	REFERENCE_ID    BIGINT,
	STATUS			VARCHAR(20)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DOCUMENT_PROPERTY
 ADD CONSTRAINT PK_DYN_PROP
 PRIMARY KEY (PROPERTY_ID);	
 
CREATE INDEX DOC_PROP_I1
	ON CMS_DOCUMENT_PROPERTY(DOC_ITEM_ID)
	ALLOW REVERSE SCANS ;

CREATE TABLE CMS_EARMARK ( 
	EARMARK_ID            	BIGINT NOT NULL,
	EARMARK_GROUP_ID      	BIGINT NOT NULL,
	FEED_ID               	BIGINT,
	CUSTOMER_NAME         	VARCHAR(50),
	SOURCE_SYSTEM         	VARCHAR(20),
	SECURITY_ID           	VARCHAR(20),
	AA_NUMBER             	VARCHAR(20),
	BRANCH_NAME           	VARCHAR(20),
	BRANCH_CODE           	VARCHAR(20),
	CIF_NO                	VARCHAR(20),
	ACCOUNT_NO            	VARCHAR(20),
	EARMARK_UNITS         	DECIMAL(20,0),
	EARMARK_STATUS        	VARCHAR(10),
	EARMARKING_DATE       	TIMESTAMP,
	HOLDING_IND           	CHARACTER(1),
	RELEASE_STATUS        	VARCHAR(10),
	INFO_CORRECT_IND      	CHARACTER(1),
	INFO_INCORRECT_DETAILS	VARCHAR(200),
	WAIVE_APPROVE_IND     	CHARACTER(1),
	VERSION_TIME          	BIGINT,
	STATUS                	VARCHAR(20),
	DATE_MAX_CAP_BREACH   	TIMESTAMP,
	PURPOSE_OF_EARMARKING 	VARCHAR(50) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_EARMARK
	ADD CONSTRAINT PK_EARMARK
	PRIMARY KEY (EARMARK_ID);

CREATE TABLE CMS_EARMARK_GROUP ( 
	EARMARK_GROUP_ID        	BIGINT NOT NULL,
	FEED_ID                 	BIGINT NOT NULL,
	SOURCE_SYSTEM_ID        	VARCHAR(20),
	CMS_ACTUAL_HOLDING      	DECIMAL(20,0),
	EARMARK_HOLDING         	DECIMAL(20,0),
	EARMARK_CURRENT         	DECIMAL(20,0),
	BREACH_IND              	CHARACTER(1),
	DATE_QUOTA_BREACH       	TIMESTAMP,
	DATE_MAX_CAP_BREACH     	TIMESTAMP,
	LAST_BATCH_UPDATE       	TIMESTAMP,
	VERSION_TIME            	BIGINT,
	STATUS                  	VARCHAR(20),
	LAST_QUOTA_BREACH_DATE  	TIMESTAMP,
	LAST_MAX_CAP_BREACH_DATE	TIMESTAMP,
	TOTAL_NO_OF_UNITS       	DECIMAL(20,0),
	COUNTER_CODE            	VARCHAR(14) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_EARMARK_GROUP
	ADD CONSTRAINT PK_EARMARK_GROUP
	PRIMARY KEY (EARMARK_GROUP_ID);

CREATE TABLE CMS_FEE_DETAILS ( 
	FEE_DETAILS_ID   	DECIMAL(19,0) NOT NULL,
	CMS_COLLATERAL_ID	DECIMAL(19,0),
	CMS_REF_ID       	DECIMAL(19,0),
	STATUS           	VARCHAR(10),
	EFF_DATE         	DATE,
	EXP_DATE         	DATE,
	GUARANTEE_FEE    	DECIMAL(20,2),
	TENOR            	INTEGER,
	CGC_FEE          	DECIMAL(20,2),
	TENOR_UNIT       	VARCHAR(20),
	CGC_FEE_PAYMENT_DATE	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_FEE_DETAILS
	ADD CONSTRAINT SQL080609120106210
	PRIMARY KEY (FEE_DETAILS_ID);
	
CREATE INDEX CMS_FEE_DTL_IDX1
	ON CMS_FEE_DETAILS (CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_FEED_EXCEPTION ( 
	EXCEPTION_ID    	BIGINT NOT NULL,
	RIC             	VARCHAR(20),
	EXCHANGE        	VARCHAR(40),
	TYPE            	VARCHAR(20),
	UPDATED_DATE    	TIMESTAMP,
	REASON_CODE     	VARCHAR(1000),
	CMS_VERSION_TIME	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_FEED_EXCEPTION
	ADD CONSTRAINT CC1169521531969
	PRIMARY KEY (EXCEPTION_ID);

CREATE TABLE CMS_FEED_GROUP ( 
	FEED_GROUP_ID   	BIGINT NOT NULL,
	GROUP_TYPE      	VARCHAR(20),
	GROUP_SUBTYPE   	VARCHAR(20),
	CMS_VERSION_TIME	BIGINT,
	GROUP_STOCK_TYPE	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX FEED_GRP_I1
	ON CMS_FEED_GROUP(GROUP_TYPE, FEED_GROUP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_FEED_GROUP
	ADD CONSTRAINT CC1169521555663
	PRIMARY KEY (FEED_GROUP_ID);

CREATE TABLE CMS_FINANCE_DOC ( 
	DOC_ID            	BIGINT NOT NULL,
	DOC_TYPE          	CHARACTER(3) NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	DEAL_ID           	BIGINT,
	DOC_NO            	VARCHAR(50),
	OTHER_DOC_NAME    	VARCHAR(150),
	GOODS_DESC        	VARCHAR(150),
	ORDER_CCY         	CHARACTER(3),
	ORDER_EXPIRY_DATE 	TIMESTAMP,
	EXP_BANK_CTRY     	CHARACTER(2),
	EXP_BANK_NAME     	VARCHAR(50),
	LC_REF_NO         	VARCHAR(50),
	LC_EXPIRY_DATE    	TIMESTAMP,
	COUNTER_PARTY_NAME	VARCHAR(150),
	DOC_REMK          	VARCHAR(250),
	IS_TERMS_MATCH    	CHARACTER(1),
	ORDER_QTY_UOM_ID  	VARCHAR(40),
	STATUS            	VARCHAR(20),
	ORDER_AMT         	DECIMAL(20,2),
	ORDER_QTY         	DECIMAL(19,4),
	LOC_DUE_DATE      	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX FIN_DOC_I1
	ON CMS_FINANCE_DOC(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_FINANCE_DOC
	ADD CONSTRAINT CC1169521576973
	PRIMARY KEY (DOC_ID);

CREATE TABLE CMS_FOREX ( 
	FEED_ID         	BIGINT NOT NULL,
	BUY_CURRENCY    	CHARACTER(3) NOT NULL,
	SELL_CURRENCY   	CHARACTER(3) NOT NULL,
	BUY_RATE        	DECIMAL(21,6),
	BUY_UNIT        	BIGINT NOT NULL DEFAULT 0,
	EFFECTIVE_DATE  	TIMESTAMP NOT NULL,
	SELL_RATE       	DECIMAL(21,6),
	SELL_UNIT       	BIGINT NOT NULL DEFAULT 0,
	FEED_GROUP_ID   	BIGINT,
	CMS_VERSION_TIME	BIGINT NOT NULL DEFAULT 0,
	FEED_REF        	BIGINT NOT NULL DEFAULT 0
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX FOREX_I1
	ON CMS_FOREX(BUY_CURRENCY)
	ALLOW REVERSE SCANS ;

CREATE INDEX FOREX_I2
	ON CMS_FOREX(FEED_GROUP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_FOREX
	ADD CONSTRAINT CC1169521596962
	PRIMARY KEY (FEED_ID);

CREATE TABLE CMS_FOREX_HISTORY ( 
	HISTORY_ID      	BIGINT NOT NULL,
	BUY_CURRENCY    	CHARACTER(3) NOT NULL,
	SELL_CURRENCY   	CHARACTER(3) NOT NULL,
	BUY_RATE        	DECIMAL(21,6),
	BUY_UNIT        	BIGINT NOT NULL DEFAULT 0,
	EFFECTIVE_DATE  	TIMESTAMP NOT NULL,
	SELL_RATE       	DECIMAL(21,6),
	SELL_UNIT       	BIGINT NOT NULL DEFAULT 0,
	FEED_GROUP_ID   	BIGINT,
	CMS_VERSION_TIME	BIGINT NOT NULL DEFAULT 0,
	FEED_REF        	BIGINT NOT NULL DEFAULT 0
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX FOREX_HIS_I1
	ON CMS_FOREX_HISTORY(FEED_GROUP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_FOREX_HISTORY
	ADD CONSTRAINT CC1169521625443
	PRIMARY KEY (HISTORY_ID);

CREATE TABLE CMS_FUNCTION_ACCESS ( 
	ID       	BIGINT NOT NULL,
	ACTION   	VARCHAR(250) NOT NULL,
	EVENT    	VARCHAR(50) NOT NULL,
	ROLE_TYPE	BIGINT NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_FUNCTION_ACCESS
	ADD CONSTRAINT CC1169521644010
	PRIMARY KEY (ID);
	
CREATE INDEX FAP_IDX1
	ON CMS_FUNCTION_ACCESS (ACTION, EVENT, ROLE_TYPE)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_GUARANTEE ( 
	CMS_COLLATERAL_ID           	BIGINT NOT NULL,
	BENEFICIARY_NAME            	VARCHAR(100),
	DESCRIPTION                 	VARCHAR(250),
	GUARANTEE_AMT               	DECIMAL(20,2),
	CURRENCY_CODE               	CHARACTER(3),
	GUARANTEE_DATE              	TIMESTAMP,
	ISSUING_BANK                	VARCHAR(100),
	ISSUING_BANK_COUNTRY        	CHARACTER(2),
	REFERENCE_NO                	VARCHAR(25),
	BANK_COUNTRY_RISK_APPROVAL  	CHARACTER(1),
	MINIMAL_FSV                 	DECIMAL(20,2),
	MINIMAL_FSV_CURRENCY        	CHARACTER(3),
	ISSUING_CONFIRM_DATE        	TIMESTAMP,
	INSURANCE                   	VARCHAR(1),
	AUTO_DEBIT                  	VARCHAR(1),
	CLAIM_PERIOD                	DECIMAL(9,3),
	CLAIM_PERIOD_TIME_UNIT      	VARCHAR(10),
	EXPIRY_DATE                 	TIMESTAMP,
	PROJECT_NAME                	VARCHAR(80),
	AWARDED_DATE                	TIMESTAMP,
	LETTER_OF_INSTRUCTION_FLAG  	CHARACTER(1),
	LETTER_OF_UNDERTAKING_FLAG  	CHARACTER(1),
	BLANKET_ASSIGNMENT          	VARCHAR(80),
	COMMENTS                    	VARCHAR(160),
	CORRESPONDENCE_BANK         	CHARACTER(1),
	WITHIN_CORRESPOND_BANK_LIMIT	CHARACTER(1),
	CURRENT_LG_DETAILS          	VARCHAR(3),
	CURRENT_LG_REF_NBR          	VARCHAR(12),
	CURRENT_EFF_DATE            	DECIMAL(7,0),
	CURRENT_LG_TENOR            	DECIMAL(2,0),
	CURRENT_SCHEME              	VARCHAR(40),
	CURRENT_EXPIRATION_DATE     	DECIMAL(7,0),
	CURRENT_LG_STATUS           	VARCHAR(3),
	CURRENT_GTEE_COVER_AMT      	DECIMAL(17,2),
	CURRENT_GTEE_FEE_AMT        	DECIMAL(17,2),
	CURRENT_MULTIPLE_SINGLE     	CHARACTER(1),
	AMM_EFF_DATE                	DECIMAL(7,0),
	AMM_GTEE_COVER_AMT          	DECIMAL(17,2),
	AMM_GTEE_FEE_AMT            	DECIMAL(17,2),
	CGC_FEE_PAYMENT_ACCT        	DECIMAL(15,0),
	FACILITY_TYPE               	VARCHAR(4),
	PREVIOUS_LG_DETAILS         	VARCHAR(3),
	PREVIOUS_LG_REF_NBR         	VARCHAR(12),
	PREVIOUS_DATE_CANCELLED     	DECIMAL(7,0),
	PREVIOUS_CANCELLED_BY       	VARCHAR(8),
	PREVIOUS_LG_STATUS          	VARCHAR(3),
	PREVIOUS_REASON             	VARCHAR(3),
	PREVIOUS_GTEE_FEE_AMT       	DECIMAL(17,2),
	HOLDING_PERIOD              	DECIMAL(9,3),
	HOLDING_PERIOD_TIME_UNIT    	VARCHAR(10),
	CLAIM_DATE						TIMESTAMP,
	SECURED_PORTION					SMALLINT,
	SECURED_AMOUNT_ORIGIN			DECIMAL(20,2),
	UNSECURED_PORTION				SMALLINT,
	UNSECURED_AMOUNT_ORIGIN			DECIMAL(20,2),
	SECURED_AMOUNT_CALC				DECIMAL(20,2),
	UNSECURED_AMOUNT_CALC			DECIMAL(20,2),
	GUARANTEE_AMT_CALC				DECIMAL(20,2),
	ICC_RULES_COMPLIED				CHARACTER(1),
	URD_COMPLIED					CHARACTER(1),
	UCP600_COMPLIED					CHARACTER(1),
	REIMBURSEMENT_BANK_NUM 		VARCHAR(40),
	REIMBURSEMENT_BANK_VALUE 	VARCHAR(10),
	LG_CANCELLATION_DATE		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_GUARANTEE
	ADD CONSTRAINT CC1169521668926
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_HEDGE_CNTR ( 
	HEDGECONTRACT_ID  	BIGINT NOT NULL,
	TREASURY_REF_NO   	VARCHAR(50) NOT NULL,
	AGREEMT_REF_NO    	VARCHAR(30) NOT NULL,
	MARGIN_PCT        	SMALLINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	CMS_COLLATERAL_ID 	BIGINT,
	DEAL_DATE         	TIMESTAMP NOT NULL,
	DEAL_AMT_CCY      	CHARACTER(3),
	AGREEMT_DATE      	TIMESTAMP,
	COUNTER_PARTY_NAME	VARCHAR(150),
	STATUS            	VARCHAR(20),
	DEAL_AMT          	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX HG_CNTR_I1
	ON CMS_HEDGE_CNTR(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_HEDGE_CNTR
	ADD CONSTRAINT CC1169521692179
	PRIMARY KEY (HEDGECONTRACT_ID);

CREATE TABLE CMS_HEDGE_EXT ( 
	HEDGE_EXT_ID   	BIGINT NOT NULL,
	START_DATE     	TIMESTAMP NOT NULL,
	END_DATE       	TIMESTAMP NOT NULL,
	PERIOD_UNIT_QTY	SMALLINT NOT NULL,
	PERIOD_UNIT    	CHARACTER(1) NOT NULL,
	CMS_REF_ID     	BIGINT NOT NULL,
	DEAL_ID        	BIGINT,
	STATUS         	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX HG_EXT_I1
	ON CMS_HEDGE_EXT(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_HEDGE_EXT
	ADD CONSTRAINT CC1169521709434
	PRIMARY KEY (HEDGE_EXT_ID);

CREATE TABLE CMS_INSURANCE ( 
	CMS_COLLATERAL_ID     		BIGINT NOT NULL,
	DESCRIPTION           		VARCHAR(250),
	ISDA_DATE             		TIMESTAMP,
	TREASURY_DATE         		TIMESTAMP,
	INSURER_NAME          		VARCHAR(100),
	INSURANCE_TYPE        		VARCHAR(20),
	BANK_RISK_CONFIRMATION		CHARACTER(1),
	EFFECTIVE_DATE        		TIMESTAMP,
	EXPIRY_DATE           		TIMESTAMP,
	POLICY_NO             		VARCHAR(30),
	EXT_LEGAL_COUNSEL     		VARCHAR(100),
	ACCELERATION_CLAUSE   		CHARACTER(1),
	LOCAL_CCY_IN_CM       		CHARACTER(3),
	CORE_MARKET           		VARCHAR(10),
	BANK_INT_NOTED        		CHARACTER(1),
	INSURED_AMOUNT        		DECIMAL(20,2),
	INSURED_AMT_CURR      		CHARACTER(3),
	ARR_INSURER					VARCHAR(40),
	INSURANCE_PREMIUM 			DECIMAL(20,2),
	INSURANCE_PREMIUM_CURRENCY 	CHARACTER(3),
	ISSUANCE_DATE 				TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_INSURANCE
	ADD CONSTRAINT CC1169521731115
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_INSURANCE_CDS ( 
	CDS_ID                  	BIGINT NOT NULL,
	CMS_REF_ID              	BIGINT,
	STATUS                  	VARCHAR(150),
	BANK_ENTITY             	VARCHAR(150),
	HEDGE_TYPE              	VARCHAR(150),
	HEDGE_REF               	VARCHAR(150),
	CDS_REF                 	VARCHAR(150),
	TRADE_ID                	VARCHAR(150),
	TRADE_DATE              	TIMESTAMP,
	DEAL_DATE               	TIMESTAMP,
	START_DATE              	TIMESTAMP,
	CDS_MATURITY_DATE       	TIMESTAMP,
	TENOR                   	INTEGER,
	TENOR_UNIT              	VARCHAR(40),
	TRADE_CURRENCY          	CHARACTER(3),
	NOTIONAL_HEDGED_AMT     	DECIMAL(20,2),
	REFERENCE_ENTITY        	VARCHAR(150),
	CDS_BOOKING_LOCATION    	VARCHAR(150),
	LOAN_BOND_BOOKING_LOC   	VARCHAR(150),
	REFERENCE_ASSET         	VARCHAR(150),
	ISSUER                  	VARCHAR(150),
	ISSUER_ID               	VARCHAR(150),
	ISSUER_DETAILS          	VARCHAR(250),
	DEALT_PRICE             	DECIMAL(21,6),
	RESIDUAL_MATURITY       	DECIMAL(19,4),
	SETTLEMENT              	VARCHAR(150),
	PAR_VALUE               	DECIMAL(19,3),
	DECLINE_MARKET_VALUE    	DECIMAL(19,3),
	EVENT_DETERMINATION_DATE	TIMESTAMP,
	COMPLIANCE_CERTIFICATE  	VARCHAR(150),
	NOMINAL_VALUE           	DECIMAL(20,2),
	MARGIN                  	DECIMAL(5,2),
	VALUATION_DATE          	TIMESTAMP,
	VALUATION_CMV           	DECIMAL(20,2),
	VALUTION_FSV            	DECIMAL(20,2),
	NON_STD_REVALUATION_FREQ	INTEGER,
	NON_STD_REVALUATION_UNIT	VARCHAR(40),
	VALUATION_CURRENCY      	CHARACTER(3),
	CMS_COLLATERAL_ID       	BIGINT,
	SOURCE_SECURITY_ID      	VARCHAR(20),
	SOURCE_ID               	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX INS_CDS_I1
	ON CMS_INSURANCE_CDS(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_INSURANCE_CDS
	ADD CONSTRAINT CC1169521760547
	PRIMARY KEY (CDS_ID);

CREATE TABLE CMS_INSURANCE_POLICY ( 
	INSURANCE_POLICY_ID           	BIGINT NOT NULL,
	INSURANCE_CATEGORY            	CHARACTER(3),
	POLICY_NO                     	VARCHAR(50),
	CURRENCY_CODE                 	CHARACTER(3),
	INSURER_NAME                  	VARCHAR(100),
	INSURANCE_TYPE                	VARCHAR(50),
	EXPIRY_DATE                   	TIMESTAMP,
	INSURABLE_AMT                 	DECIMAL(20,2),
	INSURED_AMT                   	DECIMAL(20,2),
	EFFECTIVE_DATE                	TIMESTAMP,
	INSURED_AGAINST               	VARCHAR(250),
	ADDRESS                       	VARCHAR(500),
	INSR_ID                       	VARCHAR(20),
	STATUS                        	VARCHAR(20),
	CMS_COLLATERAL_ID             	BIGINT,
	DOCUMENT_NO                   	VARCHAR(30),
	LMT_PROFILE_ID                	BIGINT,
	ADDRESS_LINE_1                	VARCHAR(40),
	ADDRESS_LINE_2                	VARCHAR(40),
	ADDRESS_LINE_3                	VARCHAR(40),
	ADDRESS_LINE_4                	VARCHAR(40),
	BANK_CUST_ARRANGE_INS_IND     	CHARACTER(1),
	CASH_SURRENDER_VALUE          	DECIMAL(13,2),
	PROP_NO_COVER_NOTE_NUMBER     	VARCHAR(20),
	REMARKS                       	VARCHAR(60),
	GROSS_PREMIUM                 	DECIMAL(13,2),
	STAMP_DUTY                    	DECIMAL(13,2),
	SERVICE_TAX_PERCT             	DECIMAL(11,9),
	SERVICE_AMT                   	DECIMAL(13,2),
	GLOBAL_LOCAL_IND              	CHARACTER(1),
	REBATE_BY_INSURANCE           	DECIMAL(11,9),
	REBATE_AMT_BY_INSURANCE_COMPAN	DECIMAL(13,2),
	REBATE_TO_BORROWER            	DECIMAL(11,9),
	REBATE_AMT_TO_BORROWER        	DECIMAL(15,2),
	NET_PREMIUM_PAY_TO_INSURANCE_C	DECIMAL(13,2),
	NET_PREMIUM_PAY_BY_BORROWER   	DECIMAL(13,2),
	COMMISSION_EARNED             	DECIMAL(13,2),
	CONVERSION_CURRENCY				CHARACTER(3),
	INS_INSSUE_DATE					TIMESTAMP,
	INSURANCE_EXCHANGE_RATE			DECIMAL(20,2),
	INSURANCE_COMPANY_NAME			VARCHAR(100), 
	DEBITING_AC_NO					VARCHAR(50), 
	AC_TYPE							VARCHAR(20), 
	NON_SCHEME_OR_SCHEME			VARCHAR(3), 
	INSURANCE_PREMIUM				DECIMAL(20,2),  
	AUTO_DEBIT						CHARACTER(1), 
	TAKAFUL_COMMISSION				DECIMAL(20,2), 
	NEW_AMT_INSURED					DECIMAL(20,0),
	ENDORSEMENT_DATE				TIMESTAMP,
	BUILDING_OCCUPATION				VARCHAR(50),
	NATURE_OF_WORK					VARCHAR(50),
	TYPE_OF_BUILDING				VARCHAR(50),
	NUMBER_OF_STOREY				INTEGER,
	WALL							VARCHAR(50),
	EXTENSION_WALLS					VARCHAR(50),
	ROOF							VARCHAR(50),
	EXTENSION_ROOF					VARCHAR(50),
	ENDORSEMENT_CODE				VARCHAR(50),
	POLICY_CUSTODIAN				VARCHAR(50),
	INSURANCE_CLAIM_DATE			TIMESTAMP,
	TYPE_OF_FLOOR					VARCHAR(50),
	TYPE_OF_PERILS1					VARCHAR(50),
	TYPE_OF_PERILS2					VARCHAR(50),
	TYPE_OF_PERILS3					VARCHAR(50),
	TYPE_OF_PERILS4					VARCHAR(50),
	TYPE_OF_PERILS5					VARCHAR(50),
	REMARK1							VARCHAR(60),
	REMARK2							VARCHAR(60),
	REMARK3							VARCHAR(60),
	POLICY_SEQ_NO                 	VARCHAR(3),
	SOURCE_SECURITY_ID            	VARCHAR(20),
	SOURCE_ID                     	VARCHAR(10),
	LOS_INSURANCE_POLICY_ID 		BIGINT,
	INSURER_TAG 					varchar(40)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX INS_PLC_I3
	ON CMS_INSURANCE_POLICY(EXPIRY_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX INS_PLC_I1
	ON CMS_INSURANCE_POLICY(CMS_COLLATERAL_ID, POLICY_SEQ_NO)
	ALLOW REVERSE SCANS ;

CREATE INDEX INS_PLC_I2
	ON CMS_INSURANCE_POLICY(DOCUMENT_NO)
	ALLOW REVERSE SCANS ;

CREATE INDEX INS_PLC_I10
ON CMS_INSURANCE_POLICY
( POLICY_NO ASC, INSR_ID ASC )
ALLOW REVERSE SCANS;
	
ALTER TABLE CMS_INSURANCE_POLICY
	ADD CONSTRAINT CC1169521793064
	PRIMARY KEY (INSURANCE_POLICY_ID);


create index INS_PLC_I5 on cms_insurance_policy
	(SOURCE_SECURITY_ID) allow reverse scans;

CREATE TABLE CMS_INTEREST_RATE ( 
	INT_RATE_ID  	BIGINT NOT NULL,
	INT_RATE_TYPE	VARCHAR(40),
	INT_RATE_DATE	TIMESTAMP,
	PERCENTAGE   	DECIMAL(19,6),
	GROUP_ID     	BIGINT NOT NULL,
	VERSION_TIME 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_INTEREST_RATE
	ADD CONSTRAINT IR_INTRATE_ID_PK
	PRIMARY KEY (INT_RATE_ID);

CREATE TABLE CMS_INTERFACE_CONTROL ( 
	LAST_BDW_DOWNLOAD_DATE  	TIMESTAMP,
	LAST_FOREX_DOWNLOAD_DATE	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_LIMIT_CHARGE_MAP ( 
	LIMIT_CHARGE_MAP_ID     	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	CHARGE_ID               	BIGINT NOT NULL,
	CHARGE_DETAIL_ID        	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT,
	STATUS                  	VARCHAR(10),
	CUSTOMER_CATEGORY       	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID	BIGINT,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_LIMIT_CHARGE_MAP
	ADD CONSTRAINT CC1169521817670
	PRIMARY KEY (LIMIT_CHARGE_MAP_ID);
		
CREATE INDEX LMT_CHG_I5
	ON CMS_LIMIT_CHARGE_MAP(STATUS, CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_CHG_I3
	ON CMS_LIMIT_CHARGE_MAP(CMS_LSP_APPR_LMTS_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_CHG_I1
	ON CMS_LIMIT_CHARGE_MAP(CMS_LSP_CO_BORROW_LMT_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_CHG_I4
	ON CMS_LIMIT_CHARGE_MAP(CMS_COLLATERAL_ID, STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_CHG_I2
	ON CMS_LIMIT_CHARGE_MAP(CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_CHG_I6
	ON CMS_LIMIT_CHARGE_MAP (CMS_LSP_LMT_PROFILE_ID, CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS;

    
CREATE TABLE CMS_LIMIT_SECURITY_MAP ( 
	CHARGE_ID               	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	SCI_LAS_SYS_GEN_ID      	BIGINT,
	SCI_LAS_LLP_ID          	BIGINT,
	SCI_LAS_LSP_ID          	BIGINT,
	SCI_LAS_LE_ID           	VARCHAR(20),
	SCI_LAS_LMT_ID          	VARCHAR(40),
	SCI_LAS_SEC_ID          	VARCHAR(50),
	LAS_PLEDGOR_ID          	BIGINT,
	COMM_CASH_PERCENT       	DECIMAL(5,2),
	LMT_TYPE_VALUE          	VARCHAR(10),
	UPDATE_STATUS_IND       	CHARACTER(1),
	CASH_REQ_PCT            	SMALLINT,
	IS_ALLOW_POOL           	CHARACTER(1),
	IS_ALLOW_SPECIFIC       	CHARACTER(1),
	RELEASED_LMT_AMT        	DECIMAL(20,2),
	APPLIED_LMT_AMT         	DECIMAL(20,2),
	LMT_CRRNCY_ISO_CODE     	CHARACTER(3),
	IS_APPLIED_LMT_AMT_INCL 	CHARACTER(1),
	IS_RELEASED_LMT_AMT_INCL	CHARACTER(1),
	PRIORITY_RANK           	BIGINT,
	CUSTOMER_CATEGORY       	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID	BIGINT,
	SCI_CLS_LCL_ID          	VARCHAR(20),
	SCI_CLS_COBO_LE_ID      	VARCHAR(20),
	SCI_CLS_COBO_LSP_ID     	BIGINT,
	CREATE_DATE             	TIMESTAMP,
	DELETION_DATE           	TIMESTAMP,
	SCI_LAS_FAC_CODE        	VARCHAR(3),
	SCI_LAS_FAC_SEQ         	BIGINT,
	CHARGE_AMOUNT           	DECIMAL(20,2),
	SCI_LAS_BCA_REF_NUM     	VARCHAR(35),
	CHANGE_IND              	CHARACTER(1),
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	DRAW_AMOUNT 				DECIMAL(20,2),
	DRAW_AMOUNT_CURRENCY 		CHARACTER(3),
    PLEDGE_AMOUNT 				DECIMAL(20,2),
    PLEDGE_AMOUNT_CURRENCY 		CHARACTER(3),
    DRAW_AMOUNT_PERCENTAGE 		DECIMAL(10,7),
    PLEDGE_AMOUNT_PERCENTAGE 	DECIMAL(10,7),
	SOURCE_ID               	VARCHAR(10),
	CMS_SEC_ALLOCATED_AMT       DECIMAL(30,12)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_LIMIT_SECURITY_MAP
	ADD CONSTRAINT CC1169521847312
	PRIMARY KEY (CHARGE_ID);
		
CREATE INDEX LMT_SEC_I5
	ON CMS_LIMIT_SECURITY_MAP(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX LMT_SEC_I2
-- 	ON CMS_LIMIT_SECURITY_MAP(CUSTOMER_CATEGORY, CMS_LSP_CO_BORROW_LMT_ID, CMS_COLLATERAL_ID, SCI_LAS_LLP_ID)
-- 	ALLOW REVERSE SCANS ;

-- CREATE INDEX IDX_SECMAP_SOURCE
-- 	ON CMS_LIMIT_SECURITY_MAP(SOURCE_ID, UPDATE_STATUS_IND)
-- 	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_SEC_I8
	ON CMS_LIMIT_SECURITY_MAP(CMS_LSP_LMT_PROFILE_ID, CMS_COLLATERAL_ID, UPDATE_STATUS_IND)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_LMT_SEC1
	ON CMS_LIMIT_SECURITY_MAP(CMS_LSP_APPR_LMTS_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_SEC_I3
	ON CMS_LIMIT_SECURITY_MAP(CMS_LSP_CO_BORROW_LMT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_SEC_I6
	ON CMS_LIMIT_SECURITY_MAP(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX LMT_SEC_I1
-- 	ON CMS_LIMIT_SECURITY_MAP(CUSTOMER_CATEGORY, CMS_LSP_APPR_LMTS_ID, CMS_COLLATERAL_ID, SCI_LAS_LLP_ID)
-- 	ALLOW REVERSE SCANS ;


CREATE INDEX LMT_SEC_I7
	ON CMS_LIMIT_SECURITY_MAP(CMS_LSP_APPR_LMTS_ID, CMS_COLLATERAL_ID, UPDATE_STATUS_IND, CHARGE_ID)
	ALLOW REVERSE SCANS ;	


CREATE TABLE CMS_LOAN_GUARANTOR ( 
	GUARANTOR_ID  	BIGINT NOT NULL,
	GUARANTOR_NAME	VARCHAR(150) NOT NULL,
	CMS_REF_ID    	BIGINT NOT NULL,
	LOAN_ID       	BIGINT,
	STATUS        	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOAN_GUA_I1
	ON CMS_LOAN_GUARANTOR(LOAN_ID) 
	ALLOW REVERSE SCANS ;
    
ALTER TABLE CMS_LOAN_GUARANTOR
	ADD CONSTRAINT CC1169521872979
	PRIMARY KEY (GUARANTOR_ID);

CREATE TABLE CMS_LOAN_LMT ( 
	LOAN_LMT_ID             	BIGINT NOT NULL,
	CMS_REF_ID              	BIGINT NOT NULL,
	STATUS                  	VARCHAR(20),
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	LOAN_ID                 	BIGINT,
	CUSTOMER_CATEGORY       	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOAN_LMT_I1
	ON CMS_LOAN_LMT(CMS_LSP_CO_BORROW_LMT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LOAN_LMT_I2
	ON CMS_LOAN_LMT(LOAN_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LOAN_LMT_I3
	ON CMS_LOAN_LMT(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_LOAN_LMT
	ADD CONSTRAINT CC1169521909462
	PRIMARY KEY (LOAN_LMT_ID);

CREATE TABLE CMS_LOAN_OBLIGOR ( 
	OBLIGOR_ID  	BIGINT NOT NULL,
	OBLIGOR_NAME	VARCHAR(150) NOT NULL,
	CMS_REF_ID  	BIGINT NOT NULL,
	LOAN_ID     	BIGINT,
	STATUS      	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOAN_OBL_I1
	ON CMS_LOAN_OBLIGOR(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_LOAN_OBLIGOR
	ADD CONSTRAINT CC1169522271182
	PRIMARY KEY (OBLIGOR_ID);

CREATE TABLE CMS_LOAN_PARTICIPANT ( 
	PARTICIPANT_ID  	BIGINT NOT NULL,
	PARTICIPANT_NAME	VARCHAR(150) NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	LOAN_ID         	BIGINT,
	PRICE_REMK      	VARCHAR(500),
	STATUS          	VARCHAR(20),
	ALLOC_AMT       	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOAN_PAR_I1
	ON CMS_LOAN_PARTICIPANT(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_LOAN_PARTICIPANT
	ADD CONSTRAINT CC1169522773995
	PRIMARY KEY (PARTICIPANT_ID);

CREATE TABLE CMS_LOAN_PAYMT ( 
	EXP_PAYMT_ID        	BIGINT NOT NULL,
	EXP_PAYMT_DATE      	TIMESTAMP NOT NULL,
	CMS_REF_ID          	BIGINT NOT NULL,
	LOAN_ID             	BIGINT,
	STATUS              	VARCHAR(20),
	EXP_PRNCPL_PAYMT_AMT	DECIMAL(20,2),
	EXP_INT_PAYMT_AMT   	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOAN_PAY_I1
	ON CMS_LOAN_PAYMT(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_LOAN_PAYMT
	ADD CONSTRAINT CC1169522809015
	PRIMARY KEY (EXP_PAYMT_ID);

CREATE TABLE CMS_LOAN_SUB_LMT ( 
	SUB_LMT_ID        	BIGINT NOT NULL,
	SUB_LMT_AMT_CCY   	CHARACTER(3) NOT NULL,
	LOAN_FACILITY_TYPE	CHARACTER(1) NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	LOAN_ID           	BIGINT,
	STATUS            	VARCHAR(20),
	SUB_LMT_AMT       	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOAN_SL_I1
	ON CMS_LOAN_SUB_LMT(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_LOAN_SUB_LMT
	ADD CONSTRAINT CC1169522850024
	PRIMARY KEY (SUB_LMT_ID);

CREATE TABLE CMS_LOGIN_AUDIT ( 
	LOGIN_ID      	VARCHAR(30) NOT NULL,
	LOGIN_TIME    	TIMESTAMP,
	LOGOUT_TIME   	TIMESTAMP,
	LOGIN_STATUS  	VARCHAR(10) NOT NULL,
	NO_OF_ATTEMPTS	SMALLINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_LP_TODO ( 
	ACTION_NAME               	VARCHAR(100),
	PROCESS_URL               	VARCHAR(300),
	VIEW_URL                  	VARCHAR(300),
	PROCESS_MEMBERSHIP_TYPE_ID	BIGINT,
	ACTION_ID                 	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_MARKETABLE_SEC ( 
	CMS_COLLATERAL_ID     	BIGINT NOT NULL,
	TOTAL_CMV             	DECIMAL(20,2),
	TOTAL_PROTOFOLIO_ITEMS	SMALLINT,
	MINIMAL_FSV           	DECIMAL(20,2),
	MINIMAL_FSV_CURRENCY  	CHARACTER(3),
	STOCK_COUNTER_CODE		VARCHAR(30),
	CAPPED_PRICE			DECIMAL(20,2),
	INTEREST_RATE			DECIMAL(11,9)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MARKETABLE_SEC
	ADD CONSTRAINT CC1169522884413
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_MEMBERSHIP_TYPE ( 
	MEMBERSHIP_TYPE_ID	BIGINT NOT NULL,
	TYPE_NAME         	VARCHAR(100),
	PRIORITY          	SMALLINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MEMBERSHIP_TYPE
	ADD CONSTRAINT CC1169522912494
	PRIMARY KEY (MEMBERSHIP_TYPE_ID);

CREATE TABLE CMS_MF_CHECKLIST ( 
	MF_CHECKLIST_ID  	BIGINT NOT NULL,
	CMS_COLLATERAL_ID	BIGINT NOT NULL,
	MF_TEMPLATE_ID   	BIGINT NOT NULL,
	MF_TEMPLATE_NAME 	VARCHAR(150),
	LAST_UPDATE_DATE 	TIMESTAMP,
	STATUS           	VARCHAR(20),
	VERSION_TIME     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MF_CHECKLIST
	ADD CONSTRAINT MF_CHECKLIST_PK
	PRIMARY KEY (MF_CHECKLIST_ID);

CREATE TABLE CMS_MF_CHECKLIST_ITEM ( 
	MF_CHECKLIST_ITEM_ID  	BIGINT NOT NULL,
	MF_CHECKLIST_ID       	BIGINT,
	FACTOR_DESCRIPTION    	VARCHAR(250),
	WEIGHT_PERCENTAGE     	DECIMAL(5,2),
	VALUER_ASSIGNED_FACTOR	DECIMAL(9,2),
	WEIGHT_SCORE          	DECIMAL(9,2),
	MF_CHECKLIST_ITEM_REF 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MF_CHECKLIST_ITEM
	ADD CONSTRAINT MFCHKLSTITEM_PK
	PRIMARY KEY (MF_CHECKLIST_ITEM_ID);

CREATE TABLE CMS_MF_ITEM ( 
	MF_ITEM_ID        	BIGINT NOT NULL,
	MF_TEMPLATE_ID    	BIGINT,
	FACTOR_DESCRIPTION	VARCHAR(250),
	WEIGHT_PERCENTAGE 	DECIMAL(5,2),
	STATUS            	VARCHAR(10),
	MF_ITEM_REF       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MF_ITEM
	ADD CONSTRAINT MF_ITEM_PK
	PRIMARY KEY (MF_ITEM_ID);

CREATE TABLE CMS_MF_TEMPLATE ( 
	MF_TEMPLATE_ID    	BIGINT NOT NULL,
	MF_TEMPLATE_NAME  	VARCHAR(150),
	MF_TEMPLATE_STATUS	VARCHAR(20),
	SECURITY_TYPE_ID  	VARCHAR(2),
	LAST_UPDATE_DATE  	TIMESTAMP,
	STATUS            	VARCHAR(10),
	VERSION_TIME      	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MF_TEMPLATE
	ADD CONSTRAINT MF_TEMPLATE_PK
	PRIMARY KEY (MF_TEMPLATE_ID);

CREATE TABLE CMS_MF_TEMPLATE_SEC_SUBTYPE ( 
	TEMPLATE_SUBTYPE_ID 	BIGINT NOT NULL,
	MF_TEMPLATE_ID      	BIGINT NOT NULL,
	SECURITY_SUB_TYPE_ID	VARCHAR(5) NOT NULL,
	STATUS              	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MF_TEMPLATE_SEC_SUBTYPE
	ADD CONSTRAINT MF_SEC_SUBTYPE_PK
	PRIMARY KEY (TEMPLATE_SUBTYPE_ID);

CREATE TABLE CMS_MONITOR_DOC_CODE ( 
	ID           	BIGINT NOT NULL,
	DOCUMENT_CODE	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_MONITOR_DOC_CODE
	ADD CONSTRAINT CC1169522966522
	PRIMARY KEY (ID);

CREATE TABLE CMS_MQ_MESSAGE_LOG ( 
	LOG_ID                  	BIGINT NOT NULL,
	SCI_MESSAGE_ID          	VARCHAR(10),
	PUBLISH_DATE            	TIMESTAMP,
	RECEIVED_MSG_DATE       	TIMESTAMP,
	RECEIVED_MSG            	CLOB(999999),
	SUBSCRIBER_ACK_DATE     	TIMESTAMP,
	SUBSCRIBER_RESPONSE_TYPE	CHARACTER(1),
	SUBSCRIBER_RESPONSE_CODE	VARCHAR(14),
	SUBSCRIBER_RESPONSE_DESC	VARCHAR(250),
	SUBSCRIBER_RESPONSE_MSG 	CLOB(999999),
	ERROR_STACK_TRACE       	CLOB(999999) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX MQ_MSG_I1
	ON CMS_MQ_MESSAGE_LOG(SCI_MESSAGE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX MQ_MSG_I2
	ON CMS_MQ_MESSAGE_LOG(PUBLISH_DATE)
	ALLOW REVERSE SCANS ;
	
CREATE TABLE CMS_EAI_MESSAGE_LOG ( 
	LOG_ID                  	BIGINT NOT NULL,
	MESSAGE_REF_NUM				VARCHAR(50),
	MESSAGE_TYPE				VARCHAR(50),
	MESSAGE_ID					VARCHAR(10),
	PUBLISH_TYPE				VARCHAR(10),
	PUBLISH_DATE				TIMESTAMP,
	SOURCE						VARCHAR(10),
	RECEIVED_MSG_PATH			VARCHAR(150),
	RESPONSE_MSG_PATH			VARCHAR(150),
	RESPONSE_MSG_ID				VARCHAR(10),
	RESPONSE_CODE				VARCHAR(20),
	RESPONSE_DESC				VARCHAR(3000),
	END_PROCESSED_DATE			TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_TRADE_MESSAGE_LOG ( 
	LOG_ID                  	BIGINT NOT NULL,
	MASTER_TRX_ID			BIGINT,
	CORRELATION_ID			VARCHAR(50),
	MESSAGE_REF_NUM				VARCHAR(50),
	MESSAGE_TYPE				VARCHAR(50),
	MESSAGE_ID					VARCHAR(10),
	PUBLISH_TYPE				VARCHAR(10),
	PUBLISH_DATE				TIMESTAMP,
	SOURCE						VARCHAR(10),
	REQUEST_MSG_PATH			VARCHAR(150),
	RESPONSE_MSG_PATH			VARCHAR(150),
	RESPONSE_MSG_ID				VARCHAR(10),
	RESPONSE_CODE				VARCHAR(20),
	RESPONSE_DESC				VARCHAR(3000),
	END_PROCESSED_DATE			TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;


CREATE INDEX IDX_EAI_MSG_REF
	ON CMS_EAI_MESSAGE_LOG(MESSAGE_REF_NUM)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX EAI_MSG_LOG_IDX2
	ON CMS_EAI_MESSAGE_LOG ( PUBLISH_DATE, MESSAGE_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_EAI_AA_RESPONSE_LOG (
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	HOST_BCA_REF_NUM		VARCHAR(35),
	LOS_BCA_REF_NUM			VARCHAR(35),
	SOURCE_ID				VARCHAR(10),
	AA_RECEIVED_DATE		TIMESTAMP,
	RESPONSE_FIRE_DATE		TIMESTAMP
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_EAI_AA_RESPONSE
	ON CMS_EAI_AA_RESPONSE_LOG(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_NOMINEES ( 
	CMS_NOMINEES_ID           	BIGINT NOT NULL,
	FEED_ID                   	BIGINT,
	COUNTER_NAME              	VARCHAR(50),
	LISTED_UNLISTED_SHARES_IND	VARCHAR(20),
	FI_STOCK_IND              	VARCHAR(20),
	STOCK_EXCHANGE_BOARD      	VARCHAR(20),
	FOREIGN_LOCAL_IND         	VARCHAR(20),
	TYPES                     	VARCHAR(20),
	PRICE_CAP                 	DECIMAL(21,5),
	FACILITY_IND              	VARCHAR(20),
	SOURCE_SYSTEM_ID          	VARCHAR(20),
	ORGANIZATION_CODE         	VARCHAR(40),
	LISTEDSHARE_QUANTITY      	DECIMAL(20,2),
	PAID_UP_CAPITAL           	DECIMAL(20,2),
	PAR_VALUE                 	DECIMAL(20,2),
	TOTAL_NO_OF_UNITS         	DECIMAL(20,0),
	LAST_UPDATED_DATE         	TIMESTAMP,
	COUNTRY                   	VARCHAR(3),
	UNIT_PRICE                	DECIMAL(21,6),
	CURRENCY                  	CHARACTER(3),
	STOCK_CODE                	VARCHAR(30),
	RIC_CODE                  	VARCHAR(30),
	ISIN_CODE                 	VARCHAR(30) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_NOMINEES
	ADD CONSTRAINT SQL080609120113030
	PRIMARY KEY (CMS_NOMINEES_ID);
	

CREATE TABLE CMS_NOMINEES_CUSTOMER_TEMP ( 
	CMS_NOMINEES_CUSTOMER_TEMP_ID	BIGINT NOT NULL,
	STOCK_CODE                   	VARCHAR(30),
	RIC_CODE                     	VARCHAR(30),
	ISIN_CODE                    	VARCHAR(30),
	COUNTER_NAME                 	VARCHAR(50),
	LISTED_UNLISTED_SHARES_IND   	VARCHAR(20),
	FI_STOCK_IND                 	VARCHAR(20),
	STOCK_EXCHANGE_BOARD         	VARCHAR(20),
	FOREIGN_LOCAL_IND            	VARCHAR(20),
	TYPES                        	VARCHAR(20),
	PRICE_CAP                    	DECIMAL(21,5),
	FACILITY_IND                 	VARCHAR(20),
	AA_NO                        	VARCHAR(10),
	GCIF_NO                      	VARCHAR(10),
	ACCOUNT_NO                   	VARCHAR(15),
	CUSTOMER_NAME                	VARCHAR(50),
	BRANCH_NAME                  	VARCHAR(30),
	BRANCH_CODE                  	VARCHAR(10),
	SOURCE_SYSTEM_ID             	VARCHAR(20),
	ORGANIZATION_CODE            	VARCHAR(40),
	LISTEDSHARE_QUANTITY         	DECIMAL(20,2),
	PAID_UP_CAPITAL              	DECIMAL(20,2),
	PAR_VALUE                    	DECIMAL(20,2),
	TOTAL_NO_OF_UNITS            	DECIMAL(20,0),
	EXPIRY_DATE                  	TIMESTAMP,
	UNIT_PRICE                   	DECIMAL(21,6),
	CURRENCY                     	CHARACTER(3),
	SHARE_STATUS                 	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_NOMINEES_CUSTOMER_TEMP
	ADD CONSTRAINT SQL080609120122000
	PRIMARY KEY (CMS_NOMINEES_CUSTOMER_TEMP_ID);

CREATE TABLE CMS_NPL ( 
	CMS_NPL_ID               	DECIMAL(20,2) NOT NULL,
	ACCOUNT_NUMBER           	VARCHAR(50),
	SOURCE_ID                	VARCHAR(10),
	NPL_LMT_ID               	VARCHAR(20),
	NPL_BCA_REF_NUM          	VARCHAR(20),
	DELINQUENT               	CHARACTER(1),
	ACCOUNT_STATUS           	VARCHAR(10),
	FACILITY_TYPE            	VARCHAR(8),
	PART_PAYMENT_RECEIVED    	DECIMAL(20,2),
	DATE_CURRENT_DOUBTFUL    	TIMESTAMP,
	DATE_FIRST_DOUBTFUL      	TIMESTAMP,
	DATE_REGULARISED         	TIMESTAMP,
	SUSPENSE_INTEREST        	DECIMAL(20,2),
	SUSPENSE_INT_WRITTEN_OFF 	DECIMAL(20,2),
	DATE_JUDGEMENT           	TIMESTAMP,
	JUDGEMENT_SUM            	DECIMAL(20,2),
	DATE_WRITE_OFF           	TIMESTAMP,
	CIVIL_SUIT_NO            	VARCHAR(40),
	MONTHS_INSTAL_ARREARS    	DECIMAL(20,2),
	MONTHS_INTEREST_ARREARS  	DECIMAL(20,2),
	DATE_DISPOSED            	TIMESTAMP,
	STATUS                   	CHARACTER(1),
	DATE_REPOSSESED          	TIMESTAMP,
	VERSION_TIME             	BIGINT,
	NPL_DATE                 	TIMESTAMP,
	AUTO_NPL_FLAG            	CHARACTER(1),
	NET_OUTSTANDING          	DECIMAL(20,2),
	SPECIFIC_PROVISION       	DECIMAL(20,2),
	FACILITY_CODE            	VARCHAR(3),
	FACILITY_SEQ             	BIGINT,
	CAR_CODE                 	VARCHAR(2),
	LATE_CHARGE_IN_SUSPENSE  	DECIMAL(15,2),
	CAR_CODE_STAT_DATE       	TIMESTAMP,
	AMT_PARTIALLY_WRITTEN_OFF	DECIMAL(15,2),
	CMS_REF_ID               	BIGINT,
	SETTLED                  	CHARACTER(1) ,
	SETTLED_DATE                TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX SI_NPL_IDX1
	ON CMS_NPL(ACCOUNT_NUMBER, SOURCE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_NPL
	ADD CONSTRAINT PK_CMS_NPL
	PRIMARY KEY (CMS_NPL_ID);

CREATE TABLE CMS_OTHERS ( 
	CMS_COLLATERAL_ID      	BIGINT NOT NULL,
	ENV_RISKY_STATUS       	CHARACTER(2),
	ENV_RISKY_DATE         	TIMESTAMP,
	ENV_RISKY_REMARKS      	VARCHAR(250),
	DESCRIPTION_OTHERS     	VARCHAR(250),
	IS_PHY_INSPECT         	CHARACTER(1),
	PHY_INSPECT_FREQ       	SMALLINT,
	PHY_INSPECT_FREQ_UNIT  	CHARACTER(2),
	LAST_PHY_INSPECT_DATE  	TIMESTAMP,
	NEXT_PHY_INSPECT_DATE  	TIMESTAMP,
	MINIMAL_VALUE          	DECIMAL(20,2),
	INSURER_NAME           	VARCHAR(100),
	INSURANCE_TYPE         	VARCHAR(20),
	INSURED_AGAINST        	VARCHAR(100),
	INSURABLE_AMT          	DECIMAL(20,2),
	INSURABLE_CURRENCY_CODE	CHARACTER(3),
	INSURED_CURRENCY_CODE  	CHARACTER(3),
	INSURED_AMT            	DECIMAL(20,2),
	INS_EFFECTIVE_DATE     	TIMESTAMP,
	POLICY_NO              	VARCHAR(30),
	INS_EXPIRY_DATE        	TIMESTAMP,
	INS_IND                	VARCHAR(1),
	AT_DB_COLLATERAL_FEE   	VARCHAR(1),
	COLLATERAL_MSG         	VARCHAR(1),
	CASH_VALUE             	VARCHAR(1),
	NUMBER_OF_UNITS    		DECIMAL(15,2)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_OTHERS
	ADD CONSTRAINT CC1169523006309
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_PASSWORD_HISTORY ( 
	PWD_HISTORY_ID    	BIGINT NOT NULL,
	CREDENTIALS_REF_ID	BIGINT NOT NULL,
	PWD_TYPE          	CHARACTER(1) NOT NULL,
	PASSWORD          	VARCHAR(50) NOT NULL,
	PWD_SET_DATE      	TIMESTAMP NOT NULL,
	PWD_EXPIRY_DATE   	TIMESTAMP NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PWD_HIS_I1
	ON CMS_PASSWORD_HISTORY(CREDENTIALS_REF_ID, PWD_TYPE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_PASSWORD_HISTORY
	ADD CONSTRAINT CC1169523043692
	PRIMARY KEY (PWD_HISTORY_ID);

CREATE TABLE CMS_PASSWORD_MAILER ( 
	PWD_MAILER_ID    	BIGINT NOT NULL,
	REFERENCE_NO     	BIGINT NOT NULL,
	OWNER_ID         	BIGINT NOT NULL,
	REQUESTED_DATE   	TIMESTAMP NOT NULL,
	PROCESSED_DATE   	TIMESTAMP,
	AUTHENTICATION_ID	BIGINT NOT NULL,
	PWD_MAILER_STATUS	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_PASSWORD_MAILER
	ADD CONSTRAINT CC1169523065484
	PRIMARY KEY (PWD_MAILER_ID);

CREATE TABLE CMS_PASSWORD_POLICY ( 
	POLICY_ID          	BIGINT NOT NULL,
	NUMBER_WARN_DAYS   	BIGINT,
	PWD_MAX_AGE        	BIGINT,
	MAX_REPEATED_CHARS 	BIGINT,
	PWD_MIN_AGE        	BIGINT,
	MIN_ALPHA_CHARS    	BIGINT,
	PWD_MIN_LENGTH     	BIGINT,
	PWD_MAX_LENGTH     	BIGINT,
	TIME_EXPIRE_LOCKOUT	BIGINT,
	PWD_HISTORY        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_PASSWORD_POLICY
	ADD CONSTRAINT CC1169523090219
	PRIMARY KEY (POLICY_ID);

	
CREATE TABLE CMS_PASSWORD_POLICY_HISTORY ( 
	OLD_NUMBER_WARN_DAYS  	BIGINT,
	OLD_PWD_MAX_AGE       	BIGINT,
	OLD_MAX_REPEATED_CHARS	BIGINT,
	OLD_PWD_MIN_AGE       	BIGINT,
	OLD_MIN_ALPHA_CHARS   	BIGINT,
	OLD_PWD_MIN_LENGTH    	BIGINT,
	OLD_PWD_MAX_LENGTH    	BIGINT,
	OLD_PWD_HISTORY       	BIGINT,
	NEW_NUMBER_WARN_DAYS  	BIGINT,
	NEW_PWD_MAX_AGE       	BIGINT,
	NEW_MAX_REPEATED_CHARS	BIGINT,
	NEW_PWD_MIN_AGE       	BIGINT,
	NEW_MIN_ALPHA_CHARS   	BIGINT,
	NEW_PWD_MIN_LENGTH    	BIGINT,
	NEW_PWD_MAX_LENGTH    	BIGINT,
	NEW_PWD_HISTORY       	BIGINT,
	TIME_STAMP            	TIMESTAMP,
	UPDATE_BY             	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_PCH_SALE ( 
	PURCHASE_SALES_ID  	BIGINT NOT NULL,
	CMS_REF_ID         	BIGINT NOT NULL,
	DEAL_ID            	BIGINT,
	PCH_SHIP_DATE      	TIMESTAMP,
	PCH_EXPIRY_DATE    	TIMESTAMP,
	PCH_SHIP_SRC       	VARCHAR(150),
	PCH_SHIP_DEST      	VARCHAR(150),
	PCH_TRANSPT_DOC_NO 	VARCHAR(150),
	PCH_PAYMTMODE_DESC 	VARCHAR(150),
	PCH_BANK_NAME      	VARCHAR(150),
	PCH_IS_CLAIM_ALLOW 	CHARACTER(1),
	PCH_CLAIM_DAY_QTY  	SMALLINT,
	PCH_REF_NO         	VARCHAR(150),
	SALE_UNIT_PRICE    	DECIMAL(21,6),
	SALE_UNIT_PRICE_CCY	CHARACTER(3),
	SALE_SHIP_DATE     	TIMESTAMP,
	SALE_EXPIRY_DATE   	TIMESTAMP,
	SALE_SHIP_SRC      	VARCHAR(150),
	SALE_SHIP_DEST     	VARCHAR(150),
	SALE_TRANSPT_DOC_NO	VARCHAR(150),
	SALE_PAYMTMODE_DESC	VARCHAR(150),
	SALE_BANK_NAME     	VARCHAR(150),
	SALE_IS_CLAIM_ALLOW	CHARACTER(1),
	SALE_CLAIM_DAY_QTY 	SMALLINT,
	SALE_REF_NO        	VARCHAR(150),
	SALE_REMK          	VARCHAR(250),
	PCH_REMK           	VARCHAR(250),
	BUYER_ID           	BIGINT,
	SUPPLIER_ID        	BIGINT,
	OTHER_BUYER_NAME   	VARCHAR(150),
	OTHER_SUPPLIER_NAME	VARCHAR(150),
	SALE_QTY_UOM_ID    	VARCHAR(20),
	STATUS             	VARCHAR(20),
	SALE_QTY           	DECIMAL(19,4),
	PCH_UNIT_PRICE     	DECIMAL(21,6),
	PCH_UNIT_PRICE_CCY 	CHARACTER(3),
	PCH_QTY            	DECIMAL(19,4),
	PCH_QTY_UOM_ID     	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PCH_SAL_I1
	ON CMS_PCH_SALE(BUYER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX PCH_SAL_I3
	ON CMS_PCH_SALE(DEAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX PCH_SAL_I2
	ON CMS_PCH_SALE(SUPPLIER_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_PCH_SALE
	ADD CONSTRAINT CC1169525464784
	PRIMARY KEY (PURCHASE_SALES_ID);

CREATE TABLE CMS_POLICY_CAP ( 
	POLICY_CAP_ID              	BIGINT NOT NULL,
	BOARD                      	VARCHAR(65),
	MAX_TRADE_CAP_NON_FI       	DECIMAL(4,1),
	MAX_COLLATERAL_CAP_NON_FI  	DECIMAL(4,1),
	QUOTA_COLLATERAL_CAP_NON_FI	DECIMAL(4,1),
	MAX_COLLATERAL_CAP_FI      	DECIMAL(4,1),
	QUOTA_COLLATERAL_CAP_FI    	DECIMAL(4,1),
	LIQUID_MOA                 	DECIMAL(4,1),
	ILLIQUID_MOA               	DECIMAL(4,1),
	CURRENCY                   	VARCHAR(3),
	MAX_CAP_PRICE              	DECIMAL(7,2),
	GROUP_ID                   	BIGINT,
	CMS_REF_ID                 	BIGINT,
	VERSION_TIME               	BIGINT,
	POLICY_CAP_GROUP_ID        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_POLICY_CAP
	ADD CONSTRAINT CRP_PC_ID_PK
	PRIMARY KEY (POLICY_CAP_ID);

CREATE TABLE CMS_POLICY_CAP_GROUP ( 
	POLICY_CAP_GROUP_ID	BIGINT NOT NULL,
	STOCK_EXCHANGE     	VARCHAR(10),
	BANK_ENTITY        	VARCHAR(40),
	VERSION_TIME       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_POLICY_CAP_GROUP
	ADD CONSTRAINT PCG_PK
	PRIMARY KEY (POLICY_CAP_GROUP_ID);

CREATE TABLE CMS_PORTFOLIO_ITEM ( 
	ITEM_ID                  	BIGINT NOT NULL,
	TYPE                     	VARCHAR(20),
	CERTIFICATE_NO           	VARCHAR(20),
	REGISTERED_NAME          	VARCHAR(120),
	ISSUER_NAME              	VARCHAR(120),
	NO_OF_UNITS              	BIGINT,
	NOMINAL_VALUE            	DECIMAL(20,2),
	AGENT_NAME               	VARCHAR(120),
	AGENT_CONFIRM_DATE       	TIMESTAMP,
	BOND_ISSUE_DATE          	TIMESTAMP,
	BOND_MATURITY_DATE       	TIMESTAMP,
	CURRENCY_CODE            	CHARACTER(3),
	CMS_COLLATERAL_ID        	BIGINT,
	IS_BLACKLISTED           	CHARACTER(1),
	SETTLEMENT_ORG           	VARCHAR(20),
	ISSUER_ID_TYPE           	VARCHAR(30),
	STOCK_EXCHANGE           	VARCHAR(40),
	STOCK_EXCHANGE_COUNTRY   	CHARACTER(2),
	INDEX_NAME               	VARCHAR(100),
	RIC                      	VARCHAR(30),
	BASEL_COMPLIANT_TEXT     	VARCHAR(50),
	CMV                      	DECIMAL(20,2),
	FSV                      	DECIMAL(20,2),
	CMV_CURRENCY             	CHARACTER(3),
	FSV_CURRENCY             	CHARACTER(3),
	LOCAL_EXCHANGE           	VARCHAR(40),
	GOVT_GUARANTEE           	CHARACTER(1),
	NAME_OF_GOVT             	VARCHAR(100),
	LEAD_MANAGER             	VARCHAR(100),
	EXCHANGE_CONTROL_OBTAINED	CHARACTER(1),
	SECURITY_CUSTODIAN       	VARCHAR(100),
	SECURITY_MATURITY_DATE   	TIMESTAMP,
	CMS_REF_ID               	BIGINT,
	UNIT_PRICE               	DECIMAL(21,6),
	UNIT_PRICE_CURRENCY      	CHARACTER(3),
	STATUS                   	VARCHAR(10),
	CUSTODIAN_TYPE           	CHARACTER(1),
	BOND_RATING              	VARCHAR(20),
	COUNTER_CODE             	VARCHAR(20),
	STOCK_CODE               	VARCHAR(30),
	ISIN_CODE                	VARCHAR(30),
	RECOVERY_DATE            	TIMESTAMP,
	HOLDING_PERIOD           	DECIMAL(9,3),
	HOLDING_PERIOD_UOM       	VARCHAR(10),
	RECOGNIZED_EXCHANGE_FLAG 	CHARACTER(1),
	SOURCE_ID                	VARCHAR(10),
	CLIENT_CODE					VARCHAR(30),
	CDS_NUMBER					VARCHAR(50),
	EXERCISE_PRICE				DECIMAL(20,4),
	BROKER_NAME					VARCHAR(120),
	EXCHANGE_CONTROL_DATE		TIMESTAMP,
	RECOGN_EXCHANGE          	VARCHAR(20), 
	IS_LEGAL_ENFORCE_DATE		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PORT_ITM_I1
	ON CMS_PORTFOLIO_ITEM(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

-- not in used
-- CREATE INDEX PORT_ITM_I2
-- 	ON CMS_PORTFOLIO_ITEM(RIC)
-- 	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_PORTFOLIO_ITEM
	ADD CONSTRAINT CC1169525537398
	PRIMARY KEY (ITEM_ID);

CREATE TABLE CMS_PORTFOLIO_ITEM_DTL ( 
	ITEM_DTL_ID     	BIGINT NOT NULL,
	ITEM_ID         	BIGINT NOT NULL,
	NUMBER_OF_UNITS 	DECIMAL(20,2),
	SHARE_TYPE      	CHARACTER(1),
	STATUS          	VARCHAR(10),
	TRANSACTION_DATE	TIMESTAMP,
	UNIT_SIGN       	CHARACTER(1),
	COUNTER_CODE    	VARCHAR(20),
	SHARE_ID        	VARCHAR(50) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_PORTFOLIO_ITEM_DTL
	ADD CONSTRAINT ITEM_ID_PK
	PRIMARY KEY (ITEM_DTL_ID);

CREATE TABLE CMS_PRECOND ( 
	PRECOND_ID            	BIGINT NOT NULL,
	PRECOND               	VARCHAR(1100),
	UPDATE_DATE           	TIMESTAMP,
	UPDATE_USER_ID        	BIGINT,
	UPDATE_USER_INFO      	VARCHAR(100),
	CMS_LSP_LMT_PROFILE_ID	BIGINT,
	CMS_COLLATERAL_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_PRECOND
	ADD CONSTRAINT CC1169525574131
	PRIMARY KEY (PRECOND_ID);

CREATE TABLE CMS_PRICE_FEED ( 
	FEED_ID                     	BIGINT NOT NULL,
	RIC                         	VARCHAR(30),
	TYPE                        	VARCHAR(20),
	COUNTRY                     	CHARACTER(2),
	EXCHANGE                    	VARCHAR(40),
	UNIT_PRICE                  	DECIMAL(21,6),
	CURRENCY                    	CHARACTER(3),
	ISIN_CODE                   	VARCHAR(30),
	NAME                        	VARCHAR(100),
	IS_BLACKLISTED              	CHARACTER(1),
	IS_SUSPENDED                	CHARACTER(1),
	FUND_MANAGER_NAME           	VARCHAR(50),
	LAST_UPDATED_DATE           	TIMESTAMP,
	LAST_UPDATED_BY             	VARCHAR(20),
	TOTAL_OUTSTANDING_UNIT      	BIGINT,
	FEED_GROUP_ID               	BIGINT,
	CMS_VERSION_TIME            	BIGINT NOT NULL DEFAULT 0,
	OFFER                       	DECIMAL(20,2),
	TICKER                      	VARCHAR(20),
	FUND_MANAGER_CODE           	VARCHAR(20),
	PRODUCT_CODE                	VARCHAR(20),
	MATURITY_DATE               	TIMESTAMP,
	FEED_REF                    	BIGINT NOT NULL,
	RATING                      	VARCHAR(20),
	LISTEDSHARE_QUANTITY        	DECIMAL(20,2),
	EFFECTIVE_DATE_ISSUE_RATING 	TIMESTAMP,
	ISSUE_RATING_AGENCY         	VARCHAR(20),
	EXPECTED_TREND_ISSUE_RATING 	VARCHAR(100),
	DESCRPTION_ISSUE_RATING     	VARCHAR(150),
	ISSUER_RATING               	VARCHAR(20),
	EFFECTIVE_DATE_ISSUER_RATING	TIMESTAMP,
	ISSUER_RATING_AGENCY        	VARCHAR(20),
	EXPECTED_TREND_ISSUER_RATING	VARCHAR(100),
	DESCRPTION_ISSUER_RATING    	VARCHAR(150),
	STOCK_CODE                  	VARCHAR(10),
	PREV_DAY_PRICE              	DECIMAL(21,6),
	PREV_QUARTER_PRICE          	DECIMAL(21,6),
	EXPIRY_DATE                 	TIMESTAMP,
	FUND_CODE                   	VARCHAR(30),
	PAR_VALUE                   	DECIMAL(20,2),
	PAID_UP_CAPITAL             	DECIMAL(20,2),
	SHARE_STATUS                	VARCHAR(1),
	BOARD_TYPE                  	VARCHAR(10),
	IS_FI                       	CHARACTER(1),
	FUND_SIZE    					BIGINT,
	FUND_SIZE_UPDATE_DATE    		TIMESTAMP,
	DATE_LAUNCHED    				TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PRI_FEED_I1
	ON CMS_PRICE_FEED(FEED_GROUP_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX PRI_FEED_I2
	ON CMS_PRICE_FEED(TICKER, FEED_ID)
	ALLOW REVERSE SCANS ;
    
ALTER TABLE CMS_PRICE_FEED
	ADD CONSTRAINT CC1169525802209
	PRIMARY KEY (FEED_ID);


CREATE TABLE CMS_PRICE_FEED_HISTORY ( 
	HISTORY_ID                  	BIGINT NOT NULL,
	RIC                         	VARCHAR(30),
	TYPE                        	VARCHAR(20),
	COUNTRY                     	CHARACTER(2),
	EXCHANGE                    	VARCHAR(40),
	UNIT_PRICE                  	DECIMAL(21,6),
	CURRENCY                    	CHARACTER(3),
	ISIN_CODE                   	VARCHAR(30),
	NAME                        	VARCHAR(100),
	IS_BLACKLISTED              	CHARACTER(1),
	IS_SUSPENDED                	CHARACTER(1),
	FUND_MANAGER_NAME           	VARCHAR(50),
	LAST_UPDATED_DATE           	TIMESTAMP,
	LAST_UPDATED_BY             	VARCHAR(20),
	TOTAL_OUTSTANDING_UNIT      	BIGINT,
	CMS_VERSION_TIME            	BIGINT NOT NULL DEFAULT 0,
	OFFER                       	DECIMAL(20,2),
	TICKER                      	VARCHAR(20),
	FUND_MANAGER_CODE           	VARCHAR(20),
	PRODUCT_CODE                	VARCHAR(20),
	MATURITY_DATE               	TIMESTAMP,
	FEED_REF                    	BIGINT NOT NULL,
	FEED_GROUP_ID               	BIGINT,
	RATING                      	VARCHAR(20),
	LISTEDSHARE_QUANTITY        	DECIMAL(20,2),
	EFFECTIVE_DATE_ISSUE_RATING 	TIMESTAMP,
	ISSUE_RATING_AGENCY         	VARCHAR(20),
	EXPECTED_TREND_ISSUE_RATING 	VARCHAR(100),
	DESCRPTION_ISSUE_RATING     	VARCHAR(150),
	ISSUER_RATING               	VARCHAR(20),
	EFFECTIVE_DATE_ISSUER_RATING	TIMESTAMP,
	ISSUER_RATING_AGENCY        	VARCHAR(20),
	EXPECTED_TREND_ISSUER_RATING	VARCHAR(100),
	DESCRPTION_ISSUER_RATING    	VARCHAR(150),
	EXPIRY_DATE                 	TIMESTAMP,
	FUND_CODE                   	VARCHAR(30),
	PAR_VALUE                   	DECIMAL(20,2),
	PAID_UP_CAPITAL             	DECIMAL(20,2),
	SHARE_STATUS                	VARCHAR(1),
	BOARD_TYPE                  	VARCHAR(10),
	IS_FI                       	CHARACTER(1),
	FUND_SIZE    					BIGINT,
	FUND_SIZE_UPDATE_DATE    		TIMESTAMP,
	DATE_LAUNCHED    				TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PRI_FEED_HIS_I2
	ON CMS_PRICE_FEED_HISTORY(ISIN_CODE, LAST_UPDATED_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX PRI_FEED_HIS_I1
	ON CMS_PRICE_FEED_HISTORY(LAST_UPDATED_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_PRICE_FEED_HISTORY
	ADD CONSTRAINT CC1169525830910
	PRIMARY KEY (HISTORY_ID);

CREATE TABLE CMS_PROPERTY ( 
	CMS_COLLATERAL_ID             	BIGINT NOT NULL,
	ENV_RISKY_STATUS              	CHARACTER(2),
	ENV_RISKY_DATE                	TIMESTAMP,
	IS_PHY_INSPECT                	CHARACTER(1),
	ENV_RISKY_REMARKS             	VARCHAR(250),
	PHY_INSPECT_FREQ              	SMALLINT,
	LAST_PHY_INSPECT_DATE         	TIMESTAMP,
	NEXT_PHY_INSPECT_DATE         	TIMESTAMP,
	TITLE_TYPE                    	VARCHAR(15),
	TITLE_NUMBER                  	VARCHAR(100),
	TITLE_NUMBER_PREFIX             VARCHAR(10),
	LOT_NO                        	VARCHAR(50),
	LOT_NUMBER_PREFIX               VARCHAR(15),
	TOWN                          	VARCHAR(40),
	LOT_LOCATION                  	VARCHAR(120),
	POSTCODE                      	VARCHAR(15),
	LAND_AREA                     	DECIMAL(26,8),
	LAND_AREA_UOM                 	VARCHAR(10),
	TENURE                        	BIGINT,
	TENURE_UNIT                   	CHARACTER(2),
	REMAINING_TENURE              	BIGINT,
	REMAIN_TENURE_UNIT            	CHARACTER(2),
	RESTRICT_CONDITION            	VARCHAR(250),
	QUIT_RENT_PAID                	DECIMAL(20,2),
	DESCRIPTION_ASSET             	VARCHAR(250),
	BUILTUP_AREA                  	DECIMAL(19,6),
	BUILTUP_AREA_UOM              	VARCHAR(10),
	INSURER_NAME                  	VARCHAR(100),
	INSURANCE_TYPE                	VARCHAR(20),
	INSURED_AGAINST               	VARCHAR(100),
	INSURABLE_AMT                 	DECIMAL(20,2),
	INSURABLE_CURRENCY_CODE       	CHARACTER(3),
	INSURED_CURRENCY_CODE         	CHARACTER(3),
	INSURED_AMT                   	DECIMAL(20,2),
	INS_EFFECTIVE_DATE            	TIMESTAMP,
	POLICY_NO                     	VARCHAR(30),
	INS_EXPIRY_DATE               	TIMESTAMP,
	SALE_PURCHASE_VALUE           	DECIMAL(20,2),
	NOMINAL_VALUE                 	DECIMAL(17,2),
	PHY_INSPECT_FREQ_UNIT         	CHARACTER(2),
	REMARKS_PROPERTY              	VARCHAR(250),
	REGISTERED_HOLDER             	VARCHAR(250),
	PROPERTY_ADDRESS              	VARCHAR(40),
	STD_QUIT_RENT                 	CHARACTER(1) NOT NULL DEFAULT 'N',
	NON_STD_QUIT_RENT             	CHARACTER(1) NOT NULL DEFAULT 'N',
	QUIT_RENT_RECEIPT             	CHARACTER(1) NOT NULL DEFAULT 'N',
	DEVELOPER_GROUP_COMPANY       	VARCHAR(40),
	TAMAN                         	VARCHAR(50),
	ASSESSMENT                    	CHARACTER(1),
	TOOLTIPS_LAND                 	VARCHAR(40),
	TOOLTIPS_BUILTAREA            	VARCHAR(40),
	MF_SCORE                      	DECIMAL(9,2),
	SALE_PURCHASE_DATE            	TIMESTAMP,
	MASTER_TITLE                  	VARCHAR(1),
	MASTER_TITLE_NUMBER           	VARCHAR(20),
	INSURANCE                     	VARCHAR(1),
	AUTO_DEBIT                    	VARCHAR(1),
	LAND_VALUE                    	DECIMAL(15,2),
	BUILDING_VALUE                	DECIMAL(15,2),
	USER_INPUT                    	DECIMAL(9,2),
	EXPRESSED_CONDITION           	VARCHAR(250),
	MUKIM                         	VARCHAR(40),
	DISTRICT                      	VARCHAR(40),
	STATE                         	VARCHAR(40),
	REAL_ESTATE_USAGE             	VARCHAR(40),
	REAL_ESTATE_WITH_RENTAL_FLAG  	CHARACTER(1),
	PROPERTY_USAGE                	VARCHAR(40),
	PROPERTY_COMPLETION_STATUS    	CHARACTER(1),
	DEVELOPER_NAME                	VARCHAR(150),
	ABANDONED_PROJECT             	CHARACTER(1),
	REDUCED_RISK_WEIGHT_FLAG      	CHARACTER(1),
	PROPERTY_COMPLETED_FLAG       	CHARACTER(1),
	PROPERTY_WELL_DEVELOPED_FLAG  	CHARACTER(1),
	LONG_ESTABLISHED_MARKET_FLAG  	VARCHAR(150),
	METHODOLOGY_FOR_VALUATION_FLAG	CHARACTER(1),
	INDEPENDENT_VALUER_FLAG       	CHARACTER(1),
	CATEGORY_OF_LAND_USE          	VARCHAR(40),
	PROPERTY_TYPE                 	VARCHAR(40),
	PHASE_NO                      	VARCHAR(20),
	PROJECT_NAME                  	VARCHAR(40),
	BREACH_IND                    	CHARACTER(1),
	COMBINED_VALUE_IND            	VARCHAR(3),
	UNIT_PARCEL_NO                	VARCHAR(10),
	COMBINED_VALUE_AMT            	DECIMAL(17,2),
	VALUE_NUMBER                  	DECIMAL(17,0),
	CHATTEL_SOLD_DATE    			TIMESTAMP,
	NEXT_QUIT_RENT_DATE    			TIMESTAMP,
	QUIT_RENT_PAYMENT_DATE    		TIMESTAMP,
    ASSESSMENT_RATE    				DECIMAL(15,2),
    ASSESSMENT_PERIOD    			SMALLINT,
    ASSESSMENT_PAYMENT_DATE    		TIMESTAMP,
    ASSESSMENT_OPTION    			VARCHAR(40),  
    AUCTION_PRICE    				DECIMAL(15,2),
    AUCTION_DATE    				TIMESTAMP,
    PRI_CAVEAT_GUARANTEE_DATE    	TIMESTAMP,
    NON_PREFERRED_LOCATION    		VARCHAR(40),
    COMMISSION_TYPE    				VARCHAR(40),
    PROPERTY_COMPLETION_STAGE    	VARCHAR(40),
    ASSUMPTION    					CHARACTER(1),
    AMOUNT_REDEEM    				DECIMAL(15,2),
    UNIT_PRICE    					DECIMAL(15,2),
    PROPERTY_ADDRESS_2    			VARCHAR(40),
    PROPERTY_ADDRESS_3    			VARCHAR(40),
	SCHEDULED_LOCATION            	VARCHAR(60),
	AUCTIONEER 						varchar(80),
	SECTION_NO 						varchar(50),
	STOREY_NUMBER 					varchar(40)
	) IN CMS_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_PROPERTY
	ADD CONSTRAINT CC1169525857048
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE INDEX CMS_PROPERTY_IDX1
	ON CMS_PROPERTY(TITLE_NUMBER_PREFIX, TITLE_TYPE, TITLE_NUMBER, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;


CREATE TABLE CMS_PROPERTY_PARAMETERS ( 
	PARAMETER_ID           	BIGINT NOT NULL,
	PROPERTY_TYPE          	VARCHAR(20),
	COLLATERAL_SUBTYPE     	VARCHAR(100),
	COUNTRY_CODE           	VARCHAR(20),
	STATE_CODE             	VARCHAR(1000),
	DISTRICT_CODE          	VARCHAR(1000),
	MUKIM_CODE             	VARCHAR(20000),
	POST_CODE              	VARCHAR(20),
	LAND_AREA_VALUE_FROM   	DECIMAL(20,0),
	LAND_AREA_UNIT_FROM    	VARCHAR(20),
	LAND_AREA_VALUE_TO     	DECIMAL(20,0),
	LAND_AREA_UNIT_TO      	VARCHAR(20),
	BUILDUP_AREA_VALUE_FROM	DECIMAL(20,0),
	BUILDUP_AREA_UNIT_FROM 	VARCHAR(20),
	BUILDUP_AREA_VALUE_TO  	DECIMAL(20,0),
	BUILDUP_AREA_UNIT_TO   	VARCHAR(20),
	MINIMUM_CURRENT_OMV    	DECIMAL(20,2),
	OMV_TYPE               	VARCHAR(20),
	VARIATION_OMV          	VARCHAR(20),
	VALUATION_DESCRIPTION  	VARCHAR(250),
	VERSION_TIME           	BIGINT 
	) IN CMS_LARGE_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_PROPERTY_PARAMETERS
	ADD CONSTRAINT SQL080609120049030
	PRIMARY KEY (PARAMETER_ID);

CREATE TABLE CMS_PRT_PROPERTY_BY_BU_SUM ( 
	COUNTRY  	CHARACTER(2),
	TOTAL_AMT	DECIMAL(30,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_PSCC_GENERATED ( 
	PSCC_ID                	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	DOUBLE,
	PSCC_REF               	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	VARCHAR(20),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	VARCHAR(20),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	BCA_EXT_RVW_DATE       	TIMESTAMP,
	BCA_APPR_DATE          	TIMESTAMP,
	BCA_NEXT_RVW_DATE      	TIMESTAMP,
	BCA_ORIG_CTRY          	VARCHAR(20),
	BCA_ORIG_ORG           	VARCHAR(20),
	BCA_APPR_AUTHORITY     	VARCHAR(100),
	BFL_ISSUED_DATE        	TIMESTAMP,
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	LEGAL_NAME             	VARCHAR(100),
	CUST_NAME              	VARCHAR(100),
	CUST_SEGMENT           	VARCHAR(10),
	CREDIT_GRADE_CODE      	VARCHAR(10),
	HAS_CHECK_1				CHARACTER(1),
	HAS_CHECK_2				CHARACTER(1),
	HAS_CHECK_3				CHARACTER(1),
	HAS_CHECK_4				CHARACTER(1),
	INSURED_WITH			VARCHAR(50),
	INSURED_WITH_AMT		DECIMAL(15,2),
	AMBM					VARCHAR(50),
	EXPIRY					TIMESTAMP,
	SINK_FUND_AMT			DECIMAL(15,2),
	PM_FOR_PERIOD_OF		VARCHAR(50),
	COMMENCING_FROM			VARCHAR(50),
	FUND_REACH				DECIMAL(15,2),
	FEES_AMT				DECIMAL(15,2),
	OTHERS					VARCHAR(200)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PSCC_GEN_I2
	ON CMS_PSCC_GENERATED(GENERATION_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX PSCC_GEN_I1
	ON CMS_PSCC_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_PSCC_GENERATED
	ADD CONSTRAINT CC1169526007144
	PRIMARY KEY (PSCC_ID);

CREATE TABLE CMS_PSCC_GENERATED_ITEM ( 
	PSCC_ITEM_ID        	BIGINT NOT NULL,
	PSCC_ID             	BIGINT,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	IS_DELETED          	CHARACTER(1),
	ACTIVATED_LIMIT_CCY 	CHARACTER(3),
	ACTIVATED_LIMIT     	DECIMAL(20,2) NOT NULL,
	PSCC_ITEM_REF       	BIGINT,
	ISSUE_DATE          	TIMESTAMP,
	HAS_ISSUED          	CHARACTER(1),
	LIMIT_TYPE          	VARCHAR(10),
	MATURITY_DATE       	TIMESTAMP,
	LMT_AMT_CCY         	CHARACTER(3),
	LMT_AMT             	DECIMAL(20,2),
	PRD_TYPE            	VARCHAR(10),
	LMT_BKG_CTRY        	VARCHAR(20),
	OUTER_LMT_REF       	VARCHAR(20),
	COBORROWER_LEID     	VARCHAR(20),
	COBORROWER_NAME     	VARCHAR(100),
	SECURITY_REF        	VARCHAR(2000),
	SECURITY_TYPE       	VARCHAR(2000),
	LMT_BKG_ORG         	VARCHAR(20),
	LMT_APPROVAL_DATE   	TIMESTAMP,
    EXP_AVAL_DT				TIMESTAMP,
    DIST_AMT_CCY			CHARACTER(3),
    DIST_AMT				DECIMAL(15,2),
    ENFORCE_AMT_CCY			CHARACTER(3),
    ENFORCE_AMT				DECIMAL(15,2),
    PAYMNT_INSTRUC			VARCHAR(200)	
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX PSCC_GEN_I3
	ON CMS_PSCC_GENERATED_ITEM(PSCC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_PSCC_GENERATED_ITEM
	ADD CONSTRAINT CC1169526034864
	PRIMARY KEY (PSCC_ITEM_ID);

-- CREATE TABLE CMS_PUBLIC_HOLIDAY ( 
-- 	HOLIDAY_DATE     	TIMESTAMP NOT NULL,
-- 	COUNTRY_ISO_CODE 	CHARACTER(2) NOT NULL,
-- 	DESCRIPTION      	VARCHAR(60),
-- 	LAST_UPDATED_DATE	TIMESTAMP 
-- 	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

-- ALTER TABLE CMS_PUBLIC_HOLIDAY
-- 	ADD CONSTRAINT CC1169526072918
-- 	PRIMARY KEY (HOLIDAY_DATE, COUNTRY_ISO_CODE);

CREATE TABLE CMS_RCPT_RELEASE ( 
	RELEASE_ID        	BIGINT NOT NULL,
	DEAL_ID           	BIGINT,
	RELEASE_DATE      	TIMESTAMP NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	STATUS            	VARCHAR(20),
	RELEASE_QTY       	DECIMAL(20,0),
	RELEASE_QTY_UOM_ID	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX RCPT_REL_I1
	ON CMS_RCPT_RELEASE(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_RCPT_RELEASE
	ADD CONSTRAINT CC1169526105155
	PRIMARY KEY (RELEASE_ID);

CREATE TABLE CMS_RECURRENT_DOC ( 
	RECURRENT_DOC_ID      	BIGINT NOT NULL,
	CMS_LMP_SUB_PROFILE_ID	BIGINT,
	VERSION_TIME          	BIGINT,
	STATUS                	VARCHAR(30),
	CMS_LSP_LMT_PROFILE_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX REC_DOC_I1
	ON CMS_RECURRENT_DOC(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_RECURRENT_DOC
	ADD CONSTRAINT CC1169526127737
	PRIMARY KEY (RECURRENT_DOC_ID);

CREATE TABLE CMS_RECURRENT_DOC_ITEM ( 
	RECURRENT_ITEM_ID     	BIGINT NOT NULL,
	RECURRENT_ITEM_REF_ID 	BIGINT NOT NULL,
	RECURRENT_ITEM_DESC   	VARCHAR(250),
	FREQUENCY             	INTEGER,
	FREQUENCY_UNIT        	VARCHAR(20),
	DUE_DATE              	TIMESTAMP,
	REMARKS               	VARCHAR(250),
	IS_DELETED            	CHARACTER(1),
	DATE_RECEIVED         	TIMESTAMP,
	RECURRENT_DOC_ID      	BIGINT,
	PRINT_REMINDER_IND    	CHARACTER(1),
	DOC_END_DATE          	TIMESTAMP,
	GRACE_PERIOD          	INTEGER,
	GRACE_PERIOD_UNIT     	VARCHAR(20),
	CHASE_REMIND_IND      	CHARACTER(1),
	ONE_OFF               	CHARACTER(1) DEFAULT 'N',
	LAST_DOC_ENTRY_DATE   	TIMESTAMP,
	END_DATE_CHANGED_COUNT	INTEGER 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX REC_DOC_IT_I1
	ON CMS_RECURRENT_DOC_ITEM(RECURRENT_DOC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_RECURRENT_DOC_ITEM
	ADD CONSTRAINT CC1169526151571
	PRIMARY KEY (RECURRENT_ITEM_ID);

CREATE TABLE CMS_RECURRENT_DOC_SUB_ITEM ( 
	SUB_ITEM_ID       	BIGINT NOT NULL,
	SUB_ITEM_REF_ID   	BIGINT NOT NULL,
	DOC_END_DATE      	TIMESTAMP,
	DUE_DATE          	TIMESTAMP,
	REC_DATE          	TIMESTAMP,
	DEFERRED_DATE     	TIMESTAMP,
	PRINT_REMINDER_IND	CHARACTER(1),
	IS_DELETED_IND    	CHARACTER(1),
	RECURRENT_ITEM_ID 	BIGINT,
	STATUS            	VARCHAR(30),
	WAIVED_DATE       	TIMESTAMP,
	DEFERRED_CNT      	INTEGER DEFAULT 0,
	REMARKS           	VARCHAR(250),
	FREQUENCY         	INTEGER,
	FREQUENCY_UNIT    	VARCHAR(20),
	GRACE_PERIOD      	INTEGER,
	GRACE_PERIOD_UNIT 	VARCHAR(20) ,
	ACTION_PARTY    	VARCHAR(40)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX REC_DOC_SUB_I2
	ON CMS_RECURRENT_DOC_SUB_ITEM(RECURRENT_ITEM_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX REC_DOC_SUB_I1
	ON CMS_RECURRENT_DOC_SUB_ITEM(DUE_DATE, DEFERRED_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_RECURRENT_DOC_SUB_ITEM
	ADD CONSTRAINT CC1169526174274
	PRIMARY KEY (SUB_ITEM_ID);

CREATE TABLE CMS_REPORT ( 
	REPORT_ID         	BIGINT NOT NULL,
	REPORT_MASTER_ID  	VARCHAR(20),
	DATE_CREATED      	TIMESTAMP,
	TITLE             	VARCHAR(255),
	FILENAME          	VARCHAR(50),
	REPORT_CATEGORY_ID	VARCHAR(20),
	SCOPE_CODE        	VARCHAR(10),
	REPORT_DATE       	TIMESTAMP,
	START_TIME        	TIMESTAMP,
	END_TIME          	TIMESTAMP,
	ORG_CODE          	VARCHAR(20),
	HAS_PDF           	CHARACTER(1),
	HAS_XLS           	CHARACTER(1),
	HAS_WORD          	CHARACTER(1),
	FREQUENCY         	VARCHAR(10),
	FOLDER_PATH       	VARCHAR(100),
	PDF_NAME          	VARCHAR(100),
	XLS_NAME          	VARCHAR(100),
	WORD_NAME         	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX RPT_I2
	ON CMS_REPORT (DATE_CREATED, FREQUENCY, REPORT_MASTER_ID)
	ALLOW REVERSE SCANS;
		
CREATE INDEX RPT_I3
	ON CMS_REPORT (REPORT_DATE, REPORT_MASTER_ID, SCOPE_CODE, ORG_CODE)
	ALLOW REVERSE SCANS;

ALTER TABLE CMS_REPORT
	ADD CONSTRAINT PK_REPORT_ID
	PRIMARY KEY (REPORT_ID);

CREATE TABLE CMS_REPORT_COUNTRY_MAP ( 
	REPORT_MASTER_ID	VARCHAR(20) NOT NULL,
	COUNTRY_ISO_CODE	CHARACTER(2) NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX RPT_CTN_MAP_I1
	ON CMS_REPORT_COUNTRY_MAP(REPORT_MASTER_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_REPORT_COUNTRY_MAP
	ADD CONSTRAINT CC1169526208513
	PRIMARY KEY (REPORT_MASTER_ID, COUNTRY_ISO_CODE);

CREATE TABLE CMS_REPORT_COUNTRY_ORG_MAP ( 
	REPORT_MASTER_ID	VARCHAR(20),
	COUNTRY         	CHARACTER(2),
	ORGANISATION    	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX RPT_CTN_ORG_U1
	ON CMS_REPORT_COUNTRY_ORG_MAP(REPORT_MASTER_ID, COUNTRY, ORGANISATION)
	ALLOW REVERSE SCANS ;

CREATE TABLE CMS_REPORT_DUEDATE_PARAM ( 
	PARAM_ID       	DECIMAL(4,0) NOT NULL,
	VALID_FREQ     	DECIMAL(3,0) NOT NULL,
	VALID_FREQ_UNIT	CHARACTER(1) NOT NULL,
	MIS_REPORT_ID  	VARCHAR(8) NOT NULL,
	STATUS         	VARCHAR(8) NOT NULL DEFAULT 'ACTIVE' 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_MIS_RPT_ID
	ON CMS_REPORT_DUEDATE_PARAM(MIS_REPORT_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_REPORT_DUEDATE_PARAM
	ADD CONSTRAINT SQL080609120047930
	PRIMARY KEY (PARAM_ID);

CREATE TABLE CMS_REPORT_ERRLOG ( 
	ID              	BIGINT NOT NULL,
	REPORT_MASTER_ID	VARCHAR(20),
	GENERATION_DATE 	TIMESTAMP,
	REPORT_DATE     	TIMESTAMP,
	REPORT_FORMAT   	CHARACTER(3),
	SCOPE_CODE      	VARCHAR(10),
	ORG_CODE        	VARCHAR(20),
	FREQUENCY       	VARCHAR(10),
	REMARKS         	VARCHAR(2000) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_REPORT_ERRLOG
	ADD CONSTRAINT CC1169526321315
	PRIMARY KEY (ID);

CREATE TABLE CMS_REPORT_FREQUENCY ( 
	REPORT_FREQUENCY_ID	BIGINT NOT NULL,
	REPORT_MASTER_ID   	VARCHAR(20),
	FREQ_DAY_1         	SMALLINT,
	FREQ_DAY_2         	SMALLINT,
	STATUS             	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_REPORT_FREQUENCY
	ADD CONSTRAINT CC1169526345911
	PRIMARY KEY (REPORT_FREQUENCY_ID);

CREATE TABLE CMS_REPORT_MASTER ( 
	REPORT_MASTER_ID  	VARCHAR(20) NOT NULL,
	REPORT_NAME       	VARCHAR(50),
	SCOPE             	VARCHAR(20),
	FREQUENCY         	VARCHAR(10),
	REPORT_FILE_NAME  	VARCHAR(60),
	TITLE_MASK        	VARCHAR(255),
	MIS_REPORT_ID     	VARCHAR(20),
	REPORT_CATEGORY_ID	VARCHAR(3),
    REPORT_RECIPIENT    VARCHAR(250),
	STATUS            	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX RPT_MST_I2
	ON CMS_REPORT_MASTER(REPORT_CATEGORY_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX RPT_MST_I1
	ON CMS_REPORT_MASTER(STATUS)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_REPORT_MASTER
	ADD CONSTRAINT CC1169526366480
	PRIMARY KEY (REPORT_MASTER_ID);

CREATE TABLE CMS_REPORT_REQUEST ( 
	REPORT_REQUEST_ID	BIGINT NOT NULL,
	REPORT_ID        	BIGINT NOT NULL,
	REPORT_NAME      	VARCHAR(255),
	PARAMETERS       	VARCHAR(3000),
	USER_ID          	BIGINT,
	REQUEST_TIME     	TIMESTAMP,
	STATUS           	VARCHAR(20),
	REPORT_GEN_TIME  	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX RPT_REQ_I1
	ON CMS_REPORT_REQUEST(USER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX RPT_REQ_I2
	ON CMS_REPORT_REQUEST(REPORT_GEN_TIME)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_REPORT_REQUEST
	ADD CONSTRAINT CC1169526387280
	PRIMARY KEY (REPORT_REQUEST_ID);

CREATE TABLE CMS_REPORT_TEMPLATE ( 
	REPORT_TEMPLATE_ID	BIGINT NOT NULL,
	REPORT_MASTER_ID  	VARCHAR(20),
	FILE_TYPE         	VARCHAR(10),
	TEMPLATE_NAME     	VARCHAR(60),
	STATUS            	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX RPT_TPL_I1
	ON CMS_REPORT_TEMPLATE(REPORT_MASTER_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_REPORT_TEMPLATE
	ADD CONSTRAINT CC1169526404906
	PRIMARY KEY (REPORT_TEMPLATE_ID);

CREATE TABLE CMS_REV_CHECKLIST_ITEM ( 
	CMS_REV_CHECKLIST_ITEM_ID	BIGINT NOT NULL,
	CATEGORY                 	VARCHAR(40),
	DOCUMENT_CODE            	VARCHAR(20),
	DOC_ITEM_REF             	BIGINT NOT NULL,
	DOC_DESCRIPTION          	VARCHAR(100),
	DOC_REFERENCE            	VARCHAR(100),
	DOC_DATE                 	TIMESTAMP,
	EXPIRY_DATE              	TIMESTAMP,
	REMARKS                  	VARCHAR(1600),
	REVERSAL_REMARKS         	VARCHAR(1600),
	REVERSAL_DATE            	TIMESTAMP,
	CHECKLIST_ID             	BIGINT,
	CMS_LSP_LMT_PROFILE_ID   	BIGINT,
	SCI_SECURITY_DTL_ID      	VARCHAR(20),
	CMS_LMP_SUB_PROFILE_ID   	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX REC_CHK_IT_U1
	ON CMS_REV_CHECKLIST_ITEM(DOC_ITEM_REF, CMS_REV_CHECKLIST_ITEM_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_REV_CHECKLIST_ITEM
	ADD CONSTRAINT CC1169526426286
	PRIMARY KEY (CMS_REV_CHECKLIST_ITEM_ID);

CREATE TABLE CMS_ROLE_TYPE ( 
	ROLETYPE_ID  	BIGINT NOT NULL,
	ROLETYPE_NAME	VARCHAR(40),
	PRIORITY     	DECIMAL(6,2),
	STATUS       	CHARACTER(1),
	VERSION_TIME 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_ROLE_TYPE
	ADD CONSTRAINT CC1169526448328
	PRIMARY KEY (ROLETYPE_ID);

CREATE TABLE CMS_RPT_PROPERTY_BY_BU ( 
	BUSINESS_UNIT               	VARCHAR(40),
	TOTAL_AMT_BY_BU             	DECIMAL(30,2),
	AGRICULTURE_FSV             	DECIMAL(30,2),
	AGRICULTURE_PERCENT_FOR_BU  	DECIMAL(3,2),
	COMMERCIALGENERAL_FSV       	DECIMAL(30,2),
	COMMGENERAL_PERCENT_FOR_BU  	DECIMAL(3,2),
	COMMERCIALSHOPHOUSE_FSV     	DECIMAL(30,2),
	COMMSHOPHOUSE_PERCENT_FOR_BU	DECIMAL(3,2),
	INDUSTRIAL_FSV              	DECIMAL(30,2),
	INDUSTRIAL_PERCENT_FOR_BU   	DECIMAL(3,2),
	RESIDENTIAL_FSV             	DECIMAL(30,2),
	RESIDENTIAL_PERCENT_FOR_BU  	DECIMAL(3,2),
	SP_HOTEL_FSV                	DECIMAL(30,2),
	SP_HOTEL_PERCENT_FOR_BU     	DECIMAL(3,2),
	SP_OTHERS_FSV               	DECIMAL(30,2),
	SP_OTHERS_PERCENT_FOR_BU    	DECIMAL(3,2),
	VACANTLAND_FSV              	DECIMAL(30,2),
	VACANTLAND_PERCENT_FOR_BU   	DECIMAL(3,2),
	COUNTRY                     	CHARACTER(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_RPT_SECURITY_BY_BUE ( 
	BUSINESS_UNIT_ENTITY	VARCHAR(40),
	TOTAL_AMT_BY_BUE    	DECIMAL(30,2),
	AB_FSV              	DECIMAL(30,2),
	AB_COMPOSITION      	DECIMAL(3,2),
	CS_FSV              	DECIMAL(30,2),
	CS_COMPOSITION      	DECIMAL(3,2),
	DC_FSV              	DECIMAL(30,2),
	DC_COMPOSITON       	DECIMAL(3,2),
	GT_FSV              	DECIMAL(30,2),
	GT_COMPOSITION      	DECIMAL(3,2),
	IN_FSV              	DECIMAL(30,2),
	IN_COMPOSITION      	DECIMAL(3,2),
	MS_FSV              	DECIMAL(30,2),
	MS_COMPOSITION      	DECIMAL(3,2),
	PT_FSV              	DECIMAL(30,2),
	PT_COMPOSITION      	DECIMAL(3,2),
	COUNTRY             	CHARACTER(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_RPT_SECURITY_BY_BUE_SUM ( 
	COUNTRY  	CHARACTER(2),
	TOTAL_AMT	DECIMAL(30,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_SCC_GENERATED ( 
	SCC_ID                 	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	BIGINT,
	SCC_REF                	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	VARCHAR(20),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	VARCHAR(20),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	EXTENDED_REVIEW_DATE   	TIMESTAMP,
	BCA_EXT_RVW_DATE       	TIMESTAMP,
	BCA_APPR_DATE          	TIMESTAMP,
	BCA_NEXT_RVW_DATE      	TIMESTAMP,
	BCA_ORIG_CTRY          	VARCHAR(20),
	BCA_ORIG_ORG           	VARCHAR(20),
	BCA_APPR_AUTHORITY     	VARCHAR(100),
	BFL_ISSUED_DATE        	TIMESTAMP,
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	LEGAL_NAME             	VARCHAR(100),
	CUST_NAME              	VARCHAR(100),
	CUST_SEGMENT           	VARCHAR(10),
	CREDIT_GRADE_CODE      	VARCHAR(10),
	HAS_CHECK_1				CHARACTER(1),
	HAS_CHECK_2				CHARACTER(1),
	HAS_CHECK_3				CHARACTER(1),
	HAS_CHECK_4				CHARACTER(1),
	INSURED_WITH			VARCHAR(50),
	INSURED_WITH_AMT		DECIMAL(15,2),
	AMBM					VARCHAR(50),
	EXPIRY					TIMESTAMP,
	SINK_FUND_AMT			DECIMAL(15,2),
	PM_FOR_PERIOD_OF		VARCHAR(50),
	COMMENCING_FROM			VARCHAR(50),
	FUND_REACH				DECIMAL(15,2),
	FEES_AMT				DECIMAL(15,2),
	OTHERS					VARCHAR(200)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX SCC_GEN_I1
	ON CMS_SCC_GENERATED(GENERATION_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX SCC_GEN_I2
	ON CMS_SCC_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_SCC_GENERATED
	ADD CONSTRAINT CC1169526474295
	PRIMARY KEY (SCC_ID);

CREATE TABLE CMS_SCC_GENERATED_ITEM ( 
	SCC_ITEM_ID         	BIGINT NOT NULL,
	SCC_ID              	BIGINT,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	IS_DELETED          	CHARACTER(1),
	ACTIVATED_LIMIT_CCY 	CHARACTER(3),
	ACTIVATED_LIMIT     	DECIMAL(20,2) NOT NULL,
	SCC_ITEM_REF        	BIGINT,
	LIMIT_TYPE          	VARCHAR(10),
	MATURITY_DATE       	TIMESTAMP,
	LMT_AMT_CCY         	CHARACTER(3),
	LMT_AMT             	DECIMAL(20,2),
	PRD_TYPE            	VARCHAR(10),
	LMT_BKG_CTRY        	VARCHAR(20),
	OUTER_LMT_REF       	BIGINT,
	COBORROWER_LEID     	BIGINT,
	COBORROWER_NAME     	VARCHAR(100),
	SECURITY_REF        	VARCHAR(2000),
	SECURITY_TYPE       	VARCHAR(2000),
	LMT_BKG_ORG         	VARCHAR(20),
	LMT_APPROVAL_DATE   	TIMESTAMP,
    EXP_AVAL_DT				TIMESTAMP,
    DIST_AMT_CCY			CHARACTER(3),
    DIST_AMT				DECIMAL(15,2),
    ENFORCE_AMT_CCY			CHARACTER(3),
    ENFORCE_AMT				DECIMAL(15,2),
    PAYMNT_INSTRUC			VARCHAR(200)	
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX SCC_GEN_ITM_I1
	ON CMS_SCC_GENERATED_ITEM(SCC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_SCC_GENERATED_ITEM
	ADD CONSTRAINT CC1169526826051
	PRIMARY KEY (SCC_ITEM_ID);

CREATE TABLE CMS_SEC_LIQUIDATION ( 
	LIQUIDATION_ID   	BIGINT NOT NULL,
	CMS_COLLATERAL_ID	BIGINT,
	CMS_SECURITY_ID  	BIGINT,
	SECURITY_TYPE    	VARCHAR(20),
	VERSION_TIME     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SEC_LIQUIDATION
	ADD CONSTRAINT LIQUIDATION_PK
	PRIMARY KEY (LIQUIDATION_ID);
	
CREATE INDEX SEC_LIQ_IDX1
	ON CMS_SEC_LIQUIDATION (CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_SEC_RECOVERY ( 
	RECOVERY_ID   	BIGINT NOT NULL,
	LIQUIDATION_ID	BIGINT,
	RECOVERY_TYPE 	VARCHAR(10),
	REMARKS       	VARCHAR(250),
	STATUS        	CHARACTER(1),
	VERSION_TIME  	BIGINT,
	CMS_REF_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SEC_RECOVERY
	ADD CONSTRAINT RECOVERY_PK
	PRIMARY KEY (RECOVERY_ID);

CREATE TABLE CMS_SEC_RECOVERY_EXPENSE ( 
	RECOVERY_EXPENSE_ID	BIGINT NOT NULL,
	LIQUIDATION_ID     	BIGINT,
	EXPENSE_TYPE       	VARCHAR(10),
	DATE_OF_EXPENSE    	TIMESTAMP,
	EXPENSE_AMT        	DECIMAL(20,2),
	EXPENSE_AMT_CURR   	VARCHAR(3),
	REMARKS            	VARCHAR(250),
	STATUS             	CHARACTER(1),
	VERSION_TIME       	BIGINT,
	CMS_REF_ID         	BIGINT,
	SETTLED            	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SEC_RECOVERY_EXPENSE
	ADD CONSTRAINT RECOV_EXP_PK
	PRIMARY KEY (RECOVERY_EXPENSE_ID);

CREATE TABLE CMS_SEC_RECOVERY_INCOME ( 
	RECOVERY_INCOME_ID    	BIGINT NOT NULL,
	RECOVERY_ID           	BIGINT,
	RECOVERY_DATE         	DATE,
	TOTAL_AMT_RECOVER     	DECIMAL(20,2),
	TOTAL_AMT_RECOVER_CURR	VARCHAR(3),
	REMARKS               	VARCHAR(250),
	STATUS                	CHARACTER(1),
	VERSION_TIME          	BIGINT,
	CMS_REF_ID            	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SEC_RECOVERY_INCOME
	ADD CONSTRAINT RECOV_INC_PK
	PRIMARY KEY (RECOVERY_INCOME_ID);

CREATE TABLE CMS_SECURITY ( 
	CMS_COLLATERAL_ID         	BIGINT NOT NULL,
	SECURITY_SUB_TYPE_ID      	VARCHAR(30),
	SUBTYPE_NAME              	VARCHAR(100),
	TYPE_NAME                 	VARCHAR(40),
	SECURITY_LOCATION         	VARCHAR(20),
	FSV_CURRENCY              	CHARACTER(3),
	FSV                       	DECIMAL(20,2),
	CMV_CURRENCY              	CHARACTER(3),
	CMV                       	DECIMAL(20,2),
	LE_CHARGE                 	CHARACTER(1),
	LE_CHARGE_DATE            	TIMESTAMP,
	LAST_VALUATION_DATE       	TIMESTAMP,
	LAST_VALUATION_BY         	VARCHAR(20),
	LE_JURIDICT               	CHARACTER(1),
	LE_JURIDICT_DATE          	TIMESTAMP,
	LE_GOVRNLAW               	CHARACTER(1),
	LE_GOVRNLAW_DATE          	TIMESTAMP,
	PARI_PASSU                	CHARACTER(1),
	SECURITY_CUSTODIAN        	VARCHAR(100),
	SECURITY_MATURITY_DATE    	TIMESTAMP,
	EXCHANGE_CONTROL_OBTAINED 	CHARACTER(1),
	MARGIN                    	DECIMAL(5,2),
	IS_SECURITY_PERFECTED     	CHARACTER(1),
	SCI_REFERENCE_NOTE        	VARCHAR(100),
	SECURITY_PERFECTION_DATE  	TIMESTAMP,
	SCI_SECURITY_DTL_ID       	VARCHAR(50),
	LOS_SECURITY_DTL_ID       	VARCHAR(50),
	SCI_SEC_SYS_GEN_ID        	BIGINT,
	SCI_SECURITY_SUBTYPE_VALUE	VARCHAR(10),
	SCI_SECURITY_TYPE_VALUE   	VARCHAR(10),
	SCI_SECURITY_FSV          	DECIMAL(20,2),
	SCI_SECURITY_CURRENCY     	CHARACTER(3),
	SCI_SECURITY_FSV_DATE     	TIMESTAMP,
	STATUS                    	VARCHAR(20),
	VERSION_TIME              	BIGINT,
	SCI_SECURITY_BKG_LOCTN_ID 	BIGINT,
	RPT_COLLATERAL_PARTICULARS	VARCHAR(4000),
	RPT_CHARGE_DETAILS        	VARCHAR(4000),
	FSV_BALANCE               	DECIMAL(20,2),
	SCI_ORIG_SECURITY_CURRENCY	CHARACTER(3),
	FSV_BALANCE_CCY           	CHARACTER(3),
	CUSTODIAN_TYPE            	CHARACTER(1),
	SECURITY_ORGANISATION     	VARCHAR(20),
	IS_LEGAL_ENFORCE          	CHARACTER(1),
	IS_LEGAL_ENFORCE_DATE     	TIMESTAMP,
	GEN_CHARGE_SURPLUS        	DECIMAL(20,2),
	IS_MIGRATED_IND           	CHARACTER(1) DEFAULT 'N',
	SOURCE_SECURITY_SUB_TYPE  	VARCHAR(3),
	REMARGIN                  	CHARACTER(1),
	LAST_REMARGIN_DATE        	TIMESTAMP,
	NEXT_REMARGIN_DATE        	TIMESTAMP,
    VALUATION_TYPE              VARCHAR(10),
    VALUER                      VARCHAR(100),
	RISK_MITIGATION_CATEGORY  	VARCHAR(40),
	EXT_SENIOR_LIEN           	CHARACTER(1),
	NET_REALIZABLE_VALUE      	DECIMAL(30,2),
	SOURCE_SECURITY_TYPE      	VARCHAR(10),
	CREATE_DATE               	TIMESTAMP,
	DELETED_DATE              	TIMESTAMP,
	SOURCE_ID                 	VARCHAR(10),
	EXCHANGE_CONTROL_DATE		TIMESTAMP,
	BORROWER_DEPENDENCY			CHARACTER(1),
	COLLATERAL_STATUS    		CHARACTER(1),
	IS_CGC_PLEDGED    			CHARACTER(1),
	COMMENT                   	VARCHAR(1000),
	PLEDGE_AMOUNT_USAGE_IND		CHARACTER(1),
	DRAW_AMOUNT_USAGE_IND		CHARACTER(1),
    RESERVE_PRICE               DECIMAL(30,2),
	RESERVE_PRICE_DATE          TIMESTAMP,
	VALUATED_DATE 				TIMESTAMP,
	TO_BE_DISCHARGED_IND		VARCHAR(1)
	) IN CMS_MEDIUM_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SECURITY
	ADD CONSTRAINT CC1169526972261
	PRIMARY KEY (CMS_COLLATERAL_ID);	

CREATE INDEX SEC_U1
	ON CMS_SECURITY(SCI_SECURITY_DTL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SEC_I2
	ON CMS_SECURITY(IS_SECURITY_PERFECTED, CMS_COLLATERAL_ID DESC)
	ALLOW REVERSE SCANS ;

CREATE INDEX SEC_I3
	ON CMS_SECURITY(IS_MIGRATED_IND, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SEC_I1
	ON CMS_SECURITY(SECURITY_SUB_TYPE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SEC_I4
	ON CMS_SECURITY(CMS_COLLATERAL_ID, STATUS, SECURITY_SUB_TYPE_ID)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX SEC_I5
	ON CMS_SECURITY(SCI_REFERENCE_NOTE)
	ALLOW REVERSE SCANS;	

CREATE INDEX SEC_I6	
	ON CMS_SECURITY (NEXT_REMARGIN_DATE, SECURITY_SUB_TYPE_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;

CREATE INDEX SEC_I7
	ON CMS_SECURITY (LOS_SECURITY_DTL_ID)
	ALLOW REVERSE SCANS;
	
create index sec_i8 on cms_security
	(source_security_type, cms_collateral_id)
allow reverse scans;	

CREATE TABLE CMS_SECURITY_APPORTIONMENT ( 
	SEC_APPORTIONMENT_ID   	BIGINT NOT NULL,
	PRIORITY_RANKING       	SMALLINT NOT NULL,
	PRIORITY_RANKING_AMOUNT	DECIMAL(20,2) NOT NULL,
	CMS_LSP_APPR_LMTS_ID   	BIGINT,
	CMS_COLLATERAL_ID      	BIGINT,
	PERC_AMT_IND           	CHARACTER(1) NOT NULL,
	BY_ABSOLUTE_AMT        	DECIMAL(30,2),
	BY_PERCENTAGE          	DECIMAL(5,2),
	MIN_PERC_AMT_IND       	CHARACTER(1) NOT NULL,
	MIN_AMT                	DECIMAL(20,2),
	MIN_PERCENTAGE         	DECIMAL(5,2),
	MAX_PERC_AMT_IND       	CHARACTER(1) NOT NULL,
	MAX_AMT                	DECIMAL(20,2),
	MAX_PERCENTAGE         	DECIMAL(5,2),
	CMS_REF_ID             	BIGINT,
	APPORTION_AMT          	DECIMAL(20,2) DEFAULT 0,
	CHARGE_DETAIL_ID       	BIGINT NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SECURITY_APPORTIONMENT
	ADD CONSTRAINT CC1169527006901
	PRIMARY KEY (SEC_APPORTIONMENT_ID);

CREATE TABLE CMS_SECURITY_ASSET_LIFE ( 
	SECURITY_SUB_TYPE_ID	VARCHAR(30) NOT NULL,
	LIFESPAN            	DECIMAL(5,0),
	GROUP_ID            	BIGINT NOT NULL,
	VERSION_TIME        	BIGINT,
	STATUS              	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SECURITY_ASSET_LIFE
	ADD CONSTRAINT AL_SUBTYPE_ID_PK
	PRIMARY KEY (SECURITY_SUB_TYPE_ID);

CREATE TABLE CMS_SECURITY_INSTRUMENT ( 
	CMS_INSTRUMENT_ID  	BIGINT NOT NULL,
	CMS_COLLATERAL_ID  	BIGINT NOT NULL,
	CMS_INSTRUMENT_CODE	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SECURITY_INSTRUMENT
	ADD CONSTRAINT SEC_INSTRUMT_PK
	PRIMARY KEY (CMS_INSTRUMENT_ID);

CREATE TABLE CMS_SECURITY_PARAMETER ( 
	ID                      	BIGINT NOT NULL,
	COUNTRY_ISO_CODE        	CHARACTER(2),
	SECURITY_SUB_TYPE_ID    	VARCHAR(30),
	THRESHOLD_PERCENT       	DECIMAL(5,2),
	VALUATION_FREQUENCY_UNIT	VARCHAR(20),
	VALUATION_FREQUENCY     	BIGINT,
	GROUP_ID                	BIGINT NOT NULL,
	VERSION_TIME            	BIGINT,
	STATUS                  	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX SEC_PARA_U1
	ON CMS_SECURITY_PARAMETER(COUNTRY_ISO_CODE, SECURITY_SUB_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_SECURITY_PARAMETER
	ADD CONSTRAINT CC1169527025318
	PRIMARY KEY (ID);

CREATE TABLE CMS_SECURITY_SOURCE ( 
	CMS_SECURITY_SOURCE_ID	BIGINT NOT NULL,
	CMS_COLLATERAL_ID     	BIGINT,
	SOURCE_SECURITY_ID    	VARCHAR(50),
	SOURCE_ID             	VARCHAR(10),
	STATUS                	VARCHAR(20),
	LAST_UPDATE_DATE      	TIMESTAMP,
	SECURITY_SUB_TYPE_ID  	VARCHAR(20),
	INTERFACE_ID          	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_SEC_SOURCE_2
	ON CMS_SECURITY_SOURCE(CMS_COLLATERAL_ID, SOURCE_SECURITY_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX IDX_SEC_SOURCE_1
	ON CMS_SECURITY_SOURCE(SOURCE_SECURITY_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_SECURITY_SOURCE
	ADD CONSTRAINT SEC_SOURCE_ID_PK
	PRIMARY KEY (CMS_SECURITY_SOURCE_ID);

CREATE TABLE CMS_SECURITY_SUB_TYPE ( 
	SECURITY_SUB_TYPE_ID         	VARCHAR(30) NOT NULL,
	SUBTYPE_NAME                 	VARCHAR(100),
	SUBTYPE_DESCRIPTION          	VARCHAR(200),
	SECURITY_TYPE_ID             	VARCHAR(20),
	SECURITY_TYPE_NAME           	VARCHAR(60),
	MAX_PERCENT                  	DECIMAL(5,2),
	GROUP_ID                     	BIGINT NOT NULL,
	VERSION_TIME                 	BIGINT,
	STATUS                       	VARCHAR(20),
	IS_TANGIBLE_ASSET            	CHARACTER(1),
	SUBTYPE_STANDARDISED_APPROACH	CHARACTER(1),
	SUBTYPE_FOUNDATION_IRB       	CHARACTER(1),
	SUBTYPE_ADVANCED_IRB         	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SECURITY_SUB_TYPE
	ADD CONSTRAINT CC1169527045367
	PRIMARY KEY (SECURITY_SUB_TYPE_ID);

CREATE TABLE CMS_SETTLEMENT ( 
	SETTLEMENT_ID	BIGINT NOT NULL,
	DEAL_ID      	BIGINT,
	PAYMENT_DATE 	TIMESTAMP NOT NULL,
	PAYMENT_CCY  	CHARACTER(3) NOT NULL,
	STATUS       	VARCHAR(20),
	CMS_REF_ID   	BIGINT NOT NULL,
	PAYMENT_AMT  	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX SETTLE_I1
	ON CMS_SETTLEMENT(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_SETTLEMENT
	ADD CONSTRAINT CC1169527064624
	PRIMARY KEY (SETTLEMENT_ID);

CREATE TABLE CMS_DATA_ACCESS ( 
	DATA_ACCESS_ID         	BIGINT NOT NULL,
	MODULE_TYPE            	VARCHAR(20),
	MODULE_SUBTYPE         	VARCHAR(20),
	FIELD_NAME             	VARCHAR(40),
	TEAM_TYPE_MEMBERSHIP_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_DATA_ACCESS
	ADD CONSTRAINT CC1169521250174
	PRIMARY KEY (DATA_ACCESS_ID);

CREATE TABLE CMS_SSL_TOKEN ( 
	USER_ID	VARCHAR(30) NOT NULL,
	TOKEN  	VARCHAR(120) NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_SSL_TOKEN
	ADD CONSTRAINT CC1169527086105
	PRIMARY KEY (USER_ID);

CREATE TABLE CMS_STAGE_ASSET (
  CMS_COLLATERAL_ID             BIGINT   NOT NULL,
  PHY_INSPECTION_FREQ           VARCHAR(10),
  LAST_PHY_INSPECT_DATE         TIMESTAMP,
  NEXT_PHY_INSPECT_DATE         TIMESTAMP,
  ENV_RISKY_STATUS              CHAR(2),
  ENV_RISKY_DATE                TIMESTAMP,
  ENV_RISKY_REMARK              VARCHAR(250),
  ASSET_DESCRIPTION             VARCHAR(250),
  TYPE_OF_ASSET                 VARCHAR(20),
  REG_NO                        VARCHAR(25),
  REG_FEE                       DECIMAL(17,2),
  REG_DATE                      TIMESTAMP,
  MANUFACTURE_YEAR              INT,
  BRAND                         VARCHAR(100),
  MODEL_NO                      VARCHAR(50),
  PURCHASE_PRICE                DECIMAL(21,6),
  PURCHASE_DATE                 TIMESTAMP,
  INVOICE_TYPE                  VARCHAR(50),
  AGENT_NAME                    VARCHAR(100),
  AGENT_LOCATION                VARCHAR(50),
  APPROVED_BUYER                VARCHAR(100),
  APPROVED_BUYER_LOCATION       VARCHAR(50),
  BANK_ACC_NO                   VARCHAR(20),
  RECEIVABLES_BY_BANK           CHAR(1),
  BANK_ACC_NO_LOCATION          VARCHAR(50),
  AGENT_BANK_RECEIVABLES        VARCHAR(50),
  AGENT_BANK_LOCATION           CHAR(2),
  INSURER_NAME                  VARCHAR(100),
  INSURANCE_TYPE                VARCHAR(50),
  INSURED_AGAINST               VARCHAR(50),
  INSURABLE_AMT                 DECIMAL(20,2),
  INSURED_AMT                   DECIMAL(20,2),
  INS_EFFECTIVE_DATE            TIMESTAMP,
  INS_EXPIRY_DATE               TIMESTAMP,
  POLICY_NO                     VARCHAR(50),
  COVERAGE_TYPE_OTHERS          VARCHAR(50),
  INSURERS                      VARCHAR(100),
  NOMINAL_VALUE                 DECIMAL(20,2),
  MARGIN_DEBTOR                 DECIMAL(5,2),
  MARGIN_STOCK                  DECIMAL(5,2),
  CMV_DEBTOR                    DECIMAL(20,2),
  FSV_DEBTOR                    DECIMAL(20,2),
  CMV_STOCK                     DECIMAL(20,2),
  FSV_STOCK                     DECIMAL(20,2),
  PHY_INSPECTION_DONE           CHAR(1),
  PHY_INSPECTION_FREQ_UNIT      CHAR(2),
  INS_TOTAL_COVERAGE            DECIMAL(20,2),
  INSR_CVR_STOCK_PERIOD         SMALLINT,
  INSR_CVR_STOCK_PERIOD_UNIT    CHAR(1),
  INSR_CVR_FAO_PERIOD           SMALLINT,
  INSR_CVR_FAO_PERIOD_UNIT      CHAR(1),
  MARGIN_FAO                    DECIMAL(5,2),
  CMV_FAO                       DECIMAL(20,2),
  FSV_FAO                       DECIMAL(20,2),
  LAST_USED_ID_IDX_STOCK        SMALLINT   WITH DEFAULT 0,
  LAST_USED_ID_IDX_FAO          SMALLINT   WITH DEFAULT 0,
  LAST_USED_ID_IDX_INSR         SMALLINT   WITH DEFAULT 0,
  STOCK_INSR_GRACE_PERIOD       SMALLINT,
  STOCK_INSR_GRACE_PERIOD_FREQ  CHAR(1),
  FAO_INSR_GRACE_PERIOD         SMALLINT,
  FAO_INSR_GRACE_PERIOD_FREQ    CHAR(1),
  BANK_SHARE_PCT                DECIMAL(5,2),
  OTHER_REMARKS                 VARCHAR(250),
  CURR_STK_INSR_SHORTFALL_AMT   DECIMAL(20,2),
  PREV_STK_INSR_SHORTFALL_AMT   DECIMAL(20,2),
  DRWG_PWR_LESS_INSR_GROSS_AMT  DECIMAL(20,2),
  DRWG_PWR_GROSS_AMT            DECIMAL(20,2),
  SALES_PROCEED                 DECIMAL(17,2),
  DEPRECIATE_RATE               DECIMAL(20,2),
  RESIDUAL_ASSET_LIFE           INTEGER,
  RESIDUAL_ASSET_LIFE_UOM       VARCHAR(10),
  ASSET_VALUE                   DECIMAL(20,2),
  SCRAP_VALUE                   DECIMAL(20,2),
  DOC_PERFECT_AGE               INTEGER,
  REG_CARD_NO                   VARCHAR(20),
  PREV_OWNER_NAME               VARCHAR(50),
  PREV_FINANCIER_NAME           VARCHAR(50),
  REPOSSESSION_DATE             DATE,
  REPOSSESSION_AGE              INTEGER,
  YARD                          VARCHAR(40),
  GOOD_STATUS                   VARCHAR(10),
  PROJECT_NAME                  VARCHAR(80),
  AWARDED_DATE                  DATE,
  LETTER_INSTRUCT_FLAG          CHAR(1),
  LETTER_UNDERTAKE_FLAG         CHAR(1),
  BLANKET_ASSIGNMENT            VARCHAR(80),
  CASH_VALUE_FOR_FORCE_SALE     CHAR(1),
  BOND_ISSUER_NAME              VARCHAR(40),
  BOND_ISSUED_DATE              TIMESTAMP,
  ASSET_TYPE_HOST_REF           VARCHAR(250),
  INIT_RESIDUAL_ASSET_LIFE      INTEGER,
  INIT_RESIDUAL_ASSET_LIFE_UOM  VARCHAR(10),
  INIT_RESIDUAL_ASSET_LIFE_DATE DATE,
  DEPRECIABLE_ASSET_VALUE       DECIMAL(20,2),
  DEPRECIABLE_ASSET_VALUE_DATE  DATE,
  PRI_CAVEAT_GUARANTEE_DATE    	TIMESTAMP,
  CHATTEL_SOLD_DATE				TIMESTAMP,
  RL_SERIAL_NO					VARCHAR(50),
  CHEQUE_DATE					TIMESTAMP,
  CHEQUE_REFERENCE_NO			VARCHAR(20),
  PUBLIC_TRANSPORT        		CHARACTER(1),
  INSPECTION_STATUS_NUM 		VARCHAR(40),
  INSPECTION_STATUS_VALUE  		VARCHAR(10),
  INTEREST_RATE					DECIMAL(11,9)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASSET
	ADD CONSTRAINT CC1169527113254
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_ASSET_AIRCRAFT ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	INS_BROKER_UNDERTAKE    	CHARACTER(1),
	PROCESS_AGENT           	VARCHAR(100),
	PROCESS_AGENT_COUNTRY   	CHARACTER(2),
	SPECIALIST_LEGAL_OPINION	VARCHAR(250),
	EXPORT_CRD_AGENCY       	VARCHAR(100),
	GUARANTORS              	VARCHAR(100),
	AIRCRAFT_SERIAL_NO      	VARCHAR(50),
	MANUFACTURER_NAME       	VARCHAR(50),
	MANUFACTURE_WARRANTIES  	VARCHAR(50),
	ASSIGNORS               	VARCHAR(100),
	INSURE_ASMNT            	CHARACTER(1),
	AMT_ASSMNT_ISURE        	DECIMAL(20,2),
	EFFECTIVE_DATE_ASMNT    	TIMESTAMP,
	EXP_DATE_ASMNT          	TIMESTAMP,
	REINSURE_ASMNT          	CHARACTER(1),
	TRADEIN_VALUE               DECIMAL(17,2),
    TRADEIN_DEPOSIT             DECIMAL(17,2),
	EFFECTIVE_DATE_REINSURE 	TIMESTAMP,
	EXP_DATE_REINSURE       	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASSET_AIRCRAFT
	ADD CONSTRAINT STG_AIRCRAFT_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_ASSET_GOLD ( 
	CMS_COLLATERAL_ID  	        BIGINT NOT NULL,
	GOLD_GRADE         	        VARCHAR(30),
	PURCHASE_RECEIPT_NO	        VARCHAR(40),
	GOLD_UNIT_PRICE_CURRENCY    CHAR(3),
	GOLD_UNIT_PRICE    	        DECIMAL(15,4),
	CERT_EXPIRY_DATE   	        TIMESTAMP,
	GOLD_WEIGHT        	        DECIMAL(15,6),
	GOLD_UOM           	        VARCHAR(30),
	AUCTION_DATE       	        TIMESTAMP,
	AUCTION_PRICE      	        DECIMAL(17,2),
	AUCTIONEER         	        VARCHAR(80),
	GOLD_UNIT_PRICE_UOM	        VARCHAR(30)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASSET_GOLD
	ADD CONSTRAINT STG_ASSET_GOLD_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_ASSET_PDC ( 
	ASSET_PDC_ID             	BIGINT NOT NULL,
	CHEQUE_AMOUNT            	DECIMAL(20,2),
	CHEQUE_AMOUNT_CURRENCY   	CHARACTER(3),
	TYPE_OF_CHQ              	VARCHAR(20),
	TO_CREDIT                	VARCHAR(100),
	LOCATION_OF_BANK         	VARCHAR(50),
	RECEIVABLES_BY_BANK      	CHARACTER(1),
	DRAWEE_BANK              	VARCHAR(100),
	ISSUE_COUNTRY            	CHARACTER(3),
	ISSUE_DATE               	TIMESTAMP,
	EXPIRY_DATE              	TIMESTAMP,
	SECURITY_CUSTODIAN       	VARCHAR(100),
	EXCHANGE_CONTROL_OBTAINED	CHARACTER(1),
	CMS_COLLATERAL_ID        	BIGINT,
	MARGIN                   	DECIMAL(7,3),
	VALUE_BEFORE_MARGIN      	DECIMAL(20,2),
	VALUATION_DATE           	TIMESTAMP,
	VALUATION_CURRENCY       	VARCHAR(3),
	CMS_REF_ID               	BIGINT,
	STATUS                   	VARCHAR(10),
	CUSTODIAN_TYPE           	CHARACTER(1),
	SOURCE_SECURITY_ID       	VARCHAR(20),
	SOURCE_ID                	VARCHAR(10), 
	EXCHANGE_CONTROL_DATE		TIMESTAMP,
    ISSUER						VARCHAR(40),
	VALUE_AFTER_MARGIN			DECIMAL(20,2)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_PDC_I1
	ON CMS_STAGE_ASSET_PDC(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_ASSET_PDC
	ADD CONSTRAINT CC1169527135696
	PRIMARY KEY (ASSET_PDC_ID);

CREATE TABLE CMS_STAGE_ASSET_PLANT_EQUIP ( 
	CMS_COLLATERAL_ID  	BIGINT NOT NULL,
	PLANT_EQUIP_PURPOSE	VARCHAR(40),
	EQUIP_MF           	VARCHAR(40),
	EQUIP_RISK_GRADING 	VARCHAR(40),
	EQUIP_CODE         	VARCHAR(40),
	QUANTITY           	DECIMAL(9,2),
	SERIAL_NO			VARCHAR(50),
	INVOICE_NO			VARCHAR(50),
	PRICE_LIST          DECIMAL(17,2),
	DOWNPAYMENT_TRADEIN	DECIMAL(17,2),
	DOWNPAYMENT_CASH	DECIMAL(17,2),
	TRADEIN_VALUE		DECIMAL(17,2),
	INSPECTION_STATUS_NUM 	VARCHAR(40),
	INSPECTION_STATUS_VALUE VARCHAR(10),
	INVOICE_DATE 		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASSET_PLANT_EQUIP
	ADD CONSTRAINT STG_ASSET_PLANT_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_ASSET_VEHICLE ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	COVERAGE_TYPE           	VARCHAR(20),
	CHASSIS_NUMBER          	VARCHAR(25),
	INS_INDICATOR           	CHARACTER(1),
	AUTO_DR_COLLATERAL_FEE  	CHARACTER(1),
	DOWNPAYMENT_TRADEIN     	DECIMAL(17,2),
	DOWNPAYMENT_CASH        	DECIMAL(17,2),
	FREIGHT_CHARGES         	DECIMAL(17,2),
	PRICE_LIST              	DECIMAL(17,2),
	HEAVYVEHICLE_TYPE       	CHARACTER(1),
	ENGINE_NUMBER           	VARCHAR(35),
	COE_AMOUNT              	DECIMAL(20,2),
	ENERGY_SOURCE           	VARCHAR(10),
	TRANSMISSION_TYPE       	CHARACTER(1),
	HORSE_POWER             	VARCHAR(20),
	VEHICLE_COLOR           	VARCHAR(20),
    PBT_PBR_INDICATOR           VARCHAR(40),
    PBT_PBR_PERIOD           	INTEGER,
	AMT_COLLECTED_FROM_SALES	DECIMAL(15,2),
	ROAD_TAX_AMT    			DECIMAL(15,2),
	ROAD_TAX_AMT_TYPE    		CHARACTER(1),
	ROAD_TAX_EXPIRY_DATE    	TIMESTAMP,
	ALLOW_PASSIVE    			CHARACTER(1),
	LOG_BOOK_NUMBER    			VARCHAR(50),
	ENGINE_CAPACITY    			VARCHAR(50),
	OWNERSHIP_CLAIM_NUMBER    	VARCHAR(50),
	YARD_OPTIONS    			CHARACTER(1),
	DEALER_NAME    				VARCHAR(40),
	E_HAK_MILIK_NUMBER    		VARCHAR(50),
	TRADEIN_VALUE				DECIMAL(17,2),
	INVOICE_DATE 			TIMESTAMP,
	INVOICE_NO				VARCHAR(50)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASSET_VEHICLE
	ADD CONSTRAINT STG_ASSET_VEH_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_ASSET_VESSEL ( 
	CMS_COLLATERAL_ID    	BIGINT NOT NULL,
	VESSEL_NAME          	VARCHAR(60),
	REG_COUNTRY          	CHARACTER(2),
	VESSEL_STATE         	VARCHAR(10),
	EXPT_OCCUP_DATE      	TIMESTAMP,
	EXPT_OCCUP           	VARCHAR(60),
	OCCUP_TYPE           	VARCHAR(10),
	BUILD_YEAR           	INTEGER,
	PURCHASE_CURRENCY    	CHARACTER(3),
	BUILDER              	VARCHAR(60),
	MAIN_REG             	VARCHAR(40),
	LENGTH               	VARCHAR(40),
	WIDTH                	VARCHAR(40),
	DEPTH                	VARCHAR(40),
	DECK_LOADING         	VARCHAR(40),
	DECK_WEIGHT          	VARCHAR(40),
	SIDE_BOARD           	VARCHAR(40),
	BOW                  	VARCHAR(40),
	DECK                 	VARCHAR(40),
	DECK_THICKNESS       	VARCHAR(40),
	BOTTOM               	VARCHAR(40),
	WINCH_DRIVE          	VARCHAR(40),
	BHP                  	VARCHAR(40),
	SPEED                	VARCHAR(40),
	ANCHOR               	VARCHAR(40),
	ANCHOR_DRIVE         	VARCHAR(40),
	CLASS_SOCIETY        	VARCHAR(40),
	CONSTRUCT_COUNTRY    	CHARACTER(2),
	CONSTRUCT_PLACE      	VARCHAR(40),
	VESSEL_USE           	VARCHAR(60),
	CHARTER_CONTRACT     	CHARACTER(1),
	CHARTERER_NAME       	VARCHAR(40),
	CHARTER_PERIOD       	INTEGER,
	CHARTER_PERIOD_UNIT  	VARCHAR(10),
	CHARTER_AMT          	DECIMAL(20,2),
	CHARTER_CURRENCY     	CHARACTER(3),
	CHARTER_RATE_UNIT    	VARCHAR(10),
	CHARTER_RATE_UNIT_OTH	VARCHAR(40),
	TRADEIN_VALUE 			DECIMAL(20,2),
	TRADEIN_DEPOSIT 		DECIMAL(20,2),
	CHARTER_REMARKS      	VARCHAR(2000) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASSET_VESSEL
	ADD CONSTRAINT STG_ASST_VESSEL_PK
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_ASST_GC_DEBTOR ( 
	CMS_ASST_GC_DEBTOR_ID    	BIGINT NOT NULL,
	CMS_COLLATERAL_ID        	BIGINT,
	MTH_1_DEBT_AMT           	DECIMAL(20,2),
	MTH_2_DEBT_AMT           	DECIMAL(20,2),
	MTH_3_DEBT_AMT           	DECIMAL(20,2),
	MTH_4_DEBT_AMT           	DECIMAL(20,2),
	MTH_5_DEBT_AMT           	DECIMAL(20,2),
	MTH_6_DEBT_AMT           	DECIMAL(20,2),
	MTH_7_DEBT_AMT           	DECIMAL(20,2),
	MTH_8_DEBT_AMT           	DECIMAL(20,2),
	MTH_9_DEBT_AMT           	DECIMAL(20,2),
	MTH_10_DEBT_AMT          	DECIMAL(20,2),
	MTH_11_DEBT_AMT          	DECIMAL(20,2),
	MTH_12_DEBT_AMT          	DECIMAL(20,2),
	MTH_MORE_THAN_12_DEBT_AMT	DECIMAL(20,2),
	APPLICABLE_PERIOD        	SMALLINT,
	APPLICABLE_PERIOD_UNIT   	CHARACTER(1),
	GROSS_VALUE              	DECIMAL(20,2),
	NET_VALUE                	DECIMAL(20,2),
	DEBT_AMT_CCY             	CHARACTER(3),
	TOTAL_APPLICABLE_DEBTOR  	DECIMAL(20,2),
	NET_VALUE_CCY            	CHARACTER(3),
	VALUATION_DATE           	TIMESTAMP,
	REVAL_FREQ               	SMALLINT,
	REVAL_FREQ_UNIT          	CHARACTER(1),
	TRADEIN_VALUE 				DECIMAL(20,2),
	TRADEIN_DEPOSIT 			DECIMAL(20,2),
	REVALUATION_DATE         	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASST_GC_DEBTOR
	ADD CONSTRAINT CC1169527158299
	PRIMARY KEY (CMS_ASST_GC_DEBTOR_ID);

CREATE TABLE CMS_STAGE_ASST_GC_FXASST_OTHR ( 
	CMS_ASST_GC_FAO_ID	BIGINT NOT NULL,
	CMS_COLLATERAL_ID 	BIGINT,
	FXASST_OTHR_ID    	VARCHAR(20),
	STATUS            	VARCHAR(20),
	DESCRIPTION       	VARCHAR(100),
	ADDRESS           	VARCHAR(100),
	VALUATION_DATE    	TIMESTAMP,
	VALUATION_CCY     	CHARACTER(3),
	REVAL_FREQ        	SMALLINT,
	REVAL_FREQ_UNIT   	CHARACTER(1),
	REVALUATION_DATE  	TIMESTAMP,
	GROSS_VALUE       	DECIMAL(20,2),
	MARGIN            	DECIMAL(5,2),
	VALUER            	VARCHAR(100),
	NET_VALUE         	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASST_GC_FXASST_OTHR
	ADD CONSTRAINT CC1169527176105
	PRIMARY KEY (CMS_ASST_GC_FAO_ID);

CREATE TABLE CMS_STAGE_ASST_GC_INSR_FAO_MAP ( 
	CMS_ASST_GC_INSR_FAO_MAP_ID	BIGINT NOT NULL,
	CMS_REF_ID                 	BIGINT NOT NULL,
	STATUS                     	VARCHAR(20),
	CMS_COLLATERAL_ID          	BIGINT,
	INSR_ID                    	VARCHAR(20),
	FXASST_OTHR_ID             	VARCHAR(20),
	INSR_COVERAGE_AMT          	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASST_GC_INSR_FAO_MAP
	ADD CONSTRAINT CC1169527203424
	PRIMARY KEY (CMS_ASST_GC_INSR_FAO_MAP_ID);

CREATE TABLE CMS_STAGE_ASST_GC_INSR_STK_MAP ( 
	CMS_ASST_GC_INSR_STK_MAP_ID	BIGINT NOT NULL,
	CMS_REF_ID                 	BIGINT NOT NULL,
	STATUS                     	VARCHAR(20),
	CMS_COLLATERAL_ID          	BIGINT,
	INSR_ID                    	VARCHAR(20),
	STOCK_ID                   	VARCHAR(20),
	INSR_COVERAGE_AMT          	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASST_GC_INSR_STK_MAP
	ADD CONSTRAINT CC1169527226417
	PRIMARY KEY (CMS_ASST_GC_INSR_STK_MAP_ID);

CREATE TABLE CMS_STAGE_ASST_GC_STOCK ( 
	CMS_ASST_GC_STOCK_ID        	BIGINT NOT NULL,
	CMS_COLLATERAL_ID           	BIGINT,
	STOCK_ID                    	VARCHAR(20) NOT NULL,
	STATUS                      	VARCHAR(20),
	VALUATION_CCY               	CHARACTER(3),
	VALUATION_DATE              	TIMESTAMP,
	GROSS_VALUE                 	DECIMAL(20,2),
	MARGIN                      	DECIMAL(5,2),
	REVAL_FREQ                  	SMALLINT,
	REVAL_FREQ_UNIT             	CHARACTER(1),
	REVALUATION_DATE            	TIMESTAMP,
	VAL_RAW_MATERIAL_AMT        	DECIMAL(20,2),
	VAL_RAW_MATERIAL_MARGIN     	DECIMAL(5,2),
	VAL_FINISH_GOODS_AMT        	DECIMAL(20,2),
	VAL_FINISH_GOODS_MARGIN     	DECIMAL(5,2),
	VAL_WORK_PROGRESS_AMT       	DECIMAL(20,2),
	VAL_WORK_PROGRESS_MARGIN    	DECIMAL(5,2),
	VAL_GOODS_TRANSIT_AMT       	DECIMAL(20,2),
	VAL_GOODS_TRANSIT_MARGIN    	DECIMAL(5,2),
	VAL_STORES_SPARES_AMT       	DECIMAL(20,2),
	VAL_STORES_SPARES_MARGIN    	DECIMAL(5,2),
	VAL_OTHER_MERCHANDISE_AMT   	DECIMAL(20,2),
	VAL_OTHER_MERCHANDISE_MARGIN	DECIMAL(5,2),
	OWE_CREDITOR_AMT            	DECIMAL(20,2),
	PHY_INSPECTION_DONE         	CHARACTER(1),
	PHY_INSPECTION_FREQ         	SMALLINT,
	PHY_INSPECTION_FREQ_UNIT    	VARCHAR(2),
	LAST_PHY_INSPECT_DATE       	TIMESTAMP,
	NEXT_PHY_INSPECT_DATE       	TIMESTAMP,
	ADDRESS                     	VARCHAR(150),
	VALUER                      	VARCHAR(100),
	NET_VALUE                   	DECIMAL(20,2),
	RECOVERABLE_AMT             	DECIMAL(20,2),
	RECOVERABLE_AMT_CCY         	CHARACTER(3) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_ASST_GC_STOCK
	ADD CONSTRAINT CC1169527246165
	PRIMARY KEY (CMS_ASST_GC_STOCK_ID);

CREATE TABLE CMS_STAGE_BL_BUILDUP ( 
	BUILDUP_ID         	BIGINT NOT NULL,
	PROJECT_ID         	BIGINT,
	PROPERTY_TYPE      	VARCHAR(5),
	UNIT_ID            	VARCHAR(30),
	BLOCK_NO           	VARCHAR(30),
	TITLE_NO           	VARCHAR(30),
	UNIT_NO            	VARCHAR(30),
	UNIT_DISCHARGE_IND 	CHARACTER(1),
	APPROX_AREA_UOM    	VARCHAR(10),
	APPROX_AREA        	DECIMAL(7,2),
	SEC_APPROX_AREA_UOM	VARCHAR(10),
	SEC_APPROX_AREA    	DECIMAL(7,2),
	REDEMPTION_CURRENCY	VARCHAR(3),
	REDEMPTION_AMOUNT  	DECIMAL(20,2),
	SALES_CURRENCY     	VARCHAR(3),
	SALES_AMOUNT       	DECIMAL(20,2),
	SALES_DATE         	TIMESTAMP,
	PURCHASER_NAME     	VARCHAR(100),
	END_FINANCIER      	VARCHAR(100),
	REMARKS            	VARCHAR(500),
	TENANCY_DATE       	TIMESTAMP,
	TENANCY_NAME       	VARCHAR(100),
	TENANCY_PERIOD_UOM 	VARCHAR(3),
	TENANCY_PERIOD     	DECIMAL(3,0),
	TENANCY_EXPIRY_DATE	TIMESTAMP,
	RENTAL_CURRENCY    	VARCHAR(3),
	RENTAL_AMOUNT      	DECIMAL(20,2),
	PAYMENT_FREQ       	VARCHAR(5),
	COMMON_REF_ID      	BIGINT,
	IS_DELETED         	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_BUILDUP
	ADD CONSTRAINT BL_STG_BUL_ID_PK
	PRIMARY KEY (BUILDUP_ID);

CREATE TABLE CMS_STAGE_BL_DEVELOPMENT_DOCUMENT ( 
	DEV_DOC_ID   	BIGINT NOT NULL,
	SCHEDULE_ID  	BIGINT,
	DOC_NAME     	VARCHAR(100),
	DOC_REF      	VARCHAR(50),
	RECEIVE_DATE 	TIMESTAMP,
	DOC_DATE     	TIMESTAMP,
	COMMON_REF_ID	BIGINT,
	IS_DELETED   	CHARACTER(1),
	REMARKS      	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_DEVELOPMENT_DOCUMENT
	ADD CONSTRAINT BL_STG_DEV_ID_PK
	PRIMARY KEY (DEV_DOC_ID);

CREATE TABLE CMS_STAGE_BL_DISBURSEMENT ( 
	DISBURSEMENT_ID	BIGINT NOT NULL,
	PROJECT_ID     	BIGINT,
	PURPOSE        	VARCHAR(10),
	COMMON_REF_ID  	BIGINT,
	IS_DELETED     	CHARACTER(1),
	REMARKS        	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_DISBURSEMENT
	ADD CONSTRAINT BL_STG_DISB_ID_PK
	PRIMARY KEY (DISBURSEMENT_ID);

CREATE TABLE CMS_STAGE_BL_DISBURSEMENT_DETAIL ( 
	DISBURSE_DETAIL_ID	BIGINT NOT NULL,
	DISBURSEMENT_ID   	BIGINT,
	DISBURSE_DATE     	TIMESTAMP,
	SUB_PURPOSE       	VARCHAR(10),
	INVOICE_NO        	VARCHAR(30),
	INVOICE_CURRENCY  	VARCHAR(3),
	INVOICE_AMOUNT    	DECIMAL(20,2),
	DISBURSE_CURRENCY 	VARCHAR(3),
	DISBURSE_AMOUNT   	DECIMAL(20,2),
	DISBURSE_MODE     	VARCHAR(10),
	PAYEE             	VARCHAR(150),
	REFERENCE_NO      	VARCHAR(30),
	GL_REFERENCE_NO   	VARCHAR(30),
	COMMON_REF_ID     	BIGINT,
	IS_DELETED        	CHARACTER(1),
	REMARKS           	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_DISBURSEMENT_DETAIL
	ADD CONSTRAINT BL_STG_DIS_DTL_PK
	PRIMARY KEY (DISBURSE_DETAIL_ID);

CREATE TABLE CMS_STAGE_BL_FDR ( 
	FDR_ID       	BIGINT NOT NULL,
	PROJECT_ID   	BIGINT,
	FDR_DATE     	TIMESTAMP,
	ACCOUNT_NO   	VARCHAR(25),
	FDR_CURRENCY 	VARCHAR(3),
	FDR_AMOUNT   	DECIMAL(20,2),
	REFERENCE_NO 	VARCHAR(30),
	COMMON_REF_ID	BIGINT,
	IS_DELETED   	CHARACTER(1),
	REMARKS      	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_FDR
	ADD CONSTRAINT BL_STG_FDR_ID_PK
	PRIMARY KEY (FDR_ID);

CREATE TABLE CMS_STAGE_BL_PROJECT_SCHEDULE ( 
	SCHEDULE_ID      	BIGINT NOT NULL,
	PROJECT_ID       	BIGINT,
	PROGRESS_STAGE   	VARCHAR(100),
	START_DATE       	TIMESTAMP,
	END_DATE         	TIMESTAMP,
	ACTUAL_START_DATE	TIMESTAMP,
	ACTUAL_END_DATE  	TIMESTAMP,
	COMMON_REF_ID    	BIGINT,
	IS_DELETED       	CHARACTER(1),
	REMARKS          	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_PROJECT_SCHEDULE
	ADD CONSTRAINT BL_STG_SCHD_ID_PK
	PRIMARY KEY (SCHEDULE_ID);

CREATE TABLE CMS_STAGE_BL_PROPERTY_TYPE ( 
	PROPERTY_TYPE_ID    	BIGINT NOT NULL,
	PROJECT_ID          	BIGINT,
	PROPERTY_TYPE       	VARCHAR(5),
	PROPERTY_TYPE_OTHERS	VARCHAR(50),
	NO_OF_UNITS         	DECIMAL(5,0),
	COMMON_REF_ID       	BIGINT,
	IS_DELETED          	CHARACTER(1),
	REMARKS             	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_PROPERTY_TYPE
	ADD CONSTRAINT BL_STG_PROP_ID_PK
	PRIMARY KEY (PROPERTY_TYPE_ID);

CREATE TABLE CMS_STAGE_BL_SALES_PROCEEDS ( 
	PROCEEDS_ID        	BIGINT NOT NULL,
	BUILDUP_ID         	BIGINT,
	PROCEEDS_DATE      	DATE,
	PURPOSE            	VARCHAR(10),
	PURPOSE_PERCENT    	DECIMAL(4,1),
	BANK_NAME          	VARCHAR(100),
	CHEQUE_NO          	VARCHAR(50),
	RECEIVE_CURRENCY   	VARCHAR(3),
	RECEIVE_AMOUNT     	DECIMAL(20,2),
	STATUS             	VARCHAR(3),
	REMARKS            	VARCHAR(500),
	DISTRIBUTE_DATE    	TIMESTAMP,
	DISTRIBUTE_CURRENCY	VARCHAR(3),
	DISTRIBUTE_AMOUNT  	DECIMAL(20,2),
	TL_IND             	CHARACTER(1),
	TL_CURRENCY        	VARCHAR(3),
	TL_AMOUNT          	DECIMAL(20,2),
	OD_IND             	CHARACTER(1),
	OD_CURRENCY        	VARCHAR(3),
	OD_AMOUNT          	DECIMAL(20,2),
	FDR_IND            	CHARACTER(1),
	FDR_CURRENCY       	VARCHAR(3),
	FDR_AMOUNT         	DECIMAL(20,2),
	HDA_IND            	CHARACTER(1),
	HDA_CURRENCY       	VARCHAR(3),
	HDA_AMOUNT         	DECIMAL(20,2),
	OTHERS_IND         	CHARACTER(1),
	OTHERS_ACCOUNT     	VARCHAR(25),
	OTHERS_CURRENCY    	VARCHAR(3),
	OTHERS_AMOUNT      	DECIMAL(20,2),
	COMMON_REF_ID      	BIGINT,
	IS_DELETED         	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_SALES_PROCEEDS
	ADD CONSTRAINT BL_STG_SALE_ID_PK
	PRIMARY KEY (PROCEEDS_ID);

CREATE TABLE CMS_STAGE_BL_SETTLEMENT ( 
	SETTLEMENT_ID       	BIGINT NOT NULL,
	PROJECT_ID          	BIGINT,
	SETTLEMENT_DATE     	TIMESTAMP,
	SETTLED_CURRENCY    	VARCHAR(3),
	SETTLED_AMOUNT      	DECIMAL(20,2),
	OUTSTANDING_CURRENCY	VARCHAR(3),
	OUTSTANDING_AMOUNT  	DECIMAL(20,2),
	COMMON_REF_ID       	BIGINT,
	IS_DELETED          	CHARACTER(1),
	REMARKS             	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BL_SETTLEMENT
	ADD CONSTRAINT BL_STG_SETT_ID_PK
	PRIMARY KEY (SETTLEMENT_ID);

CREATE TABLE CMS_STAGE_BRIDGING_LOAN ( 
	PROJECT_ID              	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	PROJECT_NUMBER          	VARCHAR(50),
	CONTRACT_DATE           	TIMESTAMP,
	CONTRACTED_CURRENCY     	VARCHAR(3),
	CONTRACTED_AMOUNT       	DECIMAL(20,2),
	FINANCE_PERCENT         	DECIMAL(5,2),
	CONTRACT_SETTLEMENT_DATE	TIMESTAMP,
	COLLECTION_ACCOUNT      	VARCHAR(25),
	HDA_ACCOUNT             	VARCHAR(25),
	PROJECT_ACCOUNT         	VARCHAR(25),
	CURRENT_ACCOUNT         	VARCHAR(25),
	NO_OF_TYPE              	DECIMAL(2,0),
	NO_OF_UNITS             	DECIMAL(4,0),
	EXPECTED_START_DATE     	TIMESTAMP,
	EXPECTED_COMPLETION_DATE	TIMESTAMP,
	ACTUAL_START_DATE       	TIMESTAMP,
	ACTUAL_COMPLETION_DATE  	TIMESTAMP,
	AVAILABILITY_EXPIRY_DATE	TIMESTAMP,
	FULL_SETTLEMENT_DATE    	TIMESTAMP,
	IS_DELETED              	CHARACTER(1),
	REMARKS                 	VARCHAR(2000),
	VERSION_TIME            	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_BRIDGING_LOAN
	ADD CONSTRAINT BL_STG_PROJ_ID_PK
	PRIMARY KEY (PROJECT_ID);

CREATE TABLE CMS_STAGE_CASH ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	TOTAL_DEPOSIT_AMT       	DECIMAL(20,2),
	COUNT_DEPOSIT           	SMALLINT,
	INTEREST_CAPITIALISATION	CHARACTER(1),
	MINIMAL_FSV             	DECIMAL(20,2),
	MINIMAL_FSV_CURRENCY    	CHARACTER(3),
	HOLDING_PERIOD          	DECIMAL(9,3),
	HOLDING_PERIOD_UOM      	VARCHAR(10),
	PRI_CAVEAT_GUARANTEE_DATE	TIMESTAMP,
	DESCRIPTION					VARCHAR(250),
	CREDIT_CARD_FD_REF_NO		VARCHAR(50),
	ISSUER						VARCHAR(100)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CASH
	ADD CONSTRAINT CC1169527270801
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_CASH_DEPOSIT ( 
	CASH_DEPOSIT_ID         	BIGINT NOT NULL,
	DEPOSIT_RECEIPT_NUMBER  	VARCHAR(25),
	DEPOSIT_AMOUNT          	DECIMAL(30,4),
	DEPOSIT_AMOUNT_CURRENCY 	CHARACTER(3),
	DEPOSIT_MATURITY_DATE   	TIMESTAMP,
	CMS_COLLATERAL_ID       	BIGINT,
	CMS_REF_ID              	BIGINT,
	STATUS                  	VARCHAR(10),
	FDR_RATE                	DECIMAL(11,9),
	ISSUE_DATE              	TIMESTAMP,
	THIRD_PARTY_BANK        	VARCHAR(1),
	ACCOUNT_TYPE_NUM        	VARCHAR(15),
	ACCOUNT_TYPE_VALUE      	VARCHAR(15),
	SHARED_SECURITY_IND     	CHARACTER(1),
	SECURITY_DEPOSIT_IND    	CHARACTER(1),
	DEPOSIT_REFERENCE_NUMBER	VARCHAR(20),
	SOURCE_SECURITY_ID      	VARCHAR(50),
	SOURCE_ID               	VARCHAR(10),
	DEPOSIT_NUMBER          	VARCHAR(20),
	IS_OWN_BANK					CHARACTER(1),
	GROUP_ACCOUNT_NO			VARCHAR(50),
	TENURE						BIGINT,
	TENURE_UNIT					CHARACTER(1),
	HOLD_STATUS					CHAR(1),
	HAS_VALIDATE				CHAR(1)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CASH_DEP_I2
	ON CMS_STAGE_CASH_DEPOSIT(DEPOSIT_RECEIPT_NUMBER, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CASH_DEP_I1
	ON CMS_STAGE_CASH_DEPOSIT(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CASH_DEPOSIT
	ADD CONSTRAINT CC1169527291951
	PRIMARY KEY (CASH_DEPOSIT_ID);

CREATE TABLE CMS_STAGE_CASH_MARGIN ( 
	CASH_MARGIN_ID	BIGINT NOT NULL,
	AGREEMENT_ID  	BIGINT NOT NULL,
	TRX_DATE      	TIMESTAMP,
	NAP_CURRENCY  	CHARACTER(3),
	NAP           	DECIMAL(21,6),
	NAP_SIGN_ADD  	CHARACTER(1),
	CASH_INTEREST 	DECIMAL(21,6),
	GROUP_ID      	BIGINT NOT NULL,
	STATUS        	VARCHAR(20),
	VERSION_TIME  	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CASH_MARGIN
	ADD CONSTRAINT CASH_MARGIN_ST_PK
	PRIMARY KEY (CASH_MARGIN_ID);

CREATE TABLE CMS_STAGE_CF_ADVANCE ( 
	ADVANCE_ID             	BIGINT NOT NULL,
	CONTRACT_ID            	BIGINT,
	FACILITY_TYPE_ID       	BIGINT,
	REFERENCE_NO           	VARCHAR(30),
	DRAWDOWN_DATE          	TIMESTAMP,
	TENOR_UOM              	VARCHAR(3),
	TENOR_PERIOD           	DECIMAL(3,0),
	CLAIM_CURRENCY         	VARCHAR(3),
	CLAIM_AMOUNT           	DECIMAL(20,2),
	EXPIRY_DATE            	TIMESTAMP,
	ACTUAL_ADVANCE_CURRENCY	VARCHAR(3),
	ACTUAL_ADVANCE_AMOUNT  	DECIMAL(20,2),
	COMMON_REF             	BIGINT,
	IS_DELETED             	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CF_ADVANCE
	ADD CONSTRAINT CF_STG_ADV_ID_PK
	PRIMARY KEY (ADVANCE_ID);

CREATE TABLE CMS_STAGE_CF_FACILITY_TYPE ( 
	FACILITY_TYPE_ID	BIGINT NOT NULL,
	CONTRACT_ID     	BIGINT,
	FACILITY_TYPE   	VARCHAR(5),
	FACITLITY_OTHERS	VARCHAR(50),
	FACILITY_DATE   	TIMESTAMP,
	MOA             	DECIMAL(5,2),
	MAX_CAP_CURRENCY	VARCHAR(3),
	MAX_CAP_AMOUNT  	DECIMAL(20,2),
	COMMON_REF      	BIGINT,
	IS_DELETED      	CHARACTER(1),
	REMARKS         	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CF_FACILITY_TYPE
	ADD CONSTRAINT CF_STG_FAC_ID_PK
	PRIMARY KEY (FACILITY_TYPE_ID);

CREATE TABLE CMS_STAGE_CF_FDR ( 
	FDR_ID      	BIGINT NOT NULL,
	CONTRACT_ID 	BIGINT,
	FDR_DATE    	TIMESTAMP,
	ACCOUNT_NO  	VARCHAR(25),
	FDR_CURRENCY	VARCHAR(3),
	FDR_AMOUNT  	DECIMAL(20,2),
	REFERENCE_NO	VARCHAR(100),
	COMMON_REF  	BIGINT,
	IS_DELETED  	CHARACTER(1),
	REMARKS     	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CF_FDR
	ADD CONSTRAINT CF_STG_FDR_ID_PK
	PRIMARY KEY (FDR_ID);

CREATE TABLE CMS_STAGE_CF_PAYMENT ( 
	PAYMENT_ID             	BIGINT NOT NULL,
	ADVANCE_ID             	BIGINT,
	RECEIVE_DATE           	TIMESTAMP,
	RECEIVE_CURRENCY       	VARCHAR(3),
	RECEIVE_AMOUNT         	DECIMAL(20,2),
	RECEIVE_FROM           	VARCHAR(30),
	DISTRIBUTE_DATE        	TIMESTAMP,
	DISTRIBUTE_CURRENCY    	VARCHAR(3),
	DISTRIBUTE_AMOUNT      	DECIMAL(20,2),
	FDR_IND                	CHARACTER(1),
	FDR_CURRENCY           	VARCHAR(3),
	FDR_AMOUNT             	DECIMAL(20,2),
	REPO_IND               	CHARACTER(1),
	REPO_CURRENCY          	VARCHAR(3),
	REPO_AMOUNT            	DECIMAL(20,2),
	APG_IND                	CHARACTER(1),
	APG_CURRENCY           	VARCHAR(3),
	APG_AMOUNT             	DECIMAL(20,2),
	TL1_IND                	CHARACTER(1),
	TL1_CURRENCY           	VARCHAR(3),
	TL1_AMOUNT             	DECIMAL(20,2),
	TL2_IND                	CHARACTER(1),
	TL2_CURRENCY           	VARCHAR(3),
	TL2_AMOUNT             	DECIMAL(20,2),
	TL3_IND                	CHARACTER(1),
	TL3_CURRENCY           	VARCHAR(3),
	TL3_AMOUNT             	DECIMAL(20,2),
	BQ_IND                 	CHARACTER(1),
	BQ_CURRENCY            	VARCHAR(3),
	BQ_AMOUNT              	DECIMAL(20,2),
	COLLECTION_ACC_IND     	CHARACTER(1),
	COLLECTION_ACC_CURRENCY	VARCHAR(3),
	COLLECTION_ACC_AMOUNT  	DECIMAL(20,2),
	OTH_IND                	CHARACTER(1),
	OTH_CURRENCY           	VARCHAR(3),
	OTH_AMOUNT             	DECIMAL(20,2),
	COMMON_REF             	BIGINT,
	IS_DELETED             	CHARACTER(1),
	REMARKS                	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CF_PAYMENT
	ADD CONSTRAINT CF_STG_PAY_ID_PK
	PRIMARY KEY (PAYMENT_ID);

CREATE TABLE CMS_STAGE_CF_TERMS_CONDITIONS ( 
	TNC_ID      	BIGINT NOT NULL,
	CONTRACT_ID 	BIGINT,
	TERMS       	VARCHAR(10),
	TERMS_OTHERS	VARCHAR(50),
	TNC_DATE    	TIMESTAMP,
	CONDITIONS  	VARCHAR(100),
	STATUS      	VARCHAR(10),
	COMMON_REF  	BIGINT,
	IS_DELETED  	CHARACTER(1),
	REMARKS     	VARCHAR(500) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CF_TERMS_CONDITIONS
	ADD CONSTRAINT CF_STG_TNC_ID_PK
	PRIMARY KEY (TNC_ID);

CREATE TABLE CMS_STAGE_CHARGE_DETAIL ( 
	CHARGE_DETAIL_ID           	BIGINT NOT NULL,
	CHARGE_NATURE              	VARCHAR(20),
	CHARGE_AMOUNT              	DECIMAL(20,2),
	CHARGE_CURRENCY_CODE       	CHARACTER(3),
	LEGAL_CHARGE_DATE          	TIMESTAMP,
	LE_CHARGE                  	CHARACTER(1),
	LE_CHARGE_DATE             	TIMESTAMP,
	LE_JURIDICT                	CHARACTER(1),
	LE_JURIDICT_DATE           	TIMESTAMP,
	LE_GOVNLAW                 	CHARACTER(1),
	LE_GOVNLAW_DATE            	TIMESTAMP,
	PRIOR_CHARGE_AMOUNT        	DECIMAL(20,2),
	PRIOR_CHARGE_CURRENCY      	CHARACTER(3),
	SECURITY_RANK              	SMALLINT,
	PRIOR_CHARGEE              	VARCHAR(50),
	CHARGE_TYPE                	CHARACTER(1),
	CMS_COLLATERAL_ID          	BIGINT,
	SCI_LAS_SEC_ID             	VARCHAR(50),
	CONFIRM_CHARGE_DATE        	TIMESTAMP,
	CMS_REF_ID                 	BIGINT,
	STATUS                     	VARCHAR(10),
	PRIOR_CHARGE_TYPE          	VARCHAR(10),
	IS_LEGAL_ENFORCE           	CHARACTER(1),
	IS_LEGAL_ENFORCE_DATE      	TIMESTAMP,
	SOURCE_ID                  	VARCHAR(10),
	TOOLTIP_DATE_LEGALLY_CHARGE	TIMESTAMP,
	CAVEAT_WAIVED_IND          	CHARACTER(1),
	CAVEAT_REF_NO              	VARCHAR(50),
	EXPIRY_DATE                	TIMESTAMP,
	PRESENTATION_NO            	VARCHAR(50),
	PRESENTATION_DATE          	TIMESTAMP,
	LODGED_DATE                	TIMESTAMP,
	SOLICITOR_NAME             	VARCHAR(100),
	FOLIO_CHARGE                VARCHAR(10),
	JILID_CHARGE      			VARCHAR(10),
	PARTY_CHARGE 				CHARACTER(1),
	CHARGE_PENDING_REDEMPTION 	CHARACTER(1)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CHG_DTL_I3
	ON CMS_STAGE_CHARGE_DETAIL(SOURCE_ID, STATUS, CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CHG_DTL_I1
	ON CMS_STAGE_CHARGE_DETAIL(CMS_COLLATERAL_ID, SECURITY_RANK)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CHG_DTL_I2
	ON CMS_STAGE_CHARGE_DETAIL(SCI_LAS_SEC_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CHARGE_DETAIL
	ADD CONSTRAINT CC1170231486682
	PRIMARY KEY (CHARGE_DETAIL_ID);

CREATE TABLE CMS_STAGE_CMDT_APPV ( 
	APPV_COMMODITY_ID	BIGINT NOT NULL,
	CMS_REF_ID       	BIGINT NOT NULL,
	PROFILE_ID       	BIGINT,
	CMS_COLLATERAL_ID	BIGINT,
	STATUS           	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_APV_I1
	ON CMS_STAGE_CMDT_APPV(PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMD_APP_I1
	ON CMS_STAGE_CMDT_APPV(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_APPV
	ADD CONSTRAINT CC1169528324386
	PRIMARY KEY (APPV_COMMODITY_ID);

CREATE TABLE CMS_STAGE_CMDT_BUYER ( 
	BUYER_ID  	BIGINT NOT NULL,
	NAME      	VARCHAR(150) NOT NULL,
	PROFILE_ID	BIGINT,
	CMS_REF_ID	BIGINT,
	STATUS    	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_BUY_I1
	ON CMS_STAGE_CMDT_BUYER(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_BUYER
	ADD CONSTRAINT CC1169528347699
	PRIMARY KEY (BUYER_ID);

CREATE TABLE CMS_STAGE_CMDT_CNTR ( 
	CONTRACT_ID        	BIGINT NOT NULL,
	CONTRACT_NO        	VARCHAR(50) NOT NULL,
	CONTRACT_CCY       	CHARACTER(3) NOT NULL,
	CMS_REF_ID         	BIGINT NOT NULL,
	CONTRACT_QTY_UOM_ID	VARCHAR(40),
	CMS_COLLATERAL_ID  	BIGINT,
	APPV_COMMODITY_ID  	BIGINT,
	MATURITY_DATE      	TIMESTAMP,
	MIN_SHPG_FREQ      	SMALLINT,
	MIN_SHPG_FREQ_UNIT 	CHARACTER(2),
	LAST_SHIPMENT_DATE 	TIMESTAMP,
	CONTRACT_REMK      	VARCHAR(250),
	QTY_DIFF_SIGN      	CHARACTER(2),
	QTY_DIFF_PCT       	INTEGER,
	SUPPLIER_ID        	BIGINT,
	STATUS             	VARCHAR(20),
	CONTRACT_AMT       	BIGINT,
	CONTRACT_QTY       	DECIMAL(19,4),
	CONTRACT_PRICE     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_CNT_I1
	ON CMS_STAGE_CMDT_CNTR(APPV_COMMODITY_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_CNT_I3
	ON CMS_STAGE_CMDT_CNTR(SUPPLIER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_CNT_I2
	ON CMS_STAGE_CMDT_CNTR(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_CNTR
	ADD CONSTRAINT CC1169529149032
	PRIMARY KEY (CONTRACT_ID);

CREATE TABLE CMS_STAGE_CMDT_DEAL ( 
	DEAL_ID                    	BIGINT NOT NULL,
	CMS_COLLATERAL_ID          	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID       	BIGINT,
	DEAL_NO                    	VARCHAR(18) NOT NULL,
	DEAL_TYPE                  	CHARACTER(2) NOT NULL,
	TRX_REF_NO                 	VARCHAR(20) NOT NULL,
	MATURITY_DATE              	TIMESTAMP NOT NULL,
	ORIG_FACE_AMT_CCY          	CHARACTER(3) NOT NULL,
	FINANCE_PCT                	INTEGER NOT NULL,
	IS_PRE_SOLD                	CHARACTER(1) NOT NULL,
	IS_ATTAIN_ENFORCE          	CHARACTER(1) NOT NULL,
	CNTR_RIC                   	VARCHAR(20),
	CASH_REQ_PCT               	INTEGER,
	CASH_MARGIN_PCT            	INTEGER,
	IS_CASH_WITHIN_REQ         	CHARACTER(1),
	SHIPPING_MARKS             	VARCHAR(20),
	LATEST_SHIP_DATE           	TIMESTAMP,
	CONTAINER_NO               	VARCHAR(20),
	ATTAIN_ENFORCE_DATE        	TIMESTAMP,
	DEAL_REMK                  	VARCHAR(250),
	IS_PLEDGE_DOC_REQ          	CHARACTER(1),
	HEDGE_CNTR_ID              	BIGINT,
	HEDGE_PRICE                	DECIMAL(21,6),
	HEDGE_PRICE_CCY            	CHARACTER(3),
	CNTR_ID                    	BIGINT,
	CNTR_PROFILE_ID            	BIGINT,
	CNTR_PRICE_TYPE            	CHARACTER(2),
	CNTR_QTY_UOM_ID            	VARCHAR(40),
	CNTR_QTY_DIFF_UOM_ID       	VARCHAR(40),
	CNTR_QTY_DIFF_SIGN         	CHARACTER(2),
	CNTR_MKT_UOM_ID            	VARCHAR(40),
	CNTR_METRIC_UOM_ID         	VARCHAR(40),
	CNTR_PRICE_DIFF_SIGN       	CHARACTER(2),
	CNTR_PRICE_DIFF_CCY        	CHARACTER(3),
	CNTR_PRICE_DIFF            	DECIMAL(21,6),
	CNTR_PRICE_CCY             	CHARACTER(3),
	CNTR_PRICE                 	DECIMAL(21,6),
	ACT_PRICE                  	DECIMAL(21,6),
	ACT_PRICE_CCY              	CHARACTER(3),
	ACT_ADJUST_PRICE           	DECIMAL(21,6),
	ACT_ADJUST_PRICE_CCY       	CHARACTER(3),
	ACT_MKT_PRICE_DATE         	TIMESTAMP,
	ACT_COMMON_DIFF            	DECIMAL(21,6),
	ACT_COMMON_DIFF_CCY        	CHARACTER(3),
	ACT_COMMON_DIFF_SIGN       	CHARACTER(2),
	ACT_EOD_CUST_DIFF          	DECIMAL(21,6),
	ACT_EOD_CUST_DIFF_CCY      	CHARACTER(3),
	ACT_EOD_CUST_DIFF_SIGN     	CHARACTER(2),
	DEAL_CMV_CCY               	CHARACTER(3),
	DEAL_FSV_CCY               	CHARACTER(3),
	STATUS                     	VARCHAR(20),
	VERSION_TIME               	BIGINT,
	DEAL_CMV                   	DECIMAL(20,2),
	DEAL_FSV                   	DECIMAL(20,2),
	CNTR_QTY_DIFF              	DECIMAL(21,6),
	ORIG_FACE_AMT              	DECIMAL(20,2),
	ACT_QTY                    	DECIMAL(19,4),
	CNTR_METRIC_CONVERT_UOM_QTY	DECIMAL(19,4),
	CNTR_MKT_UOM_CONVERT_QTY   	DECIMAL(19,4),
	CNTR_QTY                   	DECIMAL(19,4),
	HEDGE_QTY                  	DECIMAL(19,4),
	DEAL_DATE                  	TIMESTAMP,
	EXTENDED_MATURITY_DATE     	TIMESTAMP,
	SUB_LIMIT_ID               	BIGINT,
	CUSTOMER_CATEGORY          	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID   	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_DL_I6
	ON CMS_STAGE_CMDT_DEAL(HEDGE_CNTR_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_DL_I4
	ON CMS_STAGE_CMDT_DEAL(CNTR_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_DL_I2
	ON CMS_STAGE_CMDT_DEAL(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_DL_I5
	ON CMS_STAGE_CMDT_DEAL(CNTR_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_DL_I1
	ON CMS_STAGE_CMDT_DEAL(CMS_LSP_CO_BORROW_LMT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CMT_DL_I3
	ON CMS_STAGE_CMDT_DEAL(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_DEAL
	ADD CONSTRAINT CC1169529175710
	PRIMARY KEY (DEAL_ID);

CREATE TABLE CMS_STAGE_CMDT_LOAN ( 
	LOAN_ID                 	BIGINT NOT NULL,
	CMS_COLLATERAL_ID       	BIGINT,
	CMS_REF_ID              	BIGINT NOT NULL,
	ADMIN_AGT_NAME          	VARCHAR(150),
	COLLATERAL_AGT_NAME     	VARCHAR(150),
	DOC_AGT_NAME            	VARCHAR(150),
	LC_ISSUE_BANK_NAME      	VARCHAR(150),
	GLOBAL_AMT_CCY          	CHARACTER(3),
	APPV_CCY_LIST           	VARCHAR(120),
	LOAN_FACILITY_TYPE      	CHARACTER(1),
	FACILITY_COMMIT_DATE    	TIMESTAMP,
	FACILITY_EFFECTIVE_DATE 	TIMESTAMP,
	FACILITY_MATURITY_DATE  	TIMESTAMP,
	FACILITY_TERMINATE_DATE 	TIMESTAMP,
	LC_LAST_ISSUE_DATE      	TIMESTAMP,
	LAST_LC_MATURITY_DATE   	TIMESTAMP,
	TRX_TYPE                	CHARACTER(1),
	AGT_BANK_COUNSEL_NAME   	VARCHAR(150),
	IS_ALLOW_TERM_OUT       	CHARACTER(1),
	IS_ALLOW_PREPAY         	CHARACTER(1),
	IS_ALLOW_PREPAY_PENALTY 	CHARACTER(1),
	PREPAY_MIN_AMT_CCY      	CHARACTER(3),
	NOTICE_DAY_QTY          	SMALLINT,
	GOVERN_LAW              	VARCHAR(150),
	INTEREST_PERIOD_QTY     	SMALLINT,
	INTEREST_PERIOD_UNIT    	CHARACTER(1),
	MAX_OUTSTD_LOAN_QTY     	SMALLINT,
	MIN_DRAWDOWN_CCY        	CHARACTER(3),
	MAX_DRAWDOWN_CCY        	CHARACTER(3),
	MIN_DRAWDOWN_QTY        	SMALLINT,
	MAX_DRAWDOWN_QTY        	SMALLINT,
	MIN_ASSIGNMT_FEE_AMT    	DECIMAL(8,2),
	IS_BORROWER_AGREE       	CHARACTER(1),
	MJRTY_LNDR_CNSNT_PCT    	DECIMAL(5,2),
	DEFAULT_RATE_PCT        	DECIMAL(5,2),
	CALCULATE_BASE_DAY_QTY  	SMALLINT,
	DEBT_RATE_PCT           	DECIMAL(5,2),
	PAYMT_FREQ              	CHARACTER(1),
	PRINCIPAL_AMT_CCY       	CHARACTER(3),
	MAX_ASSIGNMT_FEE_AMT_CCY	CHARACTER(3),
	MAX_ASSIGNMT_FEE_AMT    	DECIMAL(8,2),
	MIN_ASSIGNMT_FEE_AMT_CCY	CHARACTER(3),
	AGNCY_FEE_AMT           	DECIMAL(20,2),
	AGNCY_FEE_AMT_CCY       	CHARACTER(3),
	CLOSE_FEE_AMT           	DECIMAL(20,2),
	CLOSE_FEE_AMT_CCY       	CHARACTER(3),
	COMMIT_FEE_AMT          	DECIMAL(20,2),
	COMMIT_FEE_AMT_CCY      	CHARACTER(3),
	FACILITY_FEE_AMT        	DECIMAL(20,2),
	FACILITY_FEE_AMT_CCY    	CHARACTER(3),
	UPFRONT_FEE_AMT         	DECIMAL(20,2),
	UPFRONT_FEE_AMT_CCY     	CHARACTER(3),
	LC_FEE_AMT              	DECIMAL(20,2),
	LC_FEE_AMT_CCY          	CHARACTER(3),
	AMEND_FEE_AMT           	DECIMAL(20,2),
	AMEND_FEE_AMT_CCY       	CHARACTER(3),
	EXTEND_FEE_AMT          	DECIMAL(20,2),
	EXTEND_FEE_AMT_CCY      	CHARACTER(3),
	ARRANGE_FEE_AMT         	DECIMAL(20,2),
	ARRANGE_FEE_AMT_CCY     	CHARACTER(3),
	OTHER_FEE_AMT           	DECIMAL(20,2),
	OTHER_FEE_AMT_CCY       	CHARACTER(3),
	VERSION_TIME            	BIGINT,
	STATUS                  	VARCHAR(20),
	IS_EQUAL_INSTL          	CHARACTER(1),
	PREPAY_MIN_AMT          	DECIMAL(20,2),
	MIN_DRAWDOWN_AMT        	DECIMAL(20,2),
	MAX_DRAWDOWN_AMT        	DECIMAL(20,2),
	PRINCIPAL_AMT           	DECIMAL(20,2),
	GLOBAL_AMT              	DECIMAL(20,2),
	IS_MULTIPLE_CURR        	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_LN_I1
	ON CMS_STAGE_CMDT_LOAN(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_LOAN
	ADD CONSTRAINT CC1169529241494
	PRIMARY KEY (LOAN_ID);

CREATE TABLE CMS_STAGE_CMDT_PRICE ( 
	COMMODITY_PRICE_ID    	BIGINT NOT NULL,
	GROUP_ID              	BIGINT NOT NULL,
	PROFILE_ID            	BIGINT,
	CLOSE_PRICE_CURRENCY  	CHARACTER(3),
	CLOSE_PRICE           	DECIMAL(21,6),
	CURRENT_PRICE_CURRENCY	CHARACTER(3),
	CURRENT_PRICE         	DECIMAL(21,6),
	PRICE_UOM_ID          	VARCHAR(40),
	CLOSE_UPDATE_DATE     	TIMESTAMP,
	CURRENT_UPDATE_DATE   	TIMESTAMP,
	STATUS                	VARCHAR(20),
	VERSION_TIME          	BIGINT,
	CLOSE_PRI_FIRST_UDATE 	TIMESTAMP,
	CURR_PRI_FIRST_UDATE  	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_PRI_I1
	ON CMS_STAGE_CMDT_PRICE(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_PRICE
	ADD CONSTRAINT CC1169529272499
	PRIMARY KEY (COMMODITY_PRICE_ID);

CREATE TABLE CMS_STAGE_CMDT_PROFILE ( 
	PROFILE_ID        	BIGINT NOT NULL,
	CATEGORY          	VARCHAR(40) NOT NULL,
	PRODUCT_TYPE      	VARCHAR(40) NOT NULL,
	PRODUCT_SUB_TYPE  	VARCHAR(40) NOT NULL,
	RIC               	VARCHAR(20),
	PRICE_TYPE        	CHARACTER(1) NOT NULL,
	RIC_TYPE          	CHARACTER(1) NOT NULL,
	GROUP_ID          	BIGINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	PRICE_DIFF_SIGN   	VARCHAR(2),
	PRICE_DIFFERENTIAL	DECIMAL(21,6),
	MARKET_NAME       	VARCHAR(50),
	COUNTRY_AREA      	VARCHAR(50),
	CHAINS            	VARCHAR(50),
	OUTRIGHTS         	VARCHAR(50),
	VERSION_TIME      	BIGINT,
	STATUS            	VARCHAR(20),
	NON_RIC_DESC      	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CMDT_PROFILE
	ADD CONSTRAINT CC1169529293469
	PRIMARY KEY (PROFILE_ID);

CREATE TABLE CMS_STAGE_CMDT_SUB_LMT ( 
	SUB_LMT_ID     	BIGINT NOT NULL,
	CHARGE_ID      	BIGINT,
	SUB_LMT_TYPE_ID	BIGINT,
	SUB_LMT_CCY    	CHARACTER(3),
	GROUP_ID       	BIGINT,
	CMS_REF_ID     	BIGINT,
	VERSION_TIME   	BIGINT,
	STATUS         	VARCHAR(20),
	INNER_FLAG     	CHARACTER(1),
	ACTIVE_AMOUNT  	BIGINT,
	SUB_LMT_AMOUNT 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CMDT_SUB_LMT
	ADD CONSTRAINT CC1169529320588
	PRIMARY KEY (SUB_LMT_ID);

CREATE TABLE CMS_STAGE_CMDT_SUB_LMT_TYPE ( 
	SUB_LMT_TYPE_ID  	BIGINT NOT NULL,
	LMT_TYPE_CODE    	VARCHAR(40),
	SUB_LMT_TYPE_DESC	VARCHAR(100),
	GROUP_ID         	BIGINT,
	CMS_REF_ID       	BIGINT,
	VERSION_TIME     	BIGINT,
	STATUS           	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CMDT_SUB_LMT_TYPE
	ADD CONSTRAINT CC1169529346175
	PRIMARY KEY (SUB_LMT_TYPE_ID);

CREATE TABLE CMS_STAGE_CMDT_SUPPLIER ( 
	SUPPLIER_ID	BIGINT NOT NULL,
	NAME       	VARCHAR(150) NOT NULL,
	PROFILE_ID 	BIGINT,
	CMS_REF_ID 	BIGINT,
	STATUS     	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_SUP_I1
	ON CMS_STAGE_CMDT_SUPPLIER(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_SUPPLIER
	ADD CONSTRAINT CC1169529366654
	PRIMARY KEY (SUPPLIER_ID);

CREATE TABLE CMS_STAGE_CMDT_UOM ( 
	COMMODITY_UOM_ID	BIGINT NOT NULL,
	PROFILE_ID      	BIGINT NOT NULL,
	UOM_NAME        	VARCHAR(20) NOT NULL,
	MKT_UOM         	VARCHAR(40) NOT NULL,
	GROUP_ID        	BIGINT NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	METRIC_UOM      	VARCHAR(40),
	VERSION_TIME    	BIGINT,
	STATUS          	VARCHAR(20),
	METRIC_UOM_QTY  	DECIMAL(21,6),
	MKT_UOM_QTY     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CMT_UOM_I1
	ON CMS_STAGE_CMDT_UOM(PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CMDT_UOM
	ADD CONSTRAINT CC1169529397599
	PRIMARY KEY (COMMODITY_UOM_ID);

CREATE TABLE CMS_STAGE_CMDT_WRHSE ( 
	WAREHOUSE_ID  	BIGINT NOT NULL,
	COUNTRY_CODE  	CHARACTER(2) NOT NULL,
	WAREHOUSE_NAME	VARCHAR(150) NOT NULL,
	GROUP_ID      	BIGINT NOT NULL,
	CMS_REF_ID    	BIGINT NOT NULL,
	VERSION_TIME  	BIGINT,
	STATUS        	VARCHAR(20),
	ADDR_LINE_1   	VARCHAR(100),
	ADDR_LINE_2   	VARCHAR(100),
	CITY          	VARCHAR(30),
	STATE         	VARCHAR(50),
	POSTAL_CODE   	VARCHAR(30),
	WRHSE_REMK    	VARCHAR(250),
	ATTN_PARTY_NM 	VARCHAR(50),
	EMAIL_ADDR    	VARCHAR(50),
	FAX           	VARCHAR(30),
	TEL           	VARCHAR(30),
	TEL_EXT       	VARCHAR(30) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CMDT_WRHSE
	ADD CONSTRAINT CC1169529421393
	PRIMARY KEY (WAREHOUSE_ID);

CREATE TABLE CMS_STAGE_COMMODITY ( 
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	ENV_RISKY_STATUS        	CHARACTER(2),
	ENV_RISKY_DATE          	TIMESTAMP,
	ENV_RISKY_REMK          	VARCHAR(250),
	APPV_EOD_PRICE_DIFF_SIGN	CHARACTER(2),
	APPV_EOD_PRICE_DIFF     	DECIMAL(19,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_COMMODITY
	ADD CONSTRAINT CC1169529446079
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_CONTRACT_FINANCING ( 
	CONTRACT_ID              	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID   	BIGINT,
	CMS_LSP_APPR_LMTS_ID     	BIGINT,
	CONTRACT_NUMBER          	VARCHAR(50),
	CONTRACT_DATE            	TIMESTAMP,
	AWARDER_TYPE             	VARCHAR(3),
	AWARDER_TYPE_OTHERS      	VARCHAR(50),
	AWARDER_NAME             	VARCHAR(100),
	CONTRACT_TYPE            	VARCHAR(2),
	CONTRACT_TYPE_OTHERS     	VARCHAR(50),
	START_DATE               	TIMESTAMP,
	EXPIRY_DATE              	TIMESTAMP,
	EXTENDED_DATE            	TIMESTAMP,
	CONTRACTED_CURRENCY      	VARCHAR(3),
	CONTRACTED_AMOUNT        	DECIMAL(20,2),
	ACTUAL_FINANCE_CURRENCY  	VARCHAR(3),
	ACTUAL_FINANCE_AMOUNT    	DECIMAL(20,2),
	FINANCE_PERCENT          	DECIMAL(5,2),
	PROJECTED_PROFIT_CURRENCY	VARCHAR(3),
	PROJECTED_PROFIT_AMOUNT  	DECIMAL(20,2),
	COLLECTION_ACCOUNT       	VARCHAR(25),
	PROJECT_ACCOUNT          	VARCHAR(25),
	FACILITY_EXPIRY_DATE     	TIMESTAMP,
	SINKING_FUND_IND         	CHARACTER(1),
	SINKING_FUND_PARTY       	VARCHAR(3),
	BUILD_UP_FDR             	DECIMAL(5,2),
	CONTRACT_DESCRIPTION     	VARCHAR(2000),
	IS_DELETED               	CHARACTER(1),
	REMARKS                  	VARCHAR(2000),
	VERSION_TIME             	BIGINT 
	) IN CMS_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_CONTRACT_FINANCING
	ADD CONSTRAINT CF_STG_CONT_ID_PK
	PRIMARY KEY (CONTRACT_ID);

CREATE TABLE CMS_STAGE_CREDIT_RISK_PARAM ( 
	PARAM_ID         	BIGINT NOT NULL,
	PARAM_TYPE       	VARCHAR(10),
	MOA              	DECIMAL(5,2),
	MAX_CAP          	DECIMAL(5,2),
	IS_LIQUID        	CHARACTER(1),
	IS_INT_SUSPEND   	CHARACTER(1),
	FEED_ID          	BIGINT NOT NULL,
	PARAM_REF        	BIGINT NOT NULL,
	VERSION_TIME     	BIGINT,
	STATUS           	CHARACTER(1),
	IS_FI            	CHARACTER(1),
	BOARD_TYPE       	VARCHAR(20),
	SHARE_STATUS     	VARCHAR(20),
	IS_ACCEPTABLE    	CHARACTER(1),
	UNACCEPTABLE_DATE	TIMESTAMP,
	PREV_SHARE_STATUS	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_STAGE_CUST_DOC ( 
	CUSTODIAN_DOC_ID             	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID       	BIGINT,
	CHECKLIST_ID                 	BIGINT,
	CMS_PLEDGOR_DTL_ID           	BIGINT,
	CMS_LMP_SUB_PROFILE_ID       	BIGINT,
	CATEGORY                     	VARCHAR(40) NOT NULL,
	SUB_CATEGORY                 	VARCHAR(20),
	VERSION_TIME                 	BIGINT NOT NULL,
	LAST_UPDATE_DATE             	TIMESTAMP,
	CMS_COLLATERAL_ID            	BIGINT,
	UPDATED_CHKLIST_ITEM_REF_LIST	VARCHAR(4000),
	REVERSAL_REMARKS             	VARCHAR(1600),
	REVERSAL_REMARKS_UPDATED_BY  	BIGINT,
	REVERSAL_ID                  	BIGINT,
	REVERSAL_RMK_UPDATED_USERINFO	VARCHAR(100) 
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CUS_DOC_I1
	ON CMS_STAGE_CUST_DOC(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CUST_DOC
	ADD CONSTRAINT CC1169529473829
	PRIMARY KEY (CUSTODIAN_DOC_ID);

CREATE TABLE CMS_STAGE_CUST_DOC_ITEM ( 
	CUSTODIAN_DOC_ITEM_ID	BIGINT NOT NULL,
	CUSTODIAN_DOC_ID     	BIGINT,
	STATUS               	VARCHAR(34) NOT NULL,
	REASON               	VARCHAR(200),
	CHECKLIST_ITEM_REF_ID	BIGINT NOT NULL,
	CHECKLIST_ITEM_ID    	BIGINT,
	CMS_REF_ID           	BIGINT,
	LAST_UPDATE_DATE     	TIMESTAMP,
	MAKER_USER_ID        	BIGINT,
	CHECKER_USER_ID      	BIGINT,
	MAKER_TRX_DATE       	TIMESTAMP,
	CHECKER_TRX_DATE     	TIMESTAMP,
	REVERSAL_DATE        	TIMESTAMP,
	CUSTODIAN_DOC_ITEM_BARCODE	VARCHAR(100),
	SEC_ENVELOPE_BARCODE	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_DOC_IT_I2
	ON CMS_STAGE_CUST_DOC_ITEM(CHECKLIST_ITEM_REF_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_DOC_IT_I3
	ON CMS_STAGE_CUST_DOC_ITEM(CUSTODIAN_DOC_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_DOC_IT_I1
	ON CMS_STAGE_CUST_DOC_ITEM(STATUS)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_CUST_DOC_ITEM
	ADD CONSTRAINT CC1169529497623
	PRIMARY KEY (CUSTODIAN_DOC_ITEM_ID);

CREATE TABLE CMS_STAGE_DEAL_CASH ( 
	CASH_DEPOSIT_ID 	BIGINT NOT NULL,
	DEPOSIT_TYPE    	CHARACTER(1) NOT NULL,
	DEPOSIT_REF_NO  	VARCHAR(15) NOT NULL,
	DEPOSIT_CCY     	CHARACTER(3) NOT NULL,
	LOC_CTRY        	CHARACTER(2) NOT NULL,
	MATURITY_DATE   	TIMESTAMP NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	DEAL_ID         	BIGINT,
	STATUS          	VARCHAR(20),
	DEPOSIT_AMT     	DECIMAL(20,2),
	LAST_UPDATE_DATE	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_DL_CSH_I1
	ON CMS_STAGE_DEAL_CASH(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_DEAL_CASH
	ADD CONSTRAINT CC1169529521657
	PRIMARY KEY (CASH_DEPOSIT_ID);

CREATE TABLE CMS_STAGE_DOCUMENT ( 
	CMS_COLLATERAL_ID    		BIGINT NOT NULL,
	ISDA_DATE            		TIMESTAMP,
	ISDA_PROD_DESC       		VARCHAR(50),
	IFEMA_DATE           		TIMESTAMP,
	IFEMA_PROD_DESC      		VARCHAR(50),
	ICOM_DATE            		TIMESTAMP,
	ICOM_PROD_DESC       		VARCHAR(50),
	DOC_DESC             		VARCHAR(250),
	DOCUMENT_DATE        		TIMESTAMP,
	MIN_AMT              		DECIMAL(20,2),
	MIN_AMT_CCY          		CHARACTER(3),
	MAX_AMT              		DECIMAL(20,2),
	MAX_AMT_CCY          		CHARACTER(3),
	DOC_AMT              		DECIMAL(20,2),
	DOC_AMT_CCY          		CHARACTER(3),
	DOC_REF_NO           		VARCHAR(100),
	DEED_ASSIGNMT_TYPE   		VARCHAR(20),
	PROJECT_NAME         		VARCHAR(80),
	AWARDED_DATE         		TIMESTAMP,
	LETTER_INSTRUCT_FLAG 		CHARACTER(1),
	LETTER_UNDERTAKE_FLAG		CHARACTER(1),
	BLANKET_ASSIGNMENT   		VARCHAR(80), 
	ISSUER 						VARCHAR(100),
	LEASE_RENTAL_AGREEMENT_IND 	CHAR(1),
	LEASE_LIMITATION 			VARCHAR(100),
	PROPERTY_TYPE 				VARCHAR(40),
	LOTS_LOCATION 				VARCHAR(15),
	TITLE_NUMBER_TYPE 			VARCHAR(20),
	TITLE_NUMBER 				VARCHAR(20),
	BUY_BACK_AMT 				DECIMAL(20,2),
	BUY_BACK_AMT_CCY 			CHAR(3),
	LEASE_TYPE 					VARCHAR(20),
	CONTRACT_NO    				VARCHAR(50),
	CONTRACT_AMT    			DECIMAL(20,2),
	CONTRACT_NAME    			VARCHAR(50),
	CONTRACT_DATE    			TIMESTAMP,
	LEASE_AGREEMENT_DATE 		TIMESTAMP,
	GURANTEE_AMOUNT 			DECIMAL(20, 2)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_DOCUMENT
	ADD CONSTRAINT CC1169529548226
	PRIMARY KEY (CMS_COLLATERAL_ID);
	
CREATE TABLE CMS_STAGE_DOCUMENT_PROPERTY (
	PROPERTY_ID   	BIGINT NOT NULL,
	DOC_ITEM_ID 	BIGINT,
	SETUP_ID 		BIGINT,
    CATEGORY_CODE   VARCHAR(40),
	PROPERTY_VALUE	VARCHAR(40),
	REFERENCE_ID    BIGINT,
	STATUS			VARCHAR(20) 
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;	

ALTER TABLE CMS_STAGE_DOCUMENT_PROPERTY
 ADD CONSTRAINT PK_STG_DYN_PROP
 PRIMARY KEY (PROPERTY_ID);

CREATE INDEX DOC_PROP_I2
	ON CMS_STAGE_DOCUMENT_PROPERTY(DOC_ITEM_ID)
	ALLOW REVERSE SCANS ;

CREATE TABLE CMS_STAGE_EARMARK ( 
	EARMARK_ID            	BIGINT NOT NULL,
	EARMARK_GROUP_ID      	BIGINT NOT NULL,
	FEED_ID               	BIGINT NOT NULL,
	CUSTOMER_NAME         	VARCHAR(50),
	SOURCE_SYSTEM         	VARCHAR(20),
	SECURITY_ID           	VARCHAR(20),
	AA_NUMBER             	VARCHAR(20),
	BRANCH_NAME           	VARCHAR(20),
	BRANCH_CODE           	VARCHAR(20),
	CIF_NO                	VARCHAR(20),
	ACCOUNT_NO            	VARCHAR(20),
	EARMARK_UNITS         	DECIMAL(20,0),
	EARMARK_STATUS        	VARCHAR(10),
	EARMARKING_DATE       	TIMESTAMP,
	HOLDING_IND           	CHARACTER(1),
	RELEASE_STATUS        	VARCHAR(10),
	INFO_CORRECT_IND      	CHARACTER(1),
	INFO_INCORRECT_DETAILS	VARCHAR(200),
	WAIVE_APPROVE_IND     	CHARACTER(1),
	VERSION_TIME          	BIGINT,
	STATUS                	VARCHAR(20),
	DATE_MAX_CAP_BREACH   	TIMESTAMP,
	PURPOSE_OF_EARMARKING 	VARCHAR(50) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_EARMARK
	ADD CONSTRAINT PK_STAGE_EARMARK
	PRIMARY KEY (EARMARK_ID);

CREATE TABLE CMS_STAGE_FEE_DETAILS ( 
	FEE_DETAILS_ID   	DECIMAL(19,0) NOT NULL,
	CMS_COLLATERAL_ID	DECIMAL(19,0),
	CMS_REF_ID       	DECIMAL(19,0),
	STATUS           	VARCHAR(10),
	EFF_DATE         	DATE,
	EXP_DATE         	DATE,
	GUARANTEE_FEE    	DECIMAL(20,2),
	TENOR            	INTEGER,
	CGC_FEE          	DECIMAL(20,2),
	TENOR_UNIT       	VARCHAR(20),
	CGC_FEE_PAYMENT_DATE	TIMESTAMP  
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_FEE_DETAILS
	ADD CONSTRAINT SQL080609120106340
	PRIMARY KEY (FEE_DETAILS_ID);
	
CREATE INDEX STG_FEE_DTL_IDX1
	ON CMS_STAGE_FEE_DETAILS (CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;
	
CREATE TABLE CMS_STAGE_FEED_GROUP ( 
	FEED_GROUP_ID   	BIGINT NOT NULL,
	GROUP_TYPE      	VARCHAR(20),
	GROUP_SUBTYPE   	VARCHAR(20),
	CMS_VERSION_TIME	DOUBLE,
	GROUP_STOCK_TYPE	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_FEED_GROUP
	ADD CONSTRAINT CC1169529690881
	PRIMARY KEY (FEED_GROUP_ID);

CREATE TABLE CMS_STAGE_FINANCE_DOC ( 
	DOC_ID            	BIGINT NOT NULL,
	DOC_TYPE          	CHARACTER(3) NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	DEAL_ID           	BIGINT,
	DOC_NO            	VARCHAR(50),
	OTHER_DOC_NAME    	VARCHAR(150),
	GOODS_DESC        	VARCHAR(150),
	ORDER_CCY         	CHARACTER(3),
	ORDER_EXPIRY_DATE 	TIMESTAMP,
	EXP_BANK_CTRY     	CHARACTER(2),
	EXP_BANK_NAME     	VARCHAR(50),
	LC_REF_NO         	VARCHAR(50),
	LC_EXPIRY_DATE    	TIMESTAMP,
	COUNTER_PARTY_NAME	VARCHAR(150),
	DOC_REMK          	VARCHAR(250),
	IS_TERMS_MATCH    	CHARACTER(1),
	ORDER_QTY_UOM_ID  	VARCHAR(40),
	STATUS            	VARCHAR(20),
	ORDER_AMT         	BIGINT,
	ORDER_QTY         	DECIMAL(19,4),
	LOC_DUE_DATE      	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_FIN_DOC_I1
	ON CMS_STAGE_FINANCE_DOC(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_FINANCE_DOC
	ADD CONSTRAINT CC1169529712301
	PRIMARY KEY (DOC_ID);

CREATE TABLE CMS_STAGE_FOREX ( 
	FEED_ID         	BIGINT NOT NULL,
	BUY_CURRENCY    	CHARACTER(3) NOT NULL,
	SELL_CURRENCY   	CHARACTER(3) NOT NULL,
	BUY_RATE        	DECIMAL(13,6),
	BUY_UNIT        	BIGINT NOT NULL DEFAULT 0,
	EFFECTIVE_DATE  	TIMESTAMP,
	SELL_RATE       	DECIMAL(13,6),
	SELL_UNIT       	BIGINT NOT NULL DEFAULT 0,
	FEED_GROUP_ID   	BIGINT,
	CMS_VERSION_TIME	DOUBLE NOT NULL DEFAULT 0,
	FEED_REF        	BIGINT NOT NULL DEFAULT 0
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_FOREX_I1
	ON CMS_STAGE_FOREX(FEED_GROUP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_FOREX
	ADD CONSTRAINT CC1169529739821
	PRIMARY KEY (FEED_ID);

CREATE TABLE CMS_GOLD_FEED (
GOLD_FEED_ID			BIGINT NOT NULL,
CMS_VERSION_TIME 		BIGINT,
GOLD_GRADE_CODE_NUM 		VARCHAR(40),
GOLD_UOM_CODE_NUM            	VARCHAR(40),
CURRENCY                        CHAR(3),
PRICE                           DECIMAL(20,2),
LAST_UPDATED_DATE               TIMESTAMP,
FEED_GROUP_ID                   BIGINT NOT NULL,
CMS_REF_ID			BIGINT
) IN CMS_SMALL_DATA             INDEX IN CMS_INDEX;

ALTER TABLE CMS_GOLD_FEED 
   ADD CONSTRAINT GOLD_FEED_PK
   PRIMARY KEY (GOLD_FEED_ID);

CREATE TABLE CMS_STAGE_GOLD_FEED (
GOLD_FEED_ID			BIGINT NOT NULL,
CMS_VERSION_TIME		BIGINT,
GOLD_GRADE_CODE_NUM		VARCHAR(40),
GOLD_UOM_CODE_NUM		VARCHAR(40),
CURRENCY			CHAR(3),
PRICE				DECIMAL(20,2),
LAST_UPDATED_DATE		TIMESTAMP,
FEED_GROUP_ID			BIGINT NOT NULL,
CMS_REF_ID			BIGINT
) IN CMS_SMALL_DATA		INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_GOLD_FEED
   ADD CONSTRAINT GOLD_FEED_PK
   PRIMARY KEY (GOLD_FEED_ID);

CREATE TABLE CMS_STAGE_GUARANTEE ( 
	CMS_COLLATERAL_ID           	BIGINT NOT NULL,
	BENEFICIARY_NAME            	VARCHAR(100),
	DESCRIPTION                 	VARCHAR(250),
	GUARANTEE_AMT               	DECIMAL(20,2),
	CURRENCY_CODE               	CHARACTER(3),
	GUARANTEE_DATE              	TIMESTAMP,
	ISSUING_BANK                	VARCHAR(100),
	ISSUING_BANK_COUNTRY        	CHARACTER(2),
	REFERENCE_NO                	VARCHAR(25),
	BANK_COUNTRY_RISK_APPROVAL  	CHARACTER(1),
	MINIMAL_FSV                 	DECIMAL(20,2),
	MINIMAL_FSV_CURRENCY        	CHARACTER(3),
	ISSUING_CONFIRM_DATE        	TIMESTAMP,
	INSURANCE                   	VARCHAR(1),
	AUTO_DEBIT                  	VARCHAR(1),
	CLAIM_PERIOD                	DECIMAL(9,3),
	CLAIM_PERIOD_TIME_UNIT      	VARCHAR(10),
	EXPIRY_DATE                 	TIMESTAMP,
	PROJECT_NAME                	VARCHAR(80),
	AWARDED_DATE                	TIMESTAMP,
	LETTER_OF_INSTRUCTION_FLAG  	CHARACTER(1),
	LETTER_OF_UNDERTAKING_FLAG  	CHARACTER(1),
	BLANKET_ASSIGNMENT          	VARCHAR(80),
	COMMENTS                    	VARCHAR(160),
	CORRESPONDENCE_BANK         	CHARACTER(1),
	WITHIN_CORRESPOND_BANK_LIMIT	CHARACTER(1),
	CURRENT_LG_DETAILS          	VARCHAR(3),
	CURRENT_LG_REF_NBR          	VARCHAR(12),
	CURRENT_EFF_DATE            	DECIMAL(7,0),
	CURRENT_LG_TENOR            	DECIMAL(2,0),
	CURRENT_SCHEME              	VARCHAR(40),
	CURRENT_EXPIRATION_DATE     	DECIMAL(7,0),
	CURRENT_LG_STATUS           	VARCHAR(3),
	CURRENT_GTEE_COVER_AMT      	DECIMAL(17,2),
	CURRENT_GTEE_FEE_AMT        	DECIMAL(17,2),
	CURRENT_MULTIPLE_SINGLE     	CHARACTER(1),
	AMM_EFF_DATE                	DECIMAL(7,0),
	AMM_GTEE_COVER_AMT          	DECIMAL(17,2),
	AMM_GTEE_FEE_AMT            	DECIMAL(17,2),
	CGC_FEE_PAYMENT_ACCT        	DECIMAL(15,0),
	FACILITY_TYPE               	VARCHAR(4),
	PREVIOUS_LG_DETAILS         	VARCHAR(3),
	PREVIOUS_LG_REF_NBR         	VARCHAR(12),
	PREVIOUS_DATE_CANCELLED     	DECIMAL(7,0),
	PREVIOUS_CANCELLED_BY       	VARCHAR(8),
	PREVIOUS_LG_STATUS          	VARCHAR(3),
	PREVIOUS_REASON             	VARCHAR(3),
	PREVIOUS_GTEE_FEE_AMT       	DECIMAL(17,2),
	HOLDING_PERIOD              	DECIMAL(9,3),
	HOLDING_PERIOD_TIME_UNIT    	VARCHAR(10),
	CLAIM_DATE						TIMESTAMP,
	SECURED_PORTION					SMALLINT,
	SECURED_AMOUNT_ORIGIN			DECIMAL(20,2),
	UNSECURED_PORTION				SMALLINT,
	UNSECURED_AMOUNT_ORIGIN			DECIMAL(20,2),
	SECURED_AMOUNT_CALC				DECIMAL(20,2),
	UNSECURED_AMOUNT_CALC			DECIMAL(20,2),
	GUARANTEE_AMT_CALC				DECIMAL(20,2),
	ICC_RULES_COMPLIED				CHARACTER(1),
	URD_COMPLIED					CHARACTER(1),
	UCP600_COMPLIED					CHARACTER(1),
	REIMBURSEMENT_BANK_NUM 		VARCHAR(40),
	REIMBURSEMENT_BANK_VALUE 	VARCHAR(10),
	LG_CANCELLATION_DATE		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_GUARANTEE
	ADD CONSTRAINT CC1169529763445
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_HEDGE_CNTR ( 
	HEDGECONTRACT_ID  	BIGINT NOT NULL,
	TREASURY_REF_NO   	VARCHAR(50) NOT NULL,
	AGREEMT_REF_NO    	VARCHAR(30) NOT NULL,
	MARGIN_PCT        	SMALLINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	CMS_COLLATERAL_ID 	BIGINT,
	DEAL_DATE         	TIMESTAMP NOT NULL,
	DEAL_AMT_CCY      	CHARACTER(3),
	AGREEMT_DATE      	TIMESTAMP,
	COUNTER_PARTY_NAME	VARCHAR(150),
	STATUS            	VARCHAR(20),
	DEAL_AMT          	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_HDG_CNT_I1
	ON CMS_STAGE_HEDGE_CNTR(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_HEDGE_CNTR
	ADD CONSTRAINT CC1169529890868
	PRIMARY KEY (HEDGECONTRACT_ID);

CREATE TABLE CMS_STAGE_HEDGE_EXT ( 
	HEDGE_EXT_ID   	BIGINT NOT NULL,
	START_DATE     	TIMESTAMP NOT NULL,
	END_DATE       	TIMESTAMP NOT NULL,
	PERIOD_UNIT_QTY	SMALLINT NOT NULL,
	PERIOD_UNIT    	CHARACTER(1) NOT NULL,
	CMS_REF_ID     	BIGINT NOT NULL,
	DEAL_ID        	BIGINT,
	STATUS         	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_HDG_EXT_I1
	ON CMS_STAGE_HEDGE_EXT(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_HEDGE_EXT
	ADD CONSTRAINT CC1169529911848
	PRIMARY KEY (HEDGE_EXT_ID);

CREATE TABLE CMS_STAGE_INSURANCE ( 
	CMS_COLLATERAL_ID     		BIGINT NOT NULL,
	DESCRIPTION           		VARCHAR(250),
	ISDA_DATE             		TIMESTAMP,
	TREASURY_DATE         		TIMESTAMP,
	INSURER_NAME          		VARCHAR(100),
	INSURANCE_TYPE        		VARCHAR(20),
	BANK_RISK_CONFIRMATION		CHARACTER(1),
	EFFECTIVE_DATE        		TIMESTAMP,
	EXPIRY_DATE           		TIMESTAMP,
	POLICY_NO             		VARCHAR(30),
	EXT_LEGAL_COUNSEL     		VARCHAR(100),
	ACCELERATION_CLAUSE   		CHARACTER(1),
	LOCAL_CCY_IN_CM       		CHARACTER(3),
	CORE_MARKET           		VARCHAR(10),
	BANK_INT_NOTED        		CHARACTER(1),
	INSURED_AMOUNT        		DECIMAL(20,2),
	INSURED_AMT_CURR      		CHARACTER(3), 
	ARR_INSURER					VARCHAR(40),
	INSURANCE_PREMIUM 			DECIMAL(20,2),
	INSURANCE_PREMIUM_CURRENCY 	CHARACTER(3),
	ISSUANCE_DATE 				TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_INSURANCE
	ADD CONSTRAINT CC1169529945136
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_INSURANCE_CDS ( 
	CDS_ID                  	BIGINT NOT NULL,
	CMS_REF_ID              	BIGINT,
	STATUS                  	VARCHAR(150),
	BANK_ENTITY             	VARCHAR(150),
	HEDGE_TYPE              	VARCHAR(150),
	HEDGE_REF               	VARCHAR(150),
	CDS_REF                 	VARCHAR(150),
	TRADE_ID                	VARCHAR(150),
	TRADE_DATE              	TIMESTAMP,
	DEAL_DATE               	TIMESTAMP,
	START_DATE              	TIMESTAMP,
	CDS_MATURITY_DATE       	TIMESTAMP,
	TENOR                   	INTEGER,
	TENOR_UNIT              	VARCHAR(40),
	TRADE_CURRENCY          	VARCHAR(150),
	NOTIONAL_HEDGED_AMT     	DOUBLE,
	REFERENCE_ENTITY        	VARCHAR(150),
	CDS_BOOKING_LOCATION    	VARCHAR(150),
	LOAN_BOND_BOOKING_LOC   	VARCHAR(150),
	REFERENCE_ASSET         	VARCHAR(150),
	ISSUER                  	VARCHAR(150),
	ISSUER_ID               	VARCHAR(150),
	ISSUER_DETAILS          	VARCHAR(250),
	DEALT_PRICE             	DECIMAL(21,6),
	RESIDUAL_MATURITY       	DECIMAL(19,4),
	SETTLEMENT              	VARCHAR(150),
	PAR_VALUE               	DECIMAL(19,3),
	DECLINE_MARKET_VALUE    	DECIMAL(19,3),
	EVENT_DETERMINATION_DATE	TIMESTAMP,
	COMPLIANCE_CERTIFICATE  	VARCHAR(150),
	NOMINAL_VALUE           	DECIMAL(20,2),
	MARGIN                  	DECIMAL(5,2),
	VALUATION_DATE          	TIMESTAMP,
	VALUATION_CMV           	DECIMAL(20,2),
	VALUTION_FSV            	DECIMAL(20,2),
	NON_STD_REVALUATION_FREQ	INTEGER,
	NON_STD_REVALUATION_UNIT	VARCHAR(40),
	VALUATION_CURRENCY      	CHARACTER(3),
	CMS_COLLATERAL_ID       	BIGINT,
	SOURCE_SECURITY_ID      	VARCHAR(20),
	SOURCE_ID               	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_INSURANCE_CDS
	ADD CONSTRAINT CC1169529972656
	PRIMARY KEY (CDS_ID);
	
CREATE INDEX STG_INSURANCE_CDS_IDX
	ON CMS_STAGE_INSURANCE_CDS (CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_STAGE_INSURANCE_POLICY ( 
	INSURANCE_POLICY_ID           	BIGINT NOT NULL,
	INSURANCE_CATEGORY            	CHARACTER(3),
	POLICY_NO                     	VARCHAR(50),
	CURRENCY_CODE                 	CHARACTER(3),
	INSURER_NAME                  	VARCHAR(100),
	INSURANCE_TYPE                	VARCHAR(50),
	EXPIRY_DATE                   	TIMESTAMP,
	INSURABLE_AMT                 	DECIMAL(20,2),
	INSURED_AMT                   	DECIMAL(20,2),
	EFFECTIVE_DATE                	TIMESTAMP,
	INSURED_AGAINST               	VARCHAR(250),
	ADDRESS                       	VARCHAR(500),
	INSR_ID                       	VARCHAR(20),
	STATUS                        	VARCHAR(20),
	CMS_COLLATERAL_ID             	BIGINT,
	DOCUMENT_NO                   	VARCHAR(30),
	LMT_PROFILE_ID                	BIGINT,
	ADDRESS_LINE_1                	VARCHAR(40),
	ADDRESS_LINE_2                	VARCHAR(40),
	ADDRESS_LINE_3                	VARCHAR(40),
	ADDRESS_LINE_4                	VARCHAR(40),
	BANK_CUST_ARRANGE_INS_IND     	CHARACTER(1),
	CASH_SURRENDER_VALUE          	DECIMAL(13,2),
	PROP_NO_COVER_NOTE_NUMBER     	VARCHAR(20),
	REMARKS                       	VARCHAR(60),
	GROSS_PREMIUM                 	DECIMAL(13,2),
	STAMP_DUTY                    	DECIMAL(13,2),
	SERVICE_TAX_PERCT             	DECIMAL(11,9),
	SERVICE_AMT                   	DECIMAL(13,2),
	GLOBAL_LOCAL_IND              	CHARACTER(1),
	REBATE_BY_INSURANCE           	DECIMAL(11,9),
	REBATE_AMT_BY_INSURANCE_COMPAN	DECIMAL(13,2),
	REBATE_TO_BORROWER            	DECIMAL(11,9),
	REBATE_AMT_TO_BORROWER        	DECIMAL(15,2),
	NET_PREMIUM_PAY_TO_INSURANCE_C	DECIMAL(13,2),
	NET_PREMIUM_PAY_BY_BORROWER   	DECIMAL(13,2),
	COMMISSION_EARNED             	DECIMAL(13,2),
	CONVERSION_CURRENCY				CHARACTER(3),
	INS_INSSUE_DATE					TIMESTAMP,
	INSURANCE_EXCHANGE_RATE			DECIMAL(20,2),
	INSURANCE_COMPANY_NAME			VARCHAR(100), 
	DEBITING_AC_NO					VARCHAR(50), 
	AC_TYPE							VARCHAR(20), 
	NON_SCHEME_OR_SCHEME			VARCHAR(3), 
	INSURANCE_PREMIUM				DECIMAL(20,2),  
	AUTO_DEBIT						CHARACTER(1), 
	TAKAFUL_COMMISSION				DECIMAL(20,2), 
	NEW_AMT_INSURED					DECIMAL(20,0),
	ENDORSEMENT_DATE				TIMESTAMP,
	BUILDING_OCCUPATION				VARCHAR(50),
	NATURE_OF_WORK					VARCHAR(50),
	TYPE_OF_BUILDING				VARCHAR(50),
	NUMBER_OF_STOREY				INTEGER,
	WALL							VARCHAR(50),
	EXTENSION_WALLS					VARCHAR(50),
	ROOF							VARCHAR(50),
	EXTENSION_ROOF					VARCHAR(50),
	ENDORSEMENT_CODE				VARCHAR(50),
	POLICY_CUSTODIAN				VARCHAR(50),
	INSURANCE_CLAIM_DATE			TIMESTAMP,
	TYPE_OF_FLOOR					VARCHAR(50),
	TYPE_OF_PERILS1					VARCHAR(50),
	TYPE_OF_PERILS2					VARCHAR(50),
	TYPE_OF_PERILS3					VARCHAR(50),
	TYPE_OF_PERILS4					VARCHAR(50),
	TYPE_OF_PERILS5					VARCHAR(50),
	REMARK1							VARCHAR(60),
	REMARK2							VARCHAR(60),
	REMARK3							VARCHAR(60),
	POLICY_SEQ_NO                 	VARCHAR(3),
	SOURCE_SECURITY_ID            	VARCHAR(20),
	SOURCE_ID                     	VARCHAR(10),
	LOS_INSURANCE_POLICY_ID 		BIGINT,
	INSURER_TAG 					varchar(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;
	

CREATE INDEX INS_PLC_I4
	ON CMS_STAGE_INSURANCE_POLICY(CMS_COLLATERAL_ID, POLICY_SEQ_NO)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_INSURANCE_POLICY
	ADD CONSTRAINT CC1169530004752
	PRIMARY KEY (INSURANCE_POLICY_ID);


CREATE TABLE CMS_STAGE_INTEREST_RATE ( 
	INT_RATE_ID  	BIGINT NOT NULL,
	INT_RATE_TYPE	VARCHAR(40),
	INT_RATE_DATE	TIMESTAMP,
	PERCENTAGE   	DECIMAL(19,6),
	GROUP_ID     	BIGINT NOT NULL,
	VERSION_TIME 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_INTEREST_RATE
	ADD CONSTRAINT IRS_INTRATE_ID_PK
	PRIMARY KEY (INT_RATE_ID);

CREATE TABLE CMS_STAGE_LIMIT_CHARGE_MAP ( 
	LIMIT_CHARGE_MAP_ID     	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	CHARGE_ID               	BIGINT NOT NULL,
	CHARGE_DETAIL_ID        	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT,
	STATUS                  	VARCHAR(10),
	CUSTOMER_CATEGORY       	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID	BIGINT,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LMT_CHG_I3
	ON CMS_STAGE_LIMIT_CHARGE_MAP(CMS_COLLATERAL_ID, STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_CHG_I2
	ON CMS_STAGE_LIMIT_CHARGE_MAP(CMS_LSP_CO_BORROW_LMT_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_CHG_I4
	ON CMS_STAGE_LIMIT_CHARGE_MAP(STATUS, CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_CHG_I1
	ON CMS_STAGE_LIMIT_CHARGE_MAP(CHARGE_DETAIL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LIMIT_CHARGE_MAP
	ADD CONSTRAINT CC1169530029117
	PRIMARY KEY (LIMIT_CHARGE_MAP_ID);

CREATE TABLE CMS_STAGE_LIMIT_SECURITY_MAP ( 
	CHARGE_ID               	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT NOT NULL,
	SCI_LAS_SYS_GEN_ID      	BIGINT,
	SCI_LAS_LLP_ID          	BIGINT,
	SCI_LAS_LSP_ID          	BIGINT,
	SCI_LAS_LE_ID           	VARCHAR(20),
	SCI_LAS_LMT_ID          	VARCHAR(40),
	SCI_LAS_SEC_ID          	VARCHAR(50),
	LAS_PLEDGOR_ID          	BIGINT,
	COMM_CASH_PERCENT       	DECIMAL(5,2),
	LMT_TYPE_VALUE          	VARCHAR(10),
	UPDATE_STATUS_IND       	CHARACTER(1),
	CASH_REQ_PCT            	SMALLINT,
	IS_ALLOW_POOL           	CHARACTER(1),
	IS_ALLOW_SPECIFIC       	CHARACTER(1),
	RELEASED_LMT_AMT        	DECIMAL(20,2),
	APPLIED_LMT_AMT         	DECIMAL(20,2),
	LMT_CRRNCY_ISO_CODE     	CHARACTER(3),
	IS_APPLIED_LMT_AMT_INCL 	CHARACTER(1),
	IS_RELEASED_LMT_AMT_INCL	CHARACTER(1),
	PRIORITY_RANK           	BIGINT,
	CUSTOMER_CATEGORY       	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID	BIGINT,
	SCI_CLS_LCL_ID          	VARCHAR(20),
	SCI_CLS_COBO_LE_ID      	VARCHAR(20),
	SCI_CLS_COBO_LSP_ID     	BIGINT,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	CREATE_DATE             	TIMESTAMP,
	DELETION_DATE           	TIMESTAMP,
	SCI_LAS_FAC_CODE        	VARCHAR(3),
	SCI_LAS_FAC_SEQ         	BIGINT,
	CHARGE_AMOUNT           	DECIMAL(20,2),
	DRAW_AMOUNT 				DECIMAL(20,2),
	DRAW_AMOUNT_CURRENCY 		CHARACTER(3),
    PLEDGE_AMOUNT 				DECIMAL(20,2),
    PLEDGE_AMOUNT_CURRENCY 		CHARACTER(3),
    DRAW_AMOUNT_PERCENTAGE 		DECIMAL(10,7),
    PLEDGE_AMOUNT_PERCENTAGE 	DECIMAL(10,7),
	SOURCE_ID               	VARCHAR(10),
	SCI_LAS_BCA_REF_NUM     	VARCHAR(35),
	CHANGE_IND              	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_STG_SECMAP_SOURCE
	ON CMS_STAGE_LIMIT_SECURITY_MAP(SOURCE_ID, UPDATE_STATUS_IND)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_SEC_I1
	ON CMS_STAGE_LIMIT_SECURITY_MAP(CMS_LSP_CO_BORROW_LMT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_SEC_I3
	ON CMS_STAGE_LIMIT_SECURITY_MAP(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_SEC_I2
	ON CMS_STAGE_LIMIT_SECURITY_MAP(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_STG_LMT_SEC1
	ON CMS_STAGE_LIMIT_SECURITY_MAP(CMS_LSP_APPR_LMTS_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LIMIT_SECURITY_MAP
	ADD CONSTRAINT CC1169530410485
	PRIMARY KEY (CHARGE_ID);

CREATE TABLE CMS_STAGE_LOAN_GUARANTOR ( 
	GUARANTOR_ID  	BIGINT NOT NULL,
	GUARANTOR_NAME	VARCHAR(150) NOT NULL,
	CMS_REF_ID    	BIGINT NOT NULL,
	LOAN_ID       	BIGINT,
	STATUS        	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LN_GUA_I1
	ON CMS_STAGE_LOAN_GUARANTOR(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LOAN_GUARANTOR
	ADD CONSTRAINT CC1169530490450
	PRIMARY KEY (GUARANTOR_ID);

CREATE TABLE CMS_STAGE_LOAN_LMT ( 
	LOAN_LMT_ID             	BIGINT NOT NULL,
	CMS_REF_ID              	BIGINT NOT NULL,
	STATUS                  	VARCHAR(20),
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	LOAN_ID                 	BIGINT,
	CUSTOMER_CATEGORY       	VARCHAR(2),
	CMS_LSP_CO_BORROW_LMT_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LN_LMT_I2
	ON CMS_STAGE_LOAN_LMT(LOAN_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LN_LMT_I1
	ON CMS_STAGE_LOAN_LMT(CMS_LSP_CO_BORROW_LMT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LN_LMT_I3
	ON CMS_STAGE_LOAN_LMT(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LOAN_LMT
	ADD CONSTRAINT CC1169530512963
	PRIMARY KEY (LOAN_LMT_ID);

CREATE TABLE CMS_STAGE_LOAN_OBLIGOR ( 
	OBLIGOR_ID  	BIGINT NOT NULL,
	OBLIGOR_NAME	VARCHAR(150) NOT NULL,
	CMS_REF_ID  	BIGINT NOT NULL,
	LOAN_ID     	BIGINT,
	STATUS      	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LN_OBL_I1
	ON CMS_STAGE_LOAN_OBLIGOR(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LOAN_OBLIGOR
	ADD CONSTRAINT CC1169530565478
	PRIMARY KEY (OBLIGOR_ID);

CREATE TABLE CMS_STAGE_LOAN_PARTICIPANT ( 
	PARTICIPANT_ID  	BIGINT NOT NULL,
	PARTICIPANT_NAME	VARCHAR(150) NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	LOAN_ID         	BIGINT,
	PRICE_REMK      	VARCHAR(500),
	STATUS          	VARCHAR(20),
	ALLOC_AMT       	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LN_PAR_I1
	ON CMS_STAGE_LOAN_PARTICIPANT(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LOAN_PARTICIPANT
	ADD CONSTRAINT CC1169530633827
	PRIMARY KEY (PARTICIPANT_ID);

CREATE TABLE CMS_STAGE_LOAN_PAYMT ( 
	EXP_PAYMT_ID        	BIGINT NOT NULL,
	EXP_PAYMT_DATE      	TIMESTAMP NOT NULL,
	CMS_REF_ID          	BIGINT NOT NULL,
	LOAN_ID             	BIGINT,
	STATUS              	VARCHAR(20),
	EXP_PRNCPL_PAYMT_AMT	DECIMAL(20,2),
	EXP_INT_PAYMT_AMT   	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LN_PAY_I1
	ON CMS_STAGE_LOAN_PAYMT(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LOAN_PAYMT
	ADD CONSTRAINT CC1169530667495
	PRIMARY KEY (EXP_PAYMT_ID);

CREATE TABLE CMS_STAGE_LOAN_SUB_LMT ( 
	SUB_LMT_ID        	BIGINT NOT NULL,
	SUB_LMT_AMT_CCY   	CHARACTER(3) NOT NULL,
	LOAN_FACILITY_TYPE	CHARACTER(1) NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	LOAN_ID           	BIGINT,
	STATUS            	VARCHAR(20),
	SUB_LMT_AMT       	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LN_SL_I1
	ON CMS_STAGE_LOAN_SUB_LMT(LOAN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LOAN_SUB_LMT
	ADD CONSTRAINT CC1169530723105
	PRIMARY KEY (SUB_LMT_ID);

CREATE TABLE CMS_STAGE_LSP_SYS_XREF ( 
	CMS_LSP_SYS_XREF_ID   	BIGINT NOT NULL,
	LSX_ID                	BIGINT,
	LSX_LE_ID             	VARCHAR(20),
	LSX_BKG_LOCTN_ID      	BIGINT,
	LSX_LSP_ID            	BIGINT,
	LSX_EXT_CTY_CODE_VALUE	VARCHAR(40),
	LSX_EXT_SYS_CODE_NUM  	VARCHAR(40),
	LSX_EXT_SYS_CODE_VALUE	VARCHAR(40),
	LSX_EXT_SYS_CUST_ID   	VARCHAR(30),
	LSX_EXT_SYS_CUST_NAME 	VARCHAR(100),
	LSX_EXT_SYS_ACCT_NUM  	VARCHAR(50),
	ACCT_DELQ_IND         	CHARACTER(1),
	ACCT_EFFECTIVE_DATE   	TIMESTAMP,
	ACCT_STATUS           	VARCHAR(40),
	LSX_ACCT_STATUS_TEXT  	VARCHAR(30),
	CREATE_USER_ID        	CHARACTER(15),
	LAST_UPDATE_USER_ID   	CHARACTER(15),
	VERIFY_USER_ID        	CHARACTER(15),
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	CHANGE_IND            	CHARACTER(1),
	CMS_LE_SUB_PROFILE_ID 	BIGINT,
	ACCOUNT_DESC_NUM      	VARCHAR(40),
	ACCOUNT_DESC_VALUE    	VARCHAR(40),
	LSX_EXT_SYS_ACCT_SEQ  	BIGINT,
	LSX_FAC_CODE          	VARCHAR(3),
	LSX_FAC_SEQ           	BIGINT,
	LSX_BCA_REF_NUM       	VARCHAR(35),
	LSX_LMT_ID            	VARCHAR(43),
	LSX_BKG_LOCTN_CTRY    	CHARACTER(2),
	LSX_BKG_LOCTN_ORG     	VARCHAR(20),
	LSX_EXT_SYS_ACCT_TYPE 	CHARACTER(1),
	ACCT_RV               	DECIMAL(20,2),
	ACCT_RV_CCY           	CHARACTER(3),
	FIRST_DISBURSEMENT_DATE	TIMESTAMP,
	FINAL_DISBURSEMENT_DATE	TIMESTAMP,
	cms_outstanding_amt decimal(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_SYS_XREF_IDX1
	ON CMS_STAGE_LSP_SYS_XREF(LSX_EXT_SYS_ACCT_NUM, LSX_EXT_SYS_ACCT_SEQ, LSX_EXT_SYS_CODE_VALUE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_LSP_SYS_XREF
	ADD CONSTRAINT STG_XREF_ID_PK
	PRIMARY KEY (CMS_LSP_SYS_XREF_ID);

CREATE TABLE CMS_STAGE_MARKETABLE_SEC ( 
	CMS_COLLATERAL_ID     	BIGINT NOT NULL,
	TOTAL_CMV             	DECIMAL(20,2),
	TOTAL_PROTOFOLIO_ITEMS	SMALLINT,
	MINIMAL_FSV           	DECIMAL(17,2),
	MINIMAL_FSV_CURRENCY  	CHARACTER(3),
	STOCK_COUNTER_CODE		VARCHAR(30),
	CAPPED_PRICE			DECIMAL(20,2),
	INTEREST_RATE			DECIMAL(11,9)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MARKETABLE_SEC
	ADD CONSTRAINT CC1169530769852
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_MF_CHECKLIST ( 
	MF_CHECKLIST_ID  	BIGINT NOT NULL,
	CMS_COLLATERAL_ID	BIGINT NOT NULL,
	MF_TEMPLATE_ID   	BIGINT NOT NULL,
	MF_TEMPLATE_NAME 	VARCHAR(150),
	LAST_UPDATE_DATE 	TIMESTAMP,
	STATUS           	VARCHAR(20),
	VERSION_TIME     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MF_CHECKLIST
	ADD CONSTRAINT ST_MF_CHECKLIST_PK
	PRIMARY KEY (MF_CHECKLIST_ID);

CREATE TABLE CMS_STAGE_MF_CHECKLIST_ITEM ( 
	MF_CHECKLIST_ITEM_ID  	BIGINT NOT NULL,
	MF_CHECKLIST_ID       	BIGINT,
	FACTOR_DESCRIPTION    	VARCHAR(250),
	WEIGHT_PERCENTAGE     	DECIMAL(5,2),
	VALUER_ASSIGNED_FACTOR	DECIMAL(9,2),
	WEIGHT_SCORE          	DECIMAL(9,2),
	MF_CHECKLIST_ITEM_REF 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MF_CHECKLIST_ITEM
	ADD CONSTRAINT ST_MFCHKLSTITEM_PK
	PRIMARY KEY (MF_CHECKLIST_ITEM_ID);

CREATE TABLE CMS_STAGE_MF_ITEM ( 
	MF_ITEM_ID        	BIGINT NOT NULL,
	MF_TEMPLATE_ID    	BIGINT,
	FACTOR_DESCRIPTION	VARCHAR(250),
	WEIGHT_PERCENTAGE 	DECIMAL(5,2),
	STATUS            	VARCHAR(10),
	MF_ITEM_REF       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MF_ITEM
	ADD CONSTRAINT ST_MF_ITEM_PK
	PRIMARY KEY (MF_ITEM_ID);

CREATE TABLE CMS_STAGE_MF_TEMPLATE ( 
	MF_TEMPLATE_ID    	BIGINT NOT NULL,
	MF_TEMPLATE_NAME  	VARCHAR(150),
	MF_TEMPLATE_STATUS	VARCHAR(20),
	SECURITY_TYPE_ID  	VARCHAR(2),
	LAST_UPDATE_DATE  	TIMESTAMP,
	STATUS            	VARCHAR(10),
	VERSION_TIME      	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MF_TEMPLATE
	ADD CONSTRAINT ST_MF_TEMPLATE_PK
	PRIMARY KEY (MF_TEMPLATE_ID);

CREATE TABLE CMS_STAGE_MF_TEMPLATE_SEC_SUBTYPE ( 
	TEMPLATE_SUBTYPE_ID 	BIGINT NOT NULL,
	MF_TEMPLATE_ID      	BIGINT NOT NULL,
	SECURITY_SUB_TYPE_ID	VARCHAR(5) NOT NULL,
	STATUS              	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MF_TEMPLATE_SEC_SUBTYPE
	ADD CONSTRAINT ST_MFSECSUBTYPE_PK
	PRIMARY KEY (TEMPLATE_SUBTYPE_ID);

CREATE TABLE CMS_STAGE_NPL ( 
	CMS_NPL_ID               	DECIMAL(20,2) NOT NULL,
	ACCOUNT_NUMBER           	VARCHAR(50),
	SOURCE_ID                	VARCHAR(10),
	NPL_LMT_ID               	VARCHAR(20),
	NPL_BCA_REF_NUM          	VARCHAR(20),
	DELINQUENT               	CHARACTER(1),
	ACCOUNT_STATUS           	VARCHAR(10),
	FACILITY_TYPE            	VARCHAR(8),
	PART_PAYMENT_RECEIVED    	DECIMAL(20,2),
	DATE_CURRENT_DOUBTFUL    	TIMESTAMP,
	DATE_FIRST_DOUBTFUL      	TIMESTAMP,
	DATE_REGULARISED         	TIMESTAMP,
	SUSPENSE_INTEREST        	DECIMAL(20,2),
	SUSPENSE_INT_WRITTEN_OFF 	DECIMAL(20,2),
	DATE_JUDGEMENT           	TIMESTAMP,
	JUDGEMENT_SUM            	DECIMAL(20,2),
	DATE_WRITE_OFF           	TIMESTAMP,
	CIVIL_SUIT_NO            	VARCHAR(40),
	MONTHS_INSTAL_ARREARS    	DECIMAL(20,2),
	MONTHS_INTEREST_ARREARS  	DECIMAL(20,2),
	DATE_DISPOSED            	TIMESTAMP,
	STATUS                   	CHARACTER(1),
	DATE_REPOSSESED          	TIMESTAMP,
	VERSION_TIME             	BIGINT,
	NET_OUTSTANDING          	DECIMAL(20,2),
	SPECIFIC_PROVISION       	DECIMAL(20,2),
	CMS_REF_ID               	BIGINT,
	SETTLED                  	CHARACTER(1),
	NPL_DATE                 	TIMESTAMP,
	FACILITY_CODE            	VARCHAR(3),
	FACILITY_SEQ             	BIGINT,
	CAR_CODE                 	VARCHAR(2),
	LATE_CHARGE_IN_SUSPENSE  	DECIMAL(15,2),
	CAR_CODE_STAT_DATE       	TIMESTAMP,
	AMT_PARTIALLY_WRITTEN_OFF	DECIMAL(15,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_NPL
	ADD CONSTRAINT PK_CMS_STAGE_NPL
	PRIMARY KEY (CMS_NPL_ID);

CREATE TABLE CMS_STAGE_OTHERS ( 
	CMS_COLLATERAL_ID      	BIGINT NOT NULL,
	ENV_RISKY_STATUS       	CHARACTER(2),
	ENV_RISKY_DATE         	TIMESTAMP,
	ENV_RISKY_REMARKS      	VARCHAR(250),
	DESCRIPTION_OTHERS     	VARCHAR(250),
	IS_PHY_INSPECT         	CHARACTER(1),
	PHY_INSPECT_FREQ       	SMALLINT,
	PHY_INSPECT_FREQ_UNIT  	CHARACTER(2),
	LAST_PHY_INSPECT_DATE  	TIMESTAMP,
	NEXT_PHY_INSPECT_DATE  	TIMESTAMP,
	MINIMAL_VALUE          	DECIMAL(20,2),
	INSURER_NAME           	VARCHAR(100),
	INSURANCE_TYPE         	VARCHAR(20),
	INSURED_AGAINST        	VARCHAR(100),
	INSURABLE_AMT          	DECIMAL(20,2),
	INSURABLE_CURRENCY_CODE	CHARACTER(3),
	INSURED_CURRENCY_CODE  	CHARACTER(3),
	INSURED_AMT            	DECIMAL(20,2),
	INS_EFFECTIVE_DATE     	TIMESTAMP,
	POLICY_NO              	VARCHAR(30),
	INS_EXPIRY_DATE        	TIMESTAMP,
	INS_IND                	VARCHAR(1),
	AT_DB_COLLATERAL_FEE   	VARCHAR(1),
	COLLATERAL_MSG         	VARCHAR(1),
	CASH_VALUE             	VARCHAR(1),
	NUMBER_OF_UNITS    		DECIMAL(15,2)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_OTHERS
	ADD CONSTRAINT CC1169530799855
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE CMS_STAGE_PCH_SALE ( 
	PURCHASE_SALES_ID  	BIGINT NOT NULL,
	CMS_REF_ID         	BIGINT NOT NULL,
	DEAL_ID            	BIGINT,
	PCH_SHIP_DATE      	TIMESTAMP,
	PCH_EXPIRY_DATE    	TIMESTAMP,
	PCH_SHIP_SRC       	VARCHAR(150),
	PCH_SHIP_DEST      	VARCHAR(150),
	PCH_TRANSPT_DOC_NO 	VARCHAR(150),
	PCH_PAYMTMODE_DESC 	VARCHAR(150),
	PCH_BANK_NAME      	VARCHAR(150),
	PCH_IS_CLAIM_ALLOW 	CHARACTER(1),
	PCH_CLAIM_DAY_QTY  	SMALLINT,
	PCH_REF_NO         	VARCHAR(150),
	SALE_UNIT_PRICE    	DECIMAL(21,6),
	SALE_UNIT_PRICE_CCY	CHARACTER(3),
	SALE_SHIP_DATE     	TIMESTAMP,
	SALE_EXPIRY_DATE   	TIMESTAMP,
	SALE_SHIP_SRC      	VARCHAR(150),
	SALE_SHIP_DEST     	VARCHAR(150),
	SALE_TRANSPT_DOC_NO	VARCHAR(150),
	SALE_PAYMTMODE_DESC	VARCHAR(150),
	SALE_BANK_NAME     	VARCHAR(150),
	SALE_IS_CLAIM_ALLOW	CHARACTER(1),
	SALE_CLAIM_DAY_QTY 	SMALLINT,
	SALE_REF_NO        	VARCHAR(150),
	SALE_REMK          	VARCHAR(250),
	PCH_REMK           	VARCHAR(250),
	BUYER_ID           	BIGINT,
	SUPPLIER_ID        	BIGINT,
	OTHER_BUYER_NAME   	VARCHAR(150),
	OTHER_SUPPLIER_NAME	VARCHAR(150),
	SALE_QTY_UOM_ID    	VARCHAR(20),
	STATUS             	VARCHAR(20),
	SALE_QTY           	DECIMAL(19,4),
	PCH_UNIT_PRICE     	DECIMAL(21,6),
	PCH_UNIT_PRICE_CCY 	CHARACTER(3),
	PCH_QTY            	DECIMAL(19,4),
	PCH_QTY_UOM_ID     	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_PCH_SAL_I1
	ON CMS_STAGE_PCH_SALE(BUYER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_PCH_SAL_I3
	ON CMS_STAGE_PCH_SALE(SUPPLIER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_PCH_SAL_I2
	ON CMS_STAGE_PCH_SALE(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_PCH_SALE
	ADD CONSTRAINT CC1169530956501
	PRIMARY KEY (PURCHASE_SALES_ID);

CREATE TABLE CMS_STAGE_POLICY_CAP ( 
	POLICY_CAP_ID              	BIGINT NOT NULL,
	BOARD                      	VARCHAR(65),
	MAX_TRADE_CAP_NON_FI       	DECIMAL(4,1),
	MAX_COLLATERAL_CAP_NON_FI  	DECIMAL(4,1),
	QUOTA_COLLATERAL_CAP_NON_FI	DECIMAL(4,1),
	MAX_COLLATERAL_CAP_FI      	DECIMAL(4,1),
	QUOTA_COLLATERAL_CAP_FI    	DECIMAL(4,1),
	LIQUID_MOA                 	DECIMAL(4,1),
	ILLIQUID_MOA               	DECIMAL(4,1),
	CURRENCY                   	VARCHAR(3),
	MAX_CAP_PRICE              	DECIMAL(7,2),
	GROUP_ID                   	BIGINT,
	CMS_REF_ID                 	BIGINT,
	VERSION_TIME               	BIGINT,
	POLICY_CAP_GROUP_ID        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_POLICY_CAP
	ADD CONSTRAINT CRP_STG_PC_ID_PK
	PRIMARY KEY (POLICY_CAP_ID);

CREATE TABLE CMS_STAGE_POLICY_CAP_GROUP ( 
	POLICY_CAP_GROUP_ID	BIGINT NOT NULL,
	STOCK_EXCHANGE     	VARCHAR(10),
	BANK_ENTITY        	VARCHAR(40),
	VERSION_TIME       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_POLICY_CAP_GROUP
	ADD CONSTRAINT PSCG_PK
	PRIMARY KEY (POLICY_CAP_GROUP_ID);

CREATE TABLE CMS_STAGE_PORTFOLIO_ITEM ( 
	ITEM_ID                  	BIGINT NOT NULL,
	TYPE                     	VARCHAR(20),
	CERTIFICATE_NO           	VARCHAR(20),
	REGISTERED_NAME          	VARCHAR(120),
	ISSUER_NAME              	VARCHAR(120),
	NO_OF_UNITS              	BIGINT,
	NOMINAL_VALUE            	DECIMAL(20,2),
	AGENT_NAME               	VARCHAR(120),
	AGENT_CONFIRM_DATE       	TIMESTAMP,
	BOND_ISSUE_DATE          	TIMESTAMP,
	BOND_MATURITY_DATE       	TIMESTAMP,
	CURRENCY_CODE            	CHARACTER(3),
	CMS_COLLATERAL_ID        	BIGINT,
	IS_BLACKLISTED           	CHARACTER(1),
	SETTLEMENT_ORG           	VARCHAR(50),
	ISSUER_ID_TYPE           	VARCHAR(30),
	STOCK_EXCHANGE           	VARCHAR(50),
	STOCK_EXCHANGE_COUNTRY   	CHARACTER(2),
	INDEX_NAME               	VARCHAR(100),
	RIC                      	VARCHAR(30),
	BASEL_COMPLIANT_TEXT     	VARCHAR(50),
	CMV                      	DECIMAL(20,2),
	FSV                      	DECIMAL(20,2),
	CMV_CURRENCY             	CHARACTER(3),
	FSV_CURRENCY             	CHARACTER(3),
	LOCAL_EXCHANGE           	VARCHAR(10),
	GOVT_GUARANTEE           	CHARACTER(1),
	NAME_OF_GOVT             	VARCHAR(100),
	LEAD_MANAGER             	VARCHAR(100),
	EXCHANGE_CONTROL_OBTAINED	CHARACTER(1),
	SECURITY_CUSTODIAN       	VARCHAR(100),
	SECURITY_MATURITY_DATE   	TIMESTAMP,
	CMS_REF_ID               	BIGINT,
	UNIT_PRICE               	DECIMAL(21,6),
	UNIT_PRICE_CURRENCY      	CHARACTER(3),
	STATUS                   	VARCHAR(10),
	CUSTODIAN_TYPE           	CHARACTER(1),
	BOND_RATING              	VARCHAR(20),
	COUNTER_CODE             	VARCHAR(20),
	STOCK_CODE               	VARCHAR(30),
	ISIN_CODE                	VARCHAR(30),
	RECOVERY_DATE            	TIMESTAMP,
	HOLDING_PERIOD           	DECIMAL(9,3),
	HOLDING_PERIOD_UOM       	VARCHAR(10),
	RECOGNIZED_EXCHANGE_FLAG 	CHARACTER(1),
	SOURCE_ID                	VARCHAR(10),
	CLIENT_CODE					VARCHAR(30),
	CDS_NUMBER					VARCHAR(50),
	EXERCISE_PRICE				DECIMAL(20,4),
	BROKER_NAME					VARCHAR(120),
	EXCHANGE_CONTROL_DATE		TIMESTAMP,
	RECOGN_EXCHANGE          	VARCHAR(20), 
	IS_LEGAL_ENFORCE_DATE		TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_PORT_IT_I1
	ON CMS_STAGE_PORTFOLIO_ITEM(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_PORTFOLIO_ITEM
	ADD CONSTRAINT CC1169530973205
	PRIMARY KEY (ITEM_ID);

CREATE TABLE CMS_STAGE_PRECOND ( 
	PRECOND_ID            	BIGINT NOT NULL,
	PRECOND               	VARCHAR(1100),
	UPDATE_DATE           	TIMESTAMP,
	UPDATE_USER_ID        	BIGINT,
	UPDATE_USER_INFO      	VARCHAR(100),
	CMS_LSP_LMT_PROFILE_ID	BIGINT,
	CMS_COLLATERAL_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_PRECOND
	ADD CONSTRAINT CC1169530992292
	PRIMARY KEY (PRECOND_ID);

CREATE TABLE CMS_STAGE_PRICE_FEED ( 
	FEED_ID                     	BIGINT NOT NULL,
	RIC                         	VARCHAR(30),
	TYPE                        	VARCHAR(20),
	COUNTRY                     	CHARACTER(2),
	EXCHANGE                    	VARCHAR(40),
	UNIT_PRICE                  	DECIMAL(21,6),
	CURRENCY                    	CHARACTER(3),
	ISIN_CODE                   	VARCHAR(30),
	NAME                        	VARCHAR(100),
	IS_BLACKLISTED              	CHARACTER(1),
	IS_SUSPENDED                	CHARACTER(1),
	FUND_MANAGER_NAME           	VARCHAR(50),
	LAST_UPDATED_DATE           	TIMESTAMP,
	LAST_UPDATED_BY             	VARCHAR(20),
	TOTAL_OUTSTANDING_UNIT      	BIGINT,
	FEED_GROUP_ID               	BIGINT,
	CMS_VERSION_TIME            	DOUBLE NOT NULL DEFAULT 0,
	OFFER                       	DECIMAL(17,2),
	TICKER                      	VARCHAR(20),
	FUND_MANAGER_CODE           	VARCHAR(20),
	PRODUCT_CODE                	VARCHAR(20),
	MATURITY_DATE               	TIMESTAMP,
	FEED_REF                    	BIGINT NOT NULL,
	RATING                      	VARCHAR(20),
	EFFECTIVE_DATE_ISSUE_RATING 	TIMESTAMP,
	ISSUE_RATING_AGENCY         	VARCHAR(20),
	EXPECTED_TREND_ISSUE_RATING 	VARCHAR(100),
	DESCRPTION_ISSUE_RATING     	VARCHAR(150),
	ISSUER_RATING               	VARCHAR(20),
	EFFECTIVE_DATE_ISSUER_RATING	TIMESTAMP,
	ISSUER_RATING_AGENCY        	VARCHAR(20),
	EXPECTED_TREND_ISSUER_RATING	VARCHAR(100),
	DESCRPTION_ISSUER_RATING    	VARCHAR(150),
	PREV_DAY_PRICE              	DECIMAL(21,6),
	PREV_QUARTER_PRICE          	DECIMAL(21,6),
	EXPIRY_DATE                 	TIMESTAMP,
	FUND_CODE                   	VARCHAR(30),
	PAR_VALUE                   	DECIMAL(20,2),
	PAID_UP_CAPITAL             	DECIMAL(20,2),
	SHARE_STATUS                	VARCHAR(1),
	BOARD_TYPE                  	VARCHAR(10),
	IS_FI                       	CHARACTER(1),
	FUND_SIZE    					BIGINT,
	FUND_SIZE_UPDATE_DATE    		TIMESTAMP,
	DATE_LAUNCHED    				TIMESTAMP
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_PRI_FED_I1
	ON CMS_STAGE_PRICE_FEED(FEED_GROUP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_PRICE_FEED
	ADD CONSTRAINT CC1169531012090
	PRIMARY KEY (FEED_ID);

CREATE TABLE CMS_STAGE_PROPERTY ( 
	CMS_COLLATERAL_ID             	BIGINT NOT NULL,
	ENV_RISKY_STATUS              	CHARACTER(2),
	ENV_RISKY_DATE                	TIMESTAMP,
	IS_PHY_INSPECT                	CHARACTER(1),
	ENV_RISKY_REMARKS             	VARCHAR(250),
	PHY_INSPECT_FREQ              	SMALLINT,
	LAST_PHY_INSPECT_DATE         	TIMESTAMP,
	NEXT_PHY_INSPECT_DATE         	TIMESTAMP,
	TITLE_TYPE                    	VARCHAR(15),
	TITLE_NUMBER                  	VARCHAR(100),
	TITLE_NUMBER_PREFIX             VARCHAR(10),
	LOT_NO                        	VARCHAR(50),
	LOT_NUMBER_PREFIX               VARCHAR(15),
	TOWN                          	VARCHAR(40),
	LOT_LOCATION                  	VARCHAR(120),
	POSTCODE                      	VARCHAR(15),
	LAND_AREA                     	DECIMAL(26,8),
	LAND_AREA_UOM                 	VARCHAR(10),
	TENURE                        	BIGINT,
	TENURE_UNIT                   	CHARACTER(2),
	REMAINING_TENURE              	BIGINT,
	REMAIN_TENURE_UNIT            	CHARACTER(2),
	RESTRICT_CONDITION            	VARCHAR(250),
	QUIT_RENT_PAID                	DECIMAL(20,2),
	DESCRIPTION_ASSET             	VARCHAR(250),
	BUILTUP_AREA                  	DECIMAL(19,6),
	BUILTUP_AREA_UOM              	VARCHAR(10),
	INSURER_NAME                  	VARCHAR(100),
	INSURANCE_TYPE                	VARCHAR(20),
	INSURED_AGAINST               	VARCHAR(100),
	INSURABLE_AMT                 	DECIMAL(20,2),
	INSURABLE_CURRENCY_CODE       	CHARACTER(3),
	INSURED_CURRENCY_CODE         	CHARACTER(3),
	INSURED_AMT                   	DECIMAL(20,2),
	INS_EFFECTIVE_DATE            	TIMESTAMP,
	POLICY_NO                     	VARCHAR(30),
	INS_EXPIRY_DATE               	TIMESTAMP,
	SALE_PURCHASE_VALUE           	DECIMAL(20,2),
	NOMINAL_VALUE                 	DECIMAL(20,2),
	PHY_INSPECT_FREQ_UNIT         	CHARACTER(2),
	REMARKS_PROPERTY              	VARCHAR(250),
	STD_QUIT_RENT                 	CHARACTER(1) NOT NULL DEFAULT 'N',
	NON_STD_QUIT_RENT             	CHARACTER(1) NOT NULL DEFAULT 'N',
	QUIT_RENT_RECEIPT             	CHARACTER(1) NOT NULL DEFAULT 'N',
	REGISTERED_HOLDER             	VARCHAR(250),
	PROPERTY_ADDRESS              	VARCHAR(40),
	DEVELOPER_GROUP_COMPANY       	VARCHAR(40),
	TAMAN                         	VARCHAR(50),
	ASSESSMENT                    	CHARACTER(1),
	TOOLTIPS_LAND                 	VARCHAR(40),
	TOOLTIPS_BUILTAREA            	VARCHAR(40),
	MF_SCORE                      	DECIMAL(9,2),
	SALE_PURCHASE_DATE            	TIMESTAMP,
	MASTER_TITLE                  	VARCHAR(1),
	MASTER_TITLE_NUMBER           	VARCHAR(20),
	INSURANCE                     	VARCHAR(1),
	AUTO_DEBIT                    	VARCHAR(1),
	LAND_VALUE                    	DECIMAL(15,2),
	BUILDING_VALUE                	DECIMAL(15,2),
	USER_INPUT                    	DECIMAL(9,2),
	EXPRESSED_CONDITION           	VARCHAR(250),
	MUKIM                         	VARCHAR(40),
	DISTRICT                      	VARCHAR(40),
	STATE                         	VARCHAR(40),
	REAL_ESTATE_USAGE             	VARCHAR(40),
	REAL_ESTATE_WITH_RENTAL_FLAG  	CHARACTER(1),
	PROPERTY_USAGE                	VARCHAR(40),
	PROPERTY_COMPLETION_STATUS    	CHARACTER(1),
	DEVELOPER_NAME                	VARCHAR(150),
	ABANDONED_PROJECT             	CHARACTER(1),
	REDUCED_RISK_WEIGHT_FLAG      	CHARACTER(1),
	PROPERTY_COMPLETED_FLAG       	CHARACTER(1),
	PROPERTY_WELL_DEVELOPED_FLAG  	CHARACTER(1),
	LONG_ESTABLISHED_MARKET_FLAG  	VARCHAR(150),
	METHODOLOGY_FOR_VALUATION_FLAG	CHARACTER(1),
	INDEPENDENT_VALUER_FLAG       	CHARACTER(1),
	CATEGORY_OF_LAND_USE          	VARCHAR(40),
	PROPERTY_TYPE                 	VARCHAR(40),
	PHASE_NO                      	VARCHAR(20),
	PROJECT_NAME                  	VARCHAR(40),
	BREACH_IND                    	CHARACTER(1),
	COMBINED_VALUE_IND            	VARCHAR(3),
	UNIT_PARCEL_NO                	VARCHAR(10),
	COMBINED_VALUE_AMT            	DECIMAL(17,2),
	VALUE_NUMBER                  	DECIMAL(17,0),
	CHATTEL_SOLD_DATE    			TIMESTAMP,
	NEXT_QUIT_RENT_DATE    			TIMESTAMP,
	QUIT_RENT_PAYMENT_DATE    		TIMESTAMP,
    ASSESSMENT_RATE    				DECIMAL(15,2),
    ASSESSMENT_PERIOD    			SMALLINT,
    ASSESSMENT_PAYMENT_DATE    		TIMESTAMP,
    ASSESSMENT_OPTION    			VARCHAR(40),  
    AUCTION_PRICE    				DECIMAL(15,2),
    AUCTION_DATE    				TIMESTAMP,
    PRI_CAVEAT_GUARANTEE_DATE    	TIMESTAMP,
    NON_PREFERRED_LOCATION    		VARCHAR(40),
    COMMISSION_TYPE    				VARCHAR(40),
    PROPERTY_COMPLETION_STAGE    	VARCHAR(40),
    ASSUMPTION    					CHARACTER(1),
    AMOUNT_REDEEM    				DECIMAL(15,2),
    UNIT_PRICE    					DECIMAL(15,2),
    PROPERTY_ADDRESS_2    			VARCHAR(40),
    PROPERTY_ADDRESS_3    			VARCHAR(40),
	SCHEDULED_LOCATION            	VARCHAR(60),
	AUCTIONEER 						varchar(80),
	SECTION_NO 						varchar(50),
	STOREY_NUMBER 					varchar(40)	
	) IN CMS_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_PROPERTY
	ADD CONSTRAINT PKCMS_STAGE_PROP
	PRIMARY KEY (CMS_COLLATERAL_ID);


CREATE TABLE CMS_STAGE_PROPERTY_PARAMETERS ( 
	PARAMETER_ID           	BIGINT NOT NULL,
	PROPERTY_TYPE          	VARCHAR(20),
	COLLATERAL_SUBTYPE     	VARCHAR(100),
	COUNTRY_CODE           	VARCHAR(20),
	STATE_CODE             	VARCHAR(1000),
	DISTRICT_CODE          	VARCHAR(1000),
	MUKIM_CODE             	VARCHAR(20000),
	POST_CODE              	VARCHAR(20),
	LAND_AREA_VALUE_FROM   	DECIMAL(20,0),
	LAND_AREA_UNIT_FROM    	VARCHAR(20),
	LAND_AREA_VALUE_TO     	DECIMAL(20,0),
	LAND_AREA_UNIT_TO      	VARCHAR(20),
	BUILDUP_AREA_VALUE_FROM	DECIMAL(20,0),
	BUILDUP_AREA_UNIT_FROM 	VARCHAR(20),
	BUILDUP_AREA_VALUE_TO  	DECIMAL(20,0),
	BUILDUP_AREA_UNIT_TO   	VARCHAR(20),
	MINIMUM_CURRENT_OMV    	DECIMAL(20,2),
	OMV_TYPE               	VARCHAR(20),
	VARIATION_OMV          	VARCHAR(20),
	VALUATION_DESCRIPTION  	VARCHAR(250),
	VERSION_TIME           	BIGINT 
	) IN CMS_LARGE_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_PROPERTY_PARAMETERS
	ADD CONSTRAINT SQL080609120049310
	PRIMARY KEY (PARAMETER_ID);

CREATE TABLE CMS_STAGE_RCPT_RELEASE ( 
	RELEASE_ID        	BIGINT NOT NULL,
	DEAL_ID           	BIGINT,
	RELEASE_DATE      	TIMESTAMP NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	STATUS            	VARCHAR(20),
	RELEASE_QTY       	DECIMAL(20,0),
	RELEASE_QTY_UOM_ID	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_RCP_REL_I1
	ON CMS_STAGE_RCPT_RELEASE(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_RCPT_RELEASE
	ADD CONSTRAINT CMS_SRR_PK_RI
	PRIMARY KEY (RELEASE_ID);

CREATE TABLE CMS_STAGE_SEC_APPORTIONMENT ( 
	SEC_APPORTIONMENT_ID   	BIGINT NOT NULL,
	PRIORITY_RANKING       	SMALLINT NOT NULL,
	PRIORITY_RANKING_AMOUNT	DECIMAL(20,2) NOT NULL,
	CMS_LSP_APPR_LMTS_ID   	BIGINT,
	CMS_COLLATERAL_ID      	BIGINT,
	PERC_AMT_IND           	CHARACTER(1) NOT NULL,
	BY_ABSOLUTE_AMT        	DECIMAL(20,2),
	BY_PERCENTAGE          	DECIMAL(5,2),
	MIN_PERC_AMT_IND       	CHARACTER(1) NOT NULL,
	MIN_AMT                	DECIMAL(20,2),
	MIN_PERCENTAGE         	DECIMAL(5,2),
	MAX_PERC_AMT_IND       	CHARACTER(1) NOT NULL,
	MAX_AMT                	DECIMAL(20,2),
	MAX_PERCENTAGE         	DECIMAL(5,2),
	CMS_REF_ID             	BIGINT,
	APPORTION_AMT          	DECIMAL(20,2) DEFAULT 0,
	CHARGE_DETAIL_ID       	BIGINT NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SEC_APPORTIONMENT
	ADD CONSTRAINT PKCMS_STG_SEC_APPT
	PRIMARY KEY (SEC_APPORTIONMENT_ID);

CREATE TABLE CMS_STAGE_SEC_LIQUIDATION ( 
	LIQUIDATION_ID   	BIGINT NOT NULL,
	CMS_COLLATERAL_ID	BIGINT,
	CMS_SECURITY_ID  	BIGINT,
	SECURITY_TYPE    	VARCHAR(20),
	VERSION_TIME     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SEC_LIQUIDATION
	ADD CONSTRAINT S20070925
	PRIMARY KEY (LIQUIDATION_ID);

CREATE TABLE CMS_STAGE_SEC_RECOVERY ( 
	RECOVERY_ID   	BIGINT NOT NULL,
	LIQUIDATION_ID	BIGINT,
	RECOVERY_TYPE 	VARCHAR(10),
	REMARKS       	VARCHAR(250),
	STATUS        	CHARACTER(1),
	VERSION_TIME  	BIGINT,
	CMS_REF_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SEC_RECOVERY
	ADD CONSTRAINT STG_RECOVERY_PK
	PRIMARY KEY (RECOVERY_ID);

CREATE TABLE CMS_STAGE_SEC_RECOVERY_EXPENSE ( 
	RECOVERY_EXPENSE_ID	BIGINT NOT NULL,
	LIQUIDATION_ID     	BIGINT,
	EXPENSE_TYPE       	VARCHAR(10),
	DATE_OF_EXPENSE    	TIMESTAMP,
	EXPENSE_AMT        	DECIMAL(20,2),
	EXPENSE_AMT_CURR   	VARCHAR(3),
	REMARKS            	VARCHAR(250),
	STATUS             	CHARACTER(1),
	VERSION_TIME       	BIGINT,
	CMS_REF_ID         	BIGINT,
	SETTLED            	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SEC_RECOVERY_EXPENSE
	ADD CONSTRAINT STG_RECOV_EXP_PK
	PRIMARY KEY (RECOVERY_EXPENSE_ID);

CREATE TABLE CMS_STAGE_SEC_RECOVERY_INCOME ( 
	RECOVERY_INCOME_ID    	BIGINT NOT NULL,
	RECOVERY_ID           	BIGINT,
	RECOVERY_DATE         	DATE,
	TOTAL_AMT_RECOVER     	DECIMAL(20,2),
	TOTAL_AMT_RECOVER_CURR	VARCHAR(3),
	REMARKS               	VARCHAR(250),
	STATUS                	CHARACTER(1),
	VERSION_TIME          	BIGINT,
	CMS_REF_ID            	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SEC_RECOVERY_INCOME
	ADD CONSTRAINT STG_RECOV_INC_PK
	PRIMARY KEY (RECOVERY_INCOME_ID);

CREATE TABLE CMS_STAGE_SECURITY ( 
	CMS_COLLATERAL_ID         	BIGINT NOT NULL,
	SECURITY_SUB_TYPE_ID      	VARCHAR(30),
	SUBTYPE_NAME              	VARCHAR(100),
	TYPE_NAME                 	VARCHAR(40),
	SECURITY_LOCATION         	VARCHAR(20),
	FSV_CURRENCY              	CHARACTER(3),
	FSV                       	DECIMAL(20,2),
	CMV_CURRENCY              	CHARACTER(3),
	CMV                       	DECIMAL(20,2),
	LE_CHARGE                 	CHARACTER(1),
	LE_CHARGE_DATE            	TIMESTAMP,
	LAST_VALUATION_DATE       	TIMESTAMP,
	LAST_VALUATION_BY         	VARCHAR(20),
	LE_JURIDICT               	CHARACTER(1),
	LE_JURIDICT_DATE          	TIMESTAMP,
	LE_GOVRNLAW               	CHARACTER(1),
	LE_GOVRNLAW_DATE          	TIMESTAMP,
	PARI_PASSU                	CHARACTER(1),
	SECURITY_CUSTODIAN        	VARCHAR(100),
	SECURITY_MATURITY_DATE    	TIMESTAMP,
	EXCHANGE_CONTROL_OBTAINED 	CHARACTER(1),
	MARGIN                    	DECIMAL(5,2),
	IS_SECURITY_PERFECTED     	CHARACTER(1),
	SCI_REFERENCE_NOTE        	VARCHAR(100),
	SECURITY_PERFECTION_DATE  	TIMESTAMP,
	SCI_SECURITY_DTL_ID       	VARCHAR(50),
	LOS_SECURITY_DTL_ID       	VARCHAR(50),
	SCI_SEC_SYS_GEN_ID        	BIGINT,
	SCI_SECURITY_SUBTYPE_VALUE	VARCHAR(10),
	SCI_SECURITY_TYPE_VALUE   	VARCHAR(10),
	SCI_SECURITY_FSV          	DECIMAL(20,2),
	SCI_SECURITY_CURRENCY     	CHARACTER(3),
	SCI_SECURITY_FSV_DATE     	TIMESTAMP,
	STATUS                    	VARCHAR(20),
	VERSION_TIME              	BIGINT,
	SCI_SECURITY_BKG_LOCTN_ID 	BIGINT,
	FSV_BALANCE               	DECIMAL(20,2),
	SCI_ORIG_SECURITY_CURRENCY	CHARACTER(3),
	FSV_BALANCE_CCY           	CHARACTER(3),
	CUSTODIAN_TYPE            	CHARACTER(1),
	SECURITY_ORGANISATION     	VARCHAR(20),
	IS_LEGAL_ENFORCE          	CHARACTER(1),
	IS_LEGAL_ENFORCE_DATE     	TIMESTAMP,
	GEN_CHARGE_SURPLUS        	DECIMAL(20,2),
	SOURCE_SECURITY_SUB_TYPE  	VARCHAR(3),
	REMARGIN                  	CHARACTER(1),
	LAST_REMARGIN_DATE        	TIMESTAMP,
	NEXT_REMARGIN_DATE        	TIMESTAMP,
    VALUATION_TYPE              VARCHAR(10),
    VALUER                      VARCHAR(100),
	RISK_MITIGATION_CATEGORY  	VARCHAR(40),
	EXT_SENIOR_LIEN           	CHARACTER(1),
	NET_REALIZABLE_VALUE      	DECIMAL(30,2),
	SOURCE_SECURITY_TYPE      	VARCHAR(10),
	CREATE_DATE               	TIMESTAMP,
	DELETED_DATE              	TIMESTAMP,
	SOURCE_ID                 	VARCHAR(10),
	EXCHANGE_CONTROL_DATE		TIMESTAMP,
	BORROWER_DEPENDENCY			CHARACTER(1),
	COLLATERAL_STATUS    		CHARACTER(1),
	IS_CGC_PLEDGED    			CHARACTER(1),
	COMMENT                   	VARCHAR(1000),
	PLEDGE_AMOUNT_USAGE_IND		CHARACTER(1),
	DRAW_AMOUNT_USAGE_IND		CHARACTER(1),
    RESERVE_PRICE               DECIMAL(30,2),
	RESERVE_PRICE_DATE          TIMESTAMP,
	TO_BE_DISCHARGED_IND		VARCHAR(1)
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_SEC_I1
	ON CMS_STAGE_SECURITY(SCI_SECURITY_DTL_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_SECURITY
	ADD CONSTRAINT PK_CMS_STAGE_SEC
	PRIMARY KEY (CMS_COLLATERAL_ID);


CREATE TABLE CMS_STAGE_SECURITY_ASSET_LIFE ( 
	SECURITY_SUB_TYPE_ID 	VARCHAR(30) NOT NULL,
	LIFESPAN             	DECIMAL(5,0),
	GROUP_ID             	BIGINT NOT NULL,
	SECURITY_SUB_TYPE_SEQ	BIGINT NOT NULL,
	VERSION_TIME         	BIGINT,
	STATUS               	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SECURITY_ASSET_LIFE
	ADD CONSTRAINT AL_SUBTYPE_SEQ_PK
	PRIMARY KEY (SECURITY_SUB_TYPE_SEQ);

CREATE TABLE CMS_STAGE_SECURITY_PARAMETER ( 
	ID                      	BIGINT NOT NULL,
	COUNTRY_ISO_CODE        	CHARACTER(2),
	SECURITY_SUB_TYPE_ID    	VARCHAR(30),
	THRESHOLD_PERCENT       	DECIMAL(5,2),
	VALUATION_FREQUENCY_UNIT	VARCHAR(20),
	VALUATION_FREQUENCY     	BIGINT,
	GROUP_ID                	BIGINT NOT NULL,
	VERSION_TIME            	BIGINT,
	STATUS                  	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SECURITY_PARAMETER
	ADD CONSTRAINT PK_CMS_STG_SEC_PRM
	PRIMARY KEY (ID);

CREATE TABLE CMS_STAGE_SECURITY_SOURCE ( 
	CMS_COLLATERAL_ID  	BIGINT NOT NULL,
	SCI_SECURITY_DTL_ID	VARCHAR(50) NOT NULL,
	SOURCE_ID          	VARCHAR(10) NOT NULL,
	VERSION_TIME       	BIGINT,
	STATUS             	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SECURITY_SOURCE
	ADD CONSTRAINT SQL080609120050780
	PRIMARY KEY (SCI_SECURITY_DTL_ID, SOURCE_ID);

CREATE TABLE CMS_STAGE_SECURITY_SUB_TYPE ( 
	SECURITY_SUB_TYPE_ID         	VARCHAR(30) NOT NULL,
	SUBTYPE_NAME                 	VARCHAR(100),
	SUBTYPE_DESCRIPTION          	VARCHAR(200),
	SECURITY_TYPE_ID             	VARCHAR(20),
	SECURITY_TYPE_NAME           	VARCHAR(60),
	MAX_PERCENT                  	DECIMAL(5,2),
	GROUP_ID                     	BIGINT NOT NULL,
	SECURITY_SUB_TYPE_SEQ        	BIGINT NOT NULL,
	VERSION_TIME                 	BIGINT,
	STATUS                       	VARCHAR(20),
	SUBTYPE_STANDARDISED_APPROACH	CHARACTER(1),
	SUBTYPE_FOUNDATION_IRB       	CHARACTER(1),
	SUBTYPE_ADVANCED_IRB         	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_SECURITY_SUB_TYPE
	ADD CONSTRAINT PK_STG_SEC_SUBTYPE
	PRIMARY KEY (SECURITY_SUB_TYPE_SEQ);

CREATE TABLE CMS_STAGE_SETTLEMENT ( 
	SETTLEMENT_ID	BIGINT NOT NULL,
	DEAL_ID      	BIGINT,
	PAYMENT_DATE 	TIMESTAMP NOT NULL,
	PAYMENT_CCY  	CHARACTER(3) NOT NULL,
	STATUS       	VARCHAR(20),
	CMS_REF_ID   	BIGINT NOT NULL,
	PAYMENT_AMT  	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_STL_I1
	ON CMS_STAGE_SETTLEMENT(DEAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_SETTLEMENT
	ADD CONSTRAINT CMS_SST_PK_SI
	PRIMARY KEY (SETTLEMENT_ID);

CREATE TABLE CMS_STAGE_STTLMT_RCPT_MAP ( 
	SETTLMT_WHRCPT_ID 	BIGINT NOT NULL,
	WAREHSE_RCPT_ID   	BIGINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	STATUS            	VARCHAR(20),
	RELEASE_QTY       	BIGINT,
	RELEASE_QTY_UOM_ID	VARCHAR(40),
	RELEASE_ID        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_STL_RCP_I1
	ON CMS_STAGE_STTLMT_RCPT_MAP(WAREHSE_RCPT_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_STTLMT_RCPT_MAP
	ADD CONSTRAINT CMS_SSR_PK_SI
	PRIMARY KEY (SETTLMT_WHRCPT_ID);

CREATE TABLE CMS_STAGE_TB_DEAL ( 
	CMS_DEAL_ID      	BIGINT NOT NULL,
	AGREEMENT_ID     	BIGINT NOT NULL,
	AGREEMENT_TYPE   	VARCHAR(40),
	DEAL_ID          	VARCHAR(40),
	PRODUCT_TYPE     	VARCHAR(40),
	MATURITY_DATE    	TIMESTAMP,
	VALUE_DATE       	TIMESTAMP,
	TRADE_DATE       	TIMESTAMP,
	NOTIONAL_CURRENCY	CHARACTER(3),
	NOTIONAL         	DECIMAL(21,6),
	NPV_CURRENCY     	CHARACTER(3),
	NPV              	DECIMAL(21,6),
	NPV_BASE_CURRENCY	CHARACTER(3),
	NPV_BASE         	DECIMAL(21,6),
	DEAL_CURRENCY    	CHARACTER(3),
	DEAL_AMOUNT      	DECIMAL(21,6),
	NEAR_AMOUNT      	DECIMAL(21,6),
	FAR_AMOUNT       	DECIMAL(21,6),
	SEC_DESC         	VARCHAR(100),
	ISIN_CODE        	VARCHAR(20),
	CUSIP_CODE       	VARCHAR(20),
	HAIRCUT          	DECIMAL(21,6),
	DEAL_RATE        	DECIMAL(21,6),
	DEAL_COUNTRY     	CHARACTER(2),
	DEAL_BRANCH      	VARCHAR(40),
	STATUS           	VARCHAR(20),
	VERSION_TIME     	BIGINT,
	REPO_START_AMOUNT	DECIMAL(21,6),
	REPO_END_AMOUNT  	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_TB_DEAL
	ADD CONSTRAINT TB_DEAL_ST_PK
	PRIMARY KEY (CMS_DEAL_ID);

CREATE TABLE CMS_STAGE_TB_DEAL_VAL ( 
	CMS_DEAL_VAL_ID      	BIGINT NOT NULL,
	CMS_DEAL_ID          	BIGINT NOT NULL,
	MARKET_VALUE_CURRENCY	CHARACTER(3),
	MARKET_VALUE         	DECIMAL(21,6),
	GROUP_ID             	BIGINT NOT NULL,
	STATUS               	VARCHAR(20),
	VERSION_TIME         	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_TB_DEAL_VAL
	ADD CONSTRAINT TB_DEAL_VAL_ST_PK
	PRIMARY KEY (CMS_DEAL_VAL_ID);

CREATE TABLE CMS_STAGE_THRESHOLD_RATING ( 
	RATING_ID         	BIGINT NOT NULL,
	AGREEMENT_ID      	BIGINT NOT NULL,
	RATING_TYPE       	VARCHAR(40),
	RATING            	VARCHAR(40),
	THRESHOLD_CURRENCY	CHARACTER(3),
	THRESHOLD_AMT     	DECIMAL(21,6),
	STATUS            	VARCHAR(20),
	VERSION_TIME      	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_THRESHOLD_RATING
	ADD CONSTRAINT THRES_RATE_ST_PK
	PRIMARY KEY (RATING_ID);

CREATE TABLE CMS_STAGE_TITLE_DOC ( 
	TITLE_DOC_ID       	BIGINT NOT NULL,
	TITLEDOC_TYPE_ID   	BIGINT NOT NULL,
	DEAL_PROC_STG      	CHARACTER(1) NOT NULL,
	ELIGIBILITY_ADV_PCT	SMALLINT NOT NULL,
	CMS_REF_ID         	BIGINT NOT NULL,
	DEAL_ID            	BIGINT,
	TRX_DATE           	TIMESTAMP,
	IS_SECURED         	CHARACTER(1),
	BILL_LADING_NO     	VARCHAR(150),
	BL_ISSUE_DATE      	TIMESTAMP,
	BL_SHPG_CO_NAME    	VARCHAR(150),
	BL_REMK            	VARCHAR(250),
	TRUST_RCPT_NO      	VARCHAR(150),
	TR_ISSUE_DATE      	TIMESTAMP,
	TR_BILL_LADING_NO  	VARCHAR(150),
	TR_CCY             	CHARACTER(3),
	TR_MATURITY_DATE   	TIMESTAMP,
	TR_REMK            	VARCHAR(250),
	OTHER_DOC_NO       	VARCHAR(150),
	OTHER_DOC_DESC     	VARCHAR(150),
	OTHER_DOC_ISS_DATE 	TIMESTAMP,
	OTHER_DOC_DUE_DATE 	TIMESTAMP,
	OTHER_DOC_REMK     	VARCHAR(250),
	STATUS             	VARCHAR(20),
	TR_AMT             	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_TTL_DOC_I1
	ON CMS_STAGE_TITLE_DOC(DEAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_TTL_DOC_I2
	ON CMS_STAGE_TITLE_DOC(TITLEDOC_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_TITLE_DOC
	ADD CONSTRAINT CMS_STD_PK_DI
	PRIMARY KEY (TITLE_DOC_ID);

CREATE TABLE CMS_STAGE_TITLEDOC_TYPE ( 
	TITLEDOC_TYPE_ID	BIGINT NOT NULL,
	DOCUMENT_NAME   	VARCHAR(100) NOT NULL,
	DOCUMENT_TYPE   	VARCHAR(10) NOT NULL,
	GROUP_ID        	BIGINT NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	VERSION_TIME    	BIGINT NOT NULL,
	STATUS          	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_TITLEDOC_TYPE
	ADD CONSTRAINT CMS_SDT_PK_TI
	PRIMARY KEY (TITLEDOC_TYPE_ID);

CREATE TABLE CMS_STAGE_TRADING_AGREEMENT ( 
	AGREEMENT_ID          	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	AGREEMENT_TYPE        	VARCHAR(40),
	CP_BRANCH             	VARCHAR(100),
	MIN_TRANSFER_CURRENCY 	CHARACTER(3),
	MIN_TRANSFER_AMT      	DECIMAL(21,6),
	CP_RATING_TYPE        	VARCHAR(40),
	CP_RATING             	VARCHAR(40),
	MBB_RATING_TYPE       	VARCHAR(40),
	MBB_RATING            	VARCHAR(40),
	ELIGIBLE_MARGIN       	VARCHAR(40),
	AGREE_INT_RATE_TYPE   	VARCHAR(40),
	BASE_CURRENCY         	CHARACTER(3),
	CP_THRESHOLD_AMT      	DECIMAL(21,6),
	AGENT_BANK_NAME       	VARCHAR(100),
	AGENT_BANK_ADDRESS    	VARCHAR(150),
	BANK_CLEARANCE_ID     	VARCHAR(10),
	BANK_ACCOUNT_ID       	VARCHAR(10),
	CLEARING_DESC         	VARCHAR(10),
	NOTIFICATION_TIME     	VARCHAR(12),
	VALUATION_TIME        	VARCHAR(12),
	CLOSING_CASH_INT_DATE 	TIMESTAMP,
	CLOSING_CASH_INT      	DECIMAL(21,6),
	STATUS                	VARCHAR(20),
	VERSION_TIME          	BIGINT,
	MBB_THRESHOLD_AMT     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_TRADING_AGREEMENT
	ADD CONSTRAINT AGREEMENT_ST_PK
	PRIMARY KEY (AGREEMENT_ID);

CREATE TABLE CMS_STAGE_VALUATION ( 
	VALUATION_ID         	BIGINT NOT NULL,
	VALUATION_CURRENCY   	VARCHAR(3),
	VALUATION_DATE       	TIMESTAMP,
	VALUER               	VARCHAR(100),
	CMV                  	DECIMAL(20,2),
	FSV                  	DECIMAL(20,2),
	VALUE_BEFORE_MARGIN  	DECIMAL(20,2),
	REVAL_FREQ           	INTEGER,
	REVAL_FREQ_UNIT      	VARCHAR(20),
	CMS_COLLATERAL_ID    	BIGINT,
	UPDATE_DATE          	TIMESTAMP,
	NON_REVAL_FREQ       	INTEGER,
	NON_REVAL_FREQ_UNIT  	CHARACTER(1),
	COMMENTS             	VARCHAR(256),
	OLV                  	DECIMAL(30,2),
	REMAINING_USEFUL_LIFE	DECIMAL(5,2),
	VALUATION_BASIS      	VARCHAR(250),
	APPRAISAL_NAME       	VARCHAR(50),
	EVALUATION_DATE_FSV  	TIMESTAMP,
	VALUATION_TYPE       	VARCHAR(10),
	RESERVE_PRICE        	DECIMAL(30,2),
	RESERVE_PRICE_DATE   	TIMESTAMP,
	SOURCE_TYPE          	CHARACTER(1),
	SOURCE_ID            	VARCHAR(10),
	LOS_VALUATION_ID		BIGINT
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_VAL_I1
	ON CMS_STAGE_VALUATION(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_VALUATION
	ADD CONSTRAINT PK_CMS_STAGE_VAL
	PRIMARY KEY (VALUATION_ID);

CREATE TABLE CMS_STAGE_WRHSE_RCPT ( 
	WAREHSE_RCPT_ID   	BIGINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	ISSUE_DATE        	TIMESTAMP,
	UPDATE_DATE       	TIMESTAMP,
	RCPT_STATUS       	VARCHAR(50),
	EXCHANGE_NO       	VARCHAR(50),
	ORIG_RECEIPT_NO   	VARCHAR(50),
	EWR_CONVRSN_DATE  	TIMESTAMP,
	PAPER_RECEIPT_NO  	VARCHAR(50),
	PWR_CONVRSN_DATE  	TIMESTAMP,
	TITLE_HOLDER_NAME 	VARCHAR(150),
	TITLE_HOLDER_NO   	VARCHAR(50),
	TITLE_HOLDER_DATE 	TIMESTAMP,
	BENEFICIARY_NAME  	VARCHAR(150),
	BENEFICIARY_NO    	VARCHAR(50),
	BENEFICIARY_DATE  	TIMESTAMP,
	WAREHSE_STORE_NO  	VARCHAR(50),
	WAREHSE_ADDR      	VARCHAR(150),
	CARGO_NO          	VARCHAR(50),
	PDT_NAME          	VARCHAR(150),
	PDT_ORIGIN        	VARCHAR(50),
	PDT_CROP_YEAR     	VARCHAR(10),
	PDT_DESC          	VARCHAR(150),
	CONTAINER_NO      	VARCHAR(50),
	SEAL_NO           	VARCHAR(50),
	ICO_MARK          	VARCHAR(50),
	ADDITIONAL_MARK   	VARCHAR(50),
	VESSEL_NAME       	VARCHAR(150),
	CARRIER_NAME      	VARCHAR(150),
	VOYAGE_NO         	VARCHAR(50),
	BILL_LADING_NO    	VARCHAR(50),
	BILL_LADING_DATE  	TIMESTAMP,
	ASSIGNMENT_DATE   	TIMESTAMP,
	BANK_RELEASE_DATE 	TIMESTAMP,
	DELIVERY_ORDER_NO 	VARCHAR(50),
	FREETM_EXPIRY_DATE	TIMESTAMP,
	GRADE_CERT_DESC   	VARCHAR(50),
	WEIGHT_NOTE_DESC  	VARCHAR(50),
	CUSTOMS_ENTRY_NO  	VARCHAR(50),
	RCPT_REMK         	VARCHAR(250),
	WAREHOUSE_ID      	BIGINT,
	TITLE_DOC_ID      	BIGINT,
	ACTUAL_QTY_UOM_ID 	VARCHAR(40),
	STATUS            	VARCHAR(20),
	ACTUAL_QTY        	DECIMAL(19,4) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_WRH_RCP_I2
	ON CMS_STAGE_WRHSE_RCPT(WAREHOUSE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_WRH_RCP_I1
	ON CMS_STAGE_WRHSE_RCPT(TITLE_DOC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STAGE_WRHSE_RCPT
	ADD CONSTRAINT CMS_SWR_PK_RI
	PRIMARY KEY (WAREHSE_RCPT_ID);

CREATE TABLE CMS_STATEMATRIX_ACTION ( 
	STATE_ID               	BIGINT,
	TEAM_MEMBERSHIP_TYPE_ID	BIGINT,
	USER_ACTION            	VARCHAR(40),
	URL                    	VARCHAR(300),
	TOTRACK_URL            	VARCHAR(300) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STM_ACT_I1
	ON CMS_STATEMATRIX_ACTION(STATE_ID, TEAM_MEMBERSHIP_TYPE_ID)
	ALLOW REVERSE SCANS ;

CREATE TABLE CMS_STOCK_EXCHANGE ( 
	STOCK_EXCHANGE     	VARCHAR(10) NOT NULL,
	STOCK_EXCHANGE_NAME	VARCHAR(65),
	COUNTRY_ISO_CODE   	CHARACTER(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_STOCK_EXCHANGE
	ADD CONSTRAINT PK_CMS_STOCK_EXCG
	PRIMARY KEY (STOCK_EXCHANGE);

	
CREATE TABLE CMS_STTLMT_RCPT_MAP ( 
	SETTLMT_WHRCPT_ID 	BIGINT NOT NULL,
	WAREHSE_RCPT_ID   	BIGINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	STATUS            	VARCHAR(20),
	RELEASE_QTY       	BIGINT,
	RELEASE_QTY_UOM_ID	VARCHAR(40),
	RELEASE_ID        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STL_RCP_MAP_I1
	ON CMS_STTLMT_RCPT_MAP(WAREHSE_RCPT_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_STTLMT_RCPT_MAP
	ADD CONSTRAINT CMS_DSR_PK_SI
	PRIMARY KEY (SETTLMT_WHRCPT_ID);
    
CREATE TABLE CMS_TAT_ENTRY ( 
	TAT_ENTRY_ID      	BIGINT NOT NULL,
	LIMIT_PROFILE_ID  	BIGINT NOT NULL,
	TAT_TIME_STAMP    	TIMESTAMP,
	TAT_SERVICE_CODE  	VARCHAR(100),
	TAT_REFERENCE_DATE	TIMESTAMP,
	TAT_REMARKS       	VARCHAR(250) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TAT_ENT_I2
	ON CMS_TAT_ENTRY(TAT_TIME_STAMP)
	ALLOW REVERSE SCANS ;

CREATE INDEX TAT_ENT_I1
	ON CMS_TAT_ENTRY(LIMIT_PROFILE_ID, TAT_SERVICE_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TAT_ENTRY
	ADD CONSTRAINT PK_TAT_ENTRY
	PRIMARY KEY (TAT_ENTRY_ID);

CREATE TABLE CMS_TB_DEAL ( 
	CMS_DEAL_ID      	BIGINT NOT NULL,
	AGREEMENT_ID     	BIGINT NOT NULL,
	AGREEMENT_TYPE   	VARCHAR(40),
	DEAL_ID          	VARCHAR(40),
	PRODUCT_TYPE     	VARCHAR(40),
	MATURITY_DATE    	TIMESTAMP,
	VALUE_DATE       	TIMESTAMP,
	TRADE_DATE       	TIMESTAMP,
	NOTIONAL_CURRENCY	CHARACTER(3),
	NOTIONAL         	DECIMAL(21,6),
	NPV_CURRENCY     	CHARACTER(3),
	NPV              	DECIMAL(21,6),
	NPV_BASE_CURRENCY	CHARACTER(3),
	NPV_BASE         	DECIMAL(21,6),
	DEAL_CURRENCY    	CHARACTER(3),
	DEAL_AMOUNT      	DECIMAL(21,6),
	NEAR_AMOUNT      	DECIMAL(21,6),
	FAR_AMOUNT       	DECIMAL(21,6),
	SEC_DESC         	VARCHAR(100),
	ISIN_CODE        	VARCHAR(20),
	CUSIP_CODE       	VARCHAR(20),
	HAIRCUT          	DECIMAL(21,6),
	DEAL_RATE        	DECIMAL(21,6),
	DEAL_COUNTRY     	CHARACTER(2),
	DEAL_BRANCH      	VARCHAR(40),
	STATUS           	VARCHAR(20),
	VERSION_TIME     	BIGINT,
	REPO_START_AMOUNT	DECIMAL(21,6),
	REPO_END_AMOUNT  	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_TB_DEAL_VAL ( 
	CMS_DEAL_VAL_ID      	BIGINT NOT NULL,
	CMS_DEAL_ID          	BIGINT NOT NULL,
	MARKET_VALUE_CURRENCY	CHARACTER(3),
	MARKET_VALUE         	DECIMAL(21,6),
	GROUP_ID             	BIGINT NOT NULL,
	STATUS               	VARCHAR(20),
	VERSION_TIME         	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TB_DEAL_VAL
	ADD CONSTRAINT TB_DEAL_VAL_PK
	PRIMARY KEY (CMS_DEAL_VAL_ID);

CREATE TABLE CMS_TEAM ( 
	TEAM_ID     	BIGINT NOT NULL,
	CODE        	VARCHAR(50),
	ABBREVIATION	VARCHAR(50),
	DESCRIPTION 	VARCHAR(250),
	PARENT_ID   	BIGINT,
	CCRIS_CODE  	VARCHAR(50),
	TEAM_TYPE_ID	BIGINT,
	VERSION_TIME	BIGINT,
	STATUS      	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TEAM_I1
	ON CMS_TEAM(TEAM_TYPE_ID)
	ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX TEAM_U1
	ON CMS_TEAM(TEAM_ID, TEAM_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM
	ADD CONSTRAINT PK_CMS_TEAM
	PRIMARY KEY (TEAM_ID);

CREATE TABLE CMS_TEAM_CMS_SEGMENT_CODE ( 
	CODE_ID     	BIGINT NOT NULL,
	SEGMENT_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TM_CMS_SEG_COD_U1
	ON CMS_TEAM_CMS_SEGMENT_CODE(TEAM_ID, SEGMENT_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_CMS_SEGMENT_CODE
	ADD CONSTRAINT CMS_SGMT_CODE_PK
	PRIMARY KEY (CODE_ID);

CREATE TABLE CMS_TEAM_COUNTRY_CODE ( 
	CODE_ID     	BIGINT NOT NULL,
	COUNTRY_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TM_CNT_COD_I1
	ON CMS_TEAM_COUNTRY_CODE(TEAM_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TM_CNT_COD_U1
	ON CMS_TEAM_COUNTRY_CODE(TEAM_ID, COUNTRY_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_COUNTRY_CODE
	ADD CONSTRAINT CMS_TEAM_CNTY_CODE
	PRIMARY KEY (CODE_ID);

CREATE TABLE CMS_TEAM_MEMBER ( 
	TEAM_MEMBER_ID    	BIGINT NOT NULL,
	USER_ID           	BIGINT,
	TEAM_MEMBERSHIP_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TEAM_MB_U1
	ON CMS_TEAM_MEMBER(TEAM_MEMBERSHIP_ID, USER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TEAM_MB_I1
	ON CMS_TEAM_MEMBER(USER_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_MEMBER
	ADD CONSTRAINT PK_CMS_MEM_ID
	PRIMARY KEY (TEAM_MEMBER_ID);

CREATE TABLE CMS_TEAM_MEMBERSHIP ( 
	TEAM_MEMBERSHIP_ID     	BIGINT NOT NULL,
	TEAM_ID                	BIGINT,
	TEAM_TYPE_MEMBERSHIP_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX TM_MBS_I1
	ON CMS_TEAM_MEMBERSHIP(TEAM_TYPE_MEMBERSHIP_ID, TEAM_ID, TEAM_MEMBERSHIP_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TM_MBS_I2
	ON CMS_TEAM_MEMBERSHIP(TEAM_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_MEMBERSHIP
	ADD CONSTRAINT PK_CMS_TEAM_MEM_ID
	PRIMARY KEY (TEAM_MEMBERSHIP_ID);

CREATE TABLE CMS_TEAM_ORG_GROUP_CODE ( 
	ID            	BIGINT NOT NULL,
	ORG_GROUP_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TM_ORG_GRP_COD_U1
	ON CMS_TEAM_ORG_GROUP_CODE(TEAM_ID, ORG_GROUP_CODE)
	ALLOW REVERSE SCANS ;
	
ALTER TABLE CMS_TEAM_ORG_GROUP_CODE
	ADD CONSTRAINT TEAM_ORG_GRP_CODE
	PRIMARY KEY (ID);
	
	
CREATE TABLE CMS_TEAM_ORGANISATION_CODE ( 
	CODE_ID          	BIGINT NOT NULL,
	ORGANISATION_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID          	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TM_ORG_COD_U1
	ON CMS_TEAM_ORGANISATION_CODE(TEAM_ID, ORGANISATION_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_ORGANISATION_CODE
	ADD CONSTRAINT CMS_TEAM_ORG_CODE
	PRIMARY KEY (CODE_ID);

CREATE TABLE CMS_TEAM_SEGMENT_CODE ( 
	CODE_ID     	BIGINT NOT NULL,
	SEGMENT_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TM_SEG_COD_U1
	ON CMS_TEAM_SEGMENT_CODE(TEAM_ID, SEGMENT_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_SEGMENT_CODE
	ADD CONSTRAINT CMS_TEAM_SGMT_CODE
	PRIMARY KEY (CODE_ID);

CREATE TABLE CMS_TEAM_TYPE ( 
	TEAM_TYPE_ID  	BIGINT NOT NULL,
	BUSINESS_CODE 	VARCHAR(50),
	DESCRIPTION   	VARCHAR(100),
	PARENT_ID     	BIGINT,
	IS_ADD_ALLOWED	CHARACTER(1),
	VERSION_TIME  	BIGINT,
	STATUS        	CHARACTER(1),
	PEER_ORDER    	SMALLINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TEAM_TYPE
	ADD CONSTRAINT PK_CMS_TEAM_TYP_ID
	PRIMARY KEY (TEAM_TYPE_ID);

CREATE TABLE CMS_TEAM_TYPE_MEMBERSHIP ( 
	TEAM_TYPE_MEMBERSHIP_ID	BIGINT NOT NULL,
	INCLUDE_IN_ROUTING     	CHARACTER(1),
	TEAM_TYPE_ID           	BIGINT,
	MAX_ALLOWED            	SMALLINT,
	VERSION_TIME           	BIGINT,
	STATUS                 	CHARACTER(1),
	MEMBERSHIP_TYPE_ID     	BIGINT,
	MEMBERSHIP_NAME        	VARCHAR(100),
	ROLETYPE_ID            	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TM_TP_MBS_I2
	ON CMS_TEAM_TYPE_MEMBERSHIP(MEMBERSHIP_TYPE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TM_TP_MBS_I3
	ON CMS_TEAM_TYPE_MEMBERSHIP(ROLETYPE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TM_TP_MBS_I1
	ON CMS_TEAM_TYPE_MEMBERSHIP(TEAM_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TEAM_TYPE_MEMBERSHIP
	ADD CONSTRAINT CMS_TEM_TYP_MEM_ID
	PRIMARY KEY (TEAM_TYPE_MEMBERSHIP_ID);

CREATE TABLE CMS_THRESHOLD_RATING ( 
	RATING_ID         	BIGINT NOT NULL,
	AGREEMENT_ID      	BIGINT NOT NULL,
	RATING_TYPE       	VARCHAR(40),
	RATING            	VARCHAR(40),
	THRESHOLD_CURRENCY	CHARACTER(3),
	THRESHOLD_AMT     	DECIMAL(21,6),
	STATUS            	VARCHAR(20),
	VERSION_TIME      	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_THRESHOLD_RATING
	ADD CONSTRAINT THRES_RATE_PK
	PRIMARY KEY (RATING_ID);

CREATE TABLE CMS_TITLE_DOC ( 
	TITLE_DOC_ID       	BIGINT NOT NULL,
	TITLEDOC_TYPE_ID   	BIGINT NOT NULL,
	DEAL_PROC_STG      	CHARACTER(1) NOT NULL,
	ELIGIBILITY_ADV_PCT	SMALLINT NOT NULL,
	CMS_REF_ID         	BIGINT NOT NULL,
	DEAL_ID            	BIGINT,
	TRX_DATE           	TIMESTAMP,
	IS_SECURED         	CHARACTER(1),
	BILL_LADING_NO     	VARCHAR(150),
	BL_ISSUE_DATE      	TIMESTAMP,
	BL_SHPG_CO_NAME    	VARCHAR(150),
	BL_REMK            	VARCHAR(250),
	TRUST_RCPT_NO      	VARCHAR(150),
	TR_ISSUE_DATE      	TIMESTAMP,
	TR_BILL_LADING_NO  	VARCHAR(150),
	TR_CCY             	CHARACTER(3),
	TR_MATURITY_DATE   	TIMESTAMP,
	TR_REMK            	VARCHAR(250),
	OTHER_DOC_NO       	VARCHAR(150),
	OTHER_DOC_DESC     	VARCHAR(150),
	OTHER_DOC_ISS_DATE 	TIMESTAMP,
	OTHER_DOC_DUE_DATE 	TIMESTAMP,
	OTHER_DOC_REMK     	VARCHAR(250),
	STATUS             	VARCHAR(20),
	TR_AMT             	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TTL_DOC_I1
	ON CMS_TITLE_DOC(DEAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TTL_DOC_I2
	ON CMS_TITLE_DOC(TITLEDOC_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_TITLE_DOC
	ADD CONSTRAINT CMS_DTD_PK_DI
	PRIMARY KEY (TITLE_DOC_ID);

CREATE TABLE CMS_TITLEDOC_TYPE ( 
	TITLEDOC_TYPE_ID	BIGINT NOT NULL,
	DOCUMENT_NAME   	VARCHAR(100) NOT NULL,
	DOCUMENT_TYPE   	VARCHAR(10) NOT NULL,
	GROUP_ID        	BIGINT NOT NULL,
	CMS_REF_ID      	BIGINT NOT NULL,
	VERSION_TIME    	BIGINT NOT NULL,
	STATUS          	VARCHAR(20) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TITLEDOC_TYPE
	ADD CONSTRAINT CMS_CDT_PK_TI
	PRIMARY KEY (TITLEDOC_TYPE_ID);

CREATE TABLE CMS_TRADE_COMMISSION ( 
	CMS_TRADE_COMMISSION_ID	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID   	BIGINT NOT NULL,
	COMMISSION_TYPE        	CHARACTER(1),
	COMMISSION_TIER_TYPE   	CHARACTER(1),
	COMMISSION_RATE        	DECIMAL(18,9) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TRADE_COMMISSION
	ADD CONSTRAINT TRADE_COMM_PK
	PRIMARY KEY (CMS_TRADE_COMMISSION_ID);

CREATE TABLE CMS_TRADE_LIMIT ( 
	CMS_LSP_APPR_LMTS_ID         	BIGINT NOT NULL,
	TRADE_ACCT_SEQ               	INTEGER,
	REVOLVING_IND                	CHARACTER(1),
	PRODUCT_INSTRUCTION          	VARCHAR(2500),
	REVIEW_DATE                  	TIMESTAMP,
	TEMPORARY_LINE               	CHARACTER(1),
	AUTO_PURGE_FLAG              	CHARACTER(1),
	LOAN_PURPOSE_CODE_NUM        	VARCHAR(40),
	LOAN_PURPOSE_CODE_VALUE      	VARCHAR(60),
	BROAD_PROP_SEC_EXEMPTION_FLAG	CHARACTER(1),
	LOAN_SEC_MATRIX_CODE_NUM     	VARCHAR(40),
	LOAN_SEC_MATRIX_CODE_VALUE   	VARCHAR(60),
	SECTORIAL_CODE_NUM           	VARCHAR(40),
	SECTORIAL_CODE_VALUE         	VARCHAR(60) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TRADE_LIMIT
	ADD CONSTRAINT TRADE_LMT_PK
	PRIMARY KEY (CMS_LSP_APPR_LMTS_ID);

CREATE TABLE CMS_TRADE_PRICING ( 
	CMS_TRADE_PRICING_ID	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	PRICING_TYPE        	CHARACTER(1),
	INTEREST_MODE       	CHARACTER(1),
	PRICING_TIER_TYPE   	CHARACTER(1),
	TIER_RATE_TYPE      	VARCHAR(50),
	TIER_RATE           	DECIMAL(18,9) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TRADE_PRICING
	ADD CONSTRAINT TRADE_PRICING_PK
	PRIMARY KEY (CMS_TRADE_PRICING_ID);

CREATE TABLE CMS_TRADE_SUPPLIER_BUYER ( 
	CMS_TRADE_SUPPLIER_BUYER_ID	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID       	BIGINT NOT NULL,
	TYPE                       	CHARACTER(1),
	NAME                       	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TRADE_SUPPLIER_BUYER
	ADD CONSTRAINT TR_SUPPLY_BUY_PK
	PRIMARY KEY (CMS_TRADE_SUPPLIER_BUYER_ID);

CREATE TABLE CMS_TRADING_AGREEMENT ( 
	AGREEMENT_ID          	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	AGREEMENT_TYPE        	VARCHAR(40),
	CP_BRANCH             	VARCHAR(100),
	MIN_TRANSFER_CURRENCY 	CHARACTER(3),
	MIN_TRANSFER_AMT      	DECIMAL(21,6),
	CP_RATING_TYPE        	VARCHAR(40),
	CP_RATING             	VARCHAR(40),
	MBB_RATING_TYPE       	VARCHAR(40),
	MBB_RATING            	VARCHAR(40),
	ELIGIBLE_MARGIN       	VARCHAR(40),
	AGREE_INT_RATE_TYPE   	VARCHAR(40),
	BASE_CURRENCY         	CHARACTER(3),
	CP_THRESHOLD_AMT      	DECIMAL(21,6),
	AGENT_BANK_NAME       	VARCHAR(100),
	AGENT_BANK_ADDRESS    	VARCHAR(150),
	BANK_CLEARANCE_ID     	VARCHAR(10),
	BANK_ACCOUNT_ID       	VARCHAR(10),
	CLEARING_DESC         	VARCHAR(10),
	NOTIFICATION_TIME     	VARCHAR(12),
	VALUATION_TIME        	VARCHAR(12),
	CLOSING_CASH_INT_DATE 	TIMESTAMP,
	CLOSING_CASH_INT      	DECIMAL(21,6),
	STATUS                	VARCHAR(20),
	VERSION_TIME          	BIGINT,
	MBB_THRESHOLD_AMT     	DECIMAL(21,6) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_TRADING_AGREEMENT
	ADD CONSTRAINT AGREEMENT_PK
	PRIMARY KEY (AGREEMENT_ID);

CREATE TABLE CMS_TRX_TOTRACK ( 
	TRANSACTION_TYPE   	VARCHAR(100),
	TOTRACK_URL        	VARCHAR(1000),
	CURR_STATE         	VARCHAR(100),
	USER_STATE         	VARCHAR(100),
	USER_TRX_TYPE      	VARCHAR(100),
	FROM_STATE         	VARCHAR(100),
	TRANSACTION_SUBTYPE	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TOTRK_I1
	ON CMS_TRX_TOTRACK(TRANSACTION_TYPE, USER_STATE)
	ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX TOTRK_U1
	ON CMS_TRX_TOTRACK(TRANSACTION_TYPE, CURR_STATE, FROM_STATE, TRANSACTION_SUBTYPE)
	ALLOW REVERSE SCANS ;

CREATE TABLE CMS_USER ( 
	USER_ID        	BIGINT NOT NULL,
	USER_NAME      	VARCHAR(50),
	OFFICER_CODE   	VARCHAR(20),
	EMPLOYEE_ID    	VARCHAR(20),
	DEPARTMENT     	VARCHAR(40),
	POSITION       	VARCHAR(40),
	PHONE_NUMBER   	VARCHAR(20),
	EMAIL_ID       	VARCHAR(80),
	LOGIN_ID       	VARCHAR(20),
	PASSWORD       	VARCHAR(20),
	STATUS         	VARCHAR(20),
	VERSION_TIME   	BIGINT,
	ROLETYPE_ID    	BIGINT,
	COUNTRY        	CHARACTER(2),
	ORGANISATION   	VARCHAR(20),
	VALID_FROM_DATE	TIMESTAMP,
	VALID_TO_DATE  	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX URS_I1
	ON CMS_USER(LOGIN_ID, ROLETYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_USER
	ADD CONSTRAINT PK_CMS_USER
	PRIMARY KEY (USER_ID);

CREATE TABLE CMS_USER_SESSION ( 
	USER_ID   	BIGINT NOT NULL,
	SESSION_ID	VARCHAR(120) NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_USER_SESSION
	ADD CONSTRAINT PK_CMS_USR_SESSION
	PRIMARY KEY (USER_ID);

CREATE TABLE CMS_VALUATION ( 
	VALUATION_ID         	BIGINT NOT NULL,
	VALUATION_CURRENCY   	CHARACTER(3),
	VALUATION_DATE       	TIMESTAMP,
	VALUER               	VARCHAR(100),
	CMV                  	DECIMAL(20,2),
	FSV                  	DECIMAL(20,2),
	VALUE_BEFORE_MARGIN  	DECIMAL(20,2),
	REVAL_FREQ           	BIGINT,
	REVAL_FREQ_UNIT      	VARCHAR(20),
	CMS_COLLATERAL_ID    	BIGINT,
	UPDATE_DATE          	TIMESTAMP,
	NON_REVAL_FREQ       	INTEGER,
	NON_REVAL_FREQ_UNIT  	CHARACTER(1),
	COMMENTS             	VARCHAR(256),
	OLV                  	DECIMAL(30,2),
	REMAINING_USEFUL_LIFE	DECIMAL(5,2),
	VALUATION_BASIS      	VARCHAR(250),
	APPRAISAL_NAME       	VARCHAR(50),
	EVALUATION_DATE_FSV  	TIMESTAMP,
	VALUATION_TYPE       	VARCHAR(10),
	RESERVE_PRICE        	DECIMAL(30,2),
	RESERVE_PRICE_DATE   	TIMESTAMP,
	SOURCE_TYPE          	CHARACTER(1),
	SOURCE_ID            	VARCHAR(10),
	LOS_VALUATION_ID 		BIGINT
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX VAL_I2
	ON CMS_VALUATION(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX VAL_I1
-- 	ON CMS_VALUATION(NON_REVAL_FREQ)
-- 	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_VALUATION
	ADD CONSTRAINT PK_CMS_VALUATION
	PRIMARY KEY (VALUATION_ID);
	
CREATE INDEX VAL_I3
    ON CMS_VALUATION(CMS_COLLATERAL_ID, SOURCE_TYPE, VALUATION_DATE)
    ALLOW REVERSE SCANS ;

create index val_i4 on cms_valuation (
	LOS_VALUATION_ID) allow reverse scans;    

CREATE TABLE CMS_VALUATION_MKT_SEC_SUMMARY ( 
	TICKER                      VARCHAR(20),
    BOARD_TYPE                  VARCHAR(10),
    RUNNING_TOTAL_CURRENCY      CHARACTER(3),
	RUNNING_DAILY_TOTAL         DECIMAL(22,6),
	DAYS_FOR_DAILY_TOTAL  	    SMALLINT,
	RUNNING_MONTH_END_TOTAL	    DECIMAL(22,6),
	MONTHS_FOR_MONTH_END_TOTAL  SMALLINT,
	START_DATE_OF_TOTAL         DATE,
	END_DATE_OF_TOTAL           DATE
) IN CMS_DATA INDEX IN CMS_INDEX;
    
CREATE INDEX VAL_SECMKT_I1
	ON CMS_VALUATION_MKT_SEC_SUMMARY(TICKER)
	ALLOW REVERSE SCANS ;
    
CREATE TABLE CMS_VALUER ( 
	VALUER_CODE   	VARCHAR(20) NOT NULL,
	VALUER_NAME   	VARCHAR(100),
	VALUER_COUNTRY	CHARACTER(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_VALUER
	ADD CONSTRAINT PK_CMS_VALUER
	PRIMARY KEY (VALUER_CODE);

----  table Hire & Purchase Price of Vehicle
CREATE TABLE CMS_VEHICLE_PRICE_FEED (
  COMPOSITE_ID	VARCHAR(100),
  REGION	VARCHAR(3),
  CAR_MAKE	VARCHAR(50),
  CAR_MODEL	VARCHAR(50),
  CAR_YEAR	INTEGER,
  CAR_FSV	DECIMAL(17,2),
  PURCHASE_CURRENCY	VARCHAR(3),
  LAST_UPDATE_DATE	TIMESTAMP	DEFAULT CURRENT TIMESTAMP
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX VEH_HP_I1
	ON CMS_VEHICLE_PRICE_FEED(REGION, CAR_MAKE, CAR_MODEL, CAR_YEAR)
	ALLOW REVERSE SCANS ;

CREATE TABLE CMS_WAIVER_GENERATED ( 
	WAIVER_ID               	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	PROPOSED_BY             	VARCHAR(50),
	PROPOSED_BY_DESIGNAT    	VARCHAR(50),
	PROPOSED_BY_SIGN_NO     	VARCHAR(20),
	PROPOSED_BY_DATE        	TIMESTAMP,
	SUPPORTED_BY            	VARCHAR(50),
	SUPPORTED_BY_DESIGNAT   	VARCHAR(50),
	SUPPORTED_BY_COIN_NO    	VARCHAR(20),
	SUPPORTED_BY_DATE       	TIMESTAMP,
	APPROVED_BY_SCO         	VARCHAR(50),
	APPROVED_BY_SCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_SCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_SCO_DATE    	TIMESTAMP,
	APPROVED_BY_RCO         	VARCHAR(50),
	APPROVED_BY_RCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_RCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_RCO_DATE    	TIMESTAMP,
	APPROVED_BY_CCO         	VARCHAR(50),
	APPROVED_BY_CCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_CCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_CCO_DATE    	TIMESTAMP,
	NAME                    	VARCHAR(50),
	CREDIT_COMMITTEE        	VARCHAR(50),
	MIN_OF_MEETING          	VARCHAR(100),
	MEETING_DATE            	TIMESTAMP,
	REASON                  	VARCHAR(640),
	VERSION_TIME            	BIGINT,
	CMS_CUSTOMER_ID         	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_WAIVER_GENERATED
	ADD CONSTRAINT CMS_WAIVER_GENERAT
	PRIMARY KEY (WAIVER_ID);

CREATE TABLE CMS_WAIVER_GENERATED_ITEM ( 
	WAIVER_ITEM_ID   	BIGINT NOT NULL,
	WAIVER_ITEM_REF  	BIGINT,
	WAIVER_ID        	BIGINT,
	CHECKLIST_ID     	BIGINT,
	CHECKLIST_ITEM_ID	BIGINT,
	IS_DELETED       	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX WAV_GEN_IT_I1
	ON CMS_WAIVER_GENERATED_ITEM(WAIVER_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_WAIVER_GENERATED_ITEM
	ADD CONSTRAINT CMS_WAIVER_GEN_ITM
	PRIMARY KEY (WAIVER_ITEM_ID);

CREATE TABLE CMS_WRHSE_RCPT ( 
	WAREHSE_RCPT_ID   	BIGINT NOT NULL,
	CMS_REF_ID        	BIGINT NOT NULL,
	ISSUE_DATE        	TIMESTAMP,
	UPDATE_DATE       	TIMESTAMP,
	RCPT_STATUS       	VARCHAR(50),
	EXCHANGE_NO       	VARCHAR(50),
	ORIG_RECEIPT_NO   	VARCHAR(50),
	EWR_CONVRSN_DATE  	TIMESTAMP,
	PAPER_RECEIPT_NO  	VARCHAR(50),
	PWR_CONVRSN_DATE  	TIMESTAMP,
	TITLE_HOLDER_NAME 	VARCHAR(150),
	TITLE_HOLDER_NO   	VARCHAR(50),
	TITLE_HOLDER_DATE 	TIMESTAMP,
	BENEFICIARY_NAME  	VARCHAR(150),
	BENEFICIARY_NO    	VARCHAR(50),
	BENEFICIARY_DATE  	TIMESTAMP,
	WAREHSE_STORE_NO  	VARCHAR(50),
	WAREHSE_ADDR      	VARCHAR(150),
	CARGO_NO          	VARCHAR(50),
	PDT_NAME          	VARCHAR(150),
	PDT_ORIGIN        	VARCHAR(50),
	PDT_CROP_YEAR     	VARCHAR(10),
	PDT_DESC          	VARCHAR(150),
	CONTAINER_NO      	VARCHAR(50),
	SEAL_NO           	VARCHAR(50),
	ICO_MARK          	VARCHAR(50),
	ADDITIONAL_MARK   	VARCHAR(50),
	VESSEL_NAME       	VARCHAR(150),
	CARRIER_NAME      	VARCHAR(150),
	VOYAGE_NO         	VARCHAR(50),
	BILL_LADING_NO    	VARCHAR(50),
	BILL_LADING_DATE  	TIMESTAMP,
	ASSIGNMENT_DATE   	TIMESTAMP,
	BANK_RELEASE_DATE 	TIMESTAMP,
	DELIVERY_ORDER_NO 	VARCHAR(50),
	FREETM_EXPIRY_DATE	TIMESTAMP,
	GRADE_CERT_DESC   	VARCHAR(50),
	WEIGHT_NOTE_DESC  	VARCHAR(50),
	CUSTOMS_ENTRY_NO  	VARCHAR(50),
	RCPT_REMK         	VARCHAR(250),
	WAREHOUSE_ID      	BIGINT,
	TITLE_DOC_ID      	BIGINT,
	ACTUAL_QTY_UOM_ID 	VARCHAR(40),
	STATUS            	VARCHAR(20),
	ACTUAL_QTY        	DECIMAL(19,4) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX WRH_RCP_I2
	ON CMS_WRHSE_RCPT(WAREHOUSE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX WRH_RCP_I1
	ON CMS_WRHSE_RCPT(TITLE_DOC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE CMS_WRHSE_RCPT
	ADD CONSTRAINT CMS_DWR_PK_RI
	PRIMARY KEY (WAREHSE_RCPT_ID);

CREATE TABLE COMMON_CODE_CATEGORY ( 
	CATEGORY_ID      	BIGINT NOT NULL,
	CATEGORY_CODE    	VARCHAR(40) NOT NULL,
	CATEGORY_NAME    	VARCHAR(255),
	CATEGORY_TYPE    	DECIMAL(1,0),
	ACTIVE_STATUS    	CHARACTER(1),
	VERSION_TIME     	BIGINT,
	STATUS           	CHARACTER(1),
	REF_CATEGORY_CODE	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE COMMON_CODE_CATEGORY
	ADD CONSTRAINT CCCAT_CAT_ID_PK
	PRIMARY KEY (CATEGORY_ID);

CREATE TABLE COMMON_CODE_CATEGORY_ENTRY ( 
	ENTRY_ID        	BIGINT NOT NULL,
	ENTRY_CODE      	VARCHAR(60) NOT NULL,
	ENTRY_NAME      	VARCHAR(750),
	ACTIVE_STATUS   	CHARACTER(1),
	CATEGORY_CODE   	VARCHAR(40),
	CATEGORY_CODE_ID	BIGINT,
	ENTRY_SOURCE    	VARCHAR(40),
	COUNTRY         	VARCHAR(3),
	GROUP_ID        	BIGINT,
	REF_ENTRY_CODE  	VARCHAR(100),
	VERSION_TIME    	BIGINT,
	STATUS          	VARCHAR(15) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CM_COD_CAT_I1
	ON COMMON_CODE_CATEGORY_ENTRY(ENTRY_CODE, CATEGORY_CODE, ENTRY_SOURCE, ENTRY_NAME)
	ALLOW REVERSE SCANS ;

CREATE INDEX CM_COD_CAT_U1
	ON COMMON_CODE_CATEGORY_ENTRY(CATEGORY_CODE, ENTRY_CODE)
	ALLOW REVERSE SCANS ;

CREATE INDEX CM_COD_CAT_U2
	ON COMMON_CODE_CATEGORY_ENTRY(ENTRY_SOURCE, ENTRY_CODE, CATEGORY_CODE, ACTIVE_STATUS)
	ALLOW REVERSE SCANS ;
	
create index CM_COD_CAT_I2 on common_code_category_entry
	(category_code, ref_entry_code, entry_code)
	allow reverse scans ;	

create index CM_COD_CAT_I3 on COMMON_CODE_CATEGORY_ENTRY
(ACTIVE_STATUS ASC, REF_ENTRY_CODE ASC) allow reverse scans;
	
ALTER TABLE COMMON_CODE_CATEGORY_ENTRY
	ADD CONSTRAINT CCCAT_ENT_ID_PK
	PRIMARY KEY (ENTRY_ID);

CREATE TABLE CUST_LOC_FAM ( 
	FAM_NAME    	VARCHAR(100),
	FAM_CODE    	VARCHAR(10),
	CUSTOMER_ID 	BIGINT,
	BKG_LOC_CTRY	VARCHAR(20),
	BKG_LOC_ORG 	VARCHAR(20),
	FAM_COUNT   	INTEGER 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX LOC_FAM_U1
	ON CUST_LOC_FAM(CUSTOMER_ID, BKG_LOC_CTRY, BKG_LOC_ORG)
	ALLOW REVERSE SCANS ;

CREATE TABLE LMT_PROFILE_BIZ_DAYS ( 
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	NUM_BIZ_DAYS          	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE LMT_PROFILE_BIZ_DAYS
	ADD CONSTRAINT CMS_LPB_PK_LP
	PRIMARY KEY (CMS_LSP_LMT_PROFILE_ID);

CREATE TABLE NLIST ( 
	RNUM	BIGINT NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE NLIST
	ADD CONSTRAINT PK_NLIST
	PRIMARY KEY (RNUM);

CREATE TABLE NOTIFICATION ( 
	NOTIFICATION_ID       	BIGINT NOT NULL,
	CREATION_DATE         	TIMESTAMP,
	EFFECTIVE_DATE        	TIMESTAMP,
	EXPIRY_DATE           	TIMESTAMP,
	MESSAGE               	VARCHAR(4000),
	MSG_TITLE             	VARCHAR(400),
	ORIGINATOR_ID         	BIGINT,
	URL                   	VARCHAR(255),
	NOTIFICATION_STATE    	VARCHAR(20),
	PAST_NOTIFICATION_ID  	BIGINT,
	MESSAGE_OBJECT        	CLOB(1048576),
	NOTIFICATION_TYPE_ID  	BIGINT NOT NULL,
	NOTIFICATION_TYPE_CODE	VARCHAR(5),
	NOTIFICATION_TYPE_NAME	VARCHAR(40),
	IS_RECURRING          	CHARACTER(1),
	SEVERITY              	BIGINT,
	CHANNELS              	VARCHAR(50),
	VERSION_TIME          	BIGINT,
	STATUS                	CHARACTER(1) DEFAULT 'A',
	TITLE                 	VARCHAR(500),
	LAST_UPDATE_DATE      	TIMESTAMP,
	NOTIFICATION_STATUS   	VARCHAR(20),
	LE_ID                 	VARCHAR(20),
	LE_NAME               	VARCHAR(100),
	MESSAGE_SIZE          	BIGINT,
	MESSAGE_PART_2        	VARCHAR(4000),
	MESSAGE_PART_3        	VARCHAR(4000),
	MESSAGE_PART_4        	VARCHAR(4000),
	MESSAGE_PART_5        	VARCHAR(4000),
	DETAILS               	VARCHAR(100) DEFAULT '--' 
	) IN CMS_LARGE_DATA INDEX IN CMS_INDEX;

CREATE INDEX NOTIF_I2
	ON NOTIFICATION(STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX NOTIF_I1
	ON NOTIFICATION(DETAILS)
	ALLOW REVERSE SCANS ;

ALTER TABLE NOTIFICATION
	ADD CONSTRAINT PK_NOTIFICATION
	PRIMARY KEY (NOTIFICATION_ID);

CREATE TABLE NOTIFICATION_RECIPIENT ( 
	RECIPIENT_ID   	BIGINT NOT NULL,
	NOTIFICATION_ID	BIGINT,
	USER_ID        	BIGINT,
	GROUP_ID       	BIGINT,
	RECIPIENT_TYPE 	SMALLINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX NOT_RCP_I3
	ON NOTIFICATION_RECIPIENT(NOTIFICATION_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX NOT_RCP_I1
	ON NOTIFICATION_RECIPIENT(GROUP_ID, USER_ID, NOTIFICATION_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX NOT_RCP_I4
	ON NOTIFICATION_RECIPIENT(NOTIFICATION_ID, GROUP_ID, USER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX NOT_RCP_I2
	ON NOTIFICATION_RECIPIENT(NOTIFICATION_ID, GROUP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE NOTIFICATION_RECIPIENT
	ADD CONSTRAINT NOTIF_RECIPIENT_PK
	PRIMARY KEY (RECIPIENT_ID);

CREATE TABLE NOTIFICATION_RECURRENCE ( 
	RECURRENCE_ID    	BIGINT NOT NULL,
	NOTIFICATION_ID  	BIGINT,
	FREQUENCY_UNIT_ID	BIGINT,
	FREQUENCY        	DOUBLE 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX NOT_REC_I1
	ON NOTIFICATION_RECURRENCE(NOTIFICATION_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE NOTIFICATION_RECURRENCE
	ADD CONSTRAINT PK_NOTIFI_RECUR
	PRIMARY KEY (RECURRENCE_ID);

CREATE TABLE NOTIFICATION_TYPE ( 
	NOTIFICATION_TYPE_ID  	BIGINT NOT NULL,
	NOTIFICATION_TYPE_CODE	VARCHAR(5),
	NOTIFICATION_TYPE_NAME	VARCHAR(40),
	IS_RECURRING          	CHARACTER(1),
	SEVERITY              	BIGINT,
	CHANNELS              	VARCHAR(50),
	VERSION_TIME          	BIGINT,
	STATUS                	CHARACTER(1),
	TITLE                 	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE NOTIFICATION_TYPE
	ADD CONSTRAINT PK_NOTIFY_TYPE
	PRIMARY KEY (NOTIFICATION_TYPE_ID);

CREATE TABLE NOTIFICATION_TYPE_RECIPIENT ( 
	RECIPIENT_ID        	BIGINT NOT NULL,
	NOTIFICATION_TYPE_ID	BIGINT,
	USER_ID             	BIGINT,
	GROUP_ID            	BIGINT,
	RECIPIENT_TYPE      	SMALLINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX NOT_TP_REC_I1
	ON NOTIFICATION_TYPE_RECIPIENT(NOTIFICATION_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE NOTIFICATION_TYPE_RECIPIENT
	ADD CONSTRAINT PK_NOTI_TYPE_RCPT
	PRIMARY KEY (RECIPIENT_ID);

CREATE TABLE NOTIFICATION_TYPE_RECURRENCE ( 
	RECURRENCE_ID       	BIGINT NOT NULL,
	NOTIFICATION_TYPE_ID	BIGINT,
	FREQUENCY_UNIT_ID   	BIGINT,
	FREQUENCY           	DOUBLE 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX NOT_TP_REC_I2
	ON NOTIFICATION_TYPE_RECURRENCE(NOTIFICATION_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE NOTIFICATION_TYPE_RECURRENCE
	ADD CONSTRAINT PK_NOTI_TYPE_RECUR
	PRIMARY KEY (RECURRENCE_ID);

CREATE TABLE OFA_ACCESS_PROFILE ( 
	ACCESS_PROFILE_ID	BIGINT NOT NULL,
	URI              	VARCHAR(100),
	EVENT            	VARCHAR(30),
	IS_ALL_ROLETYPES 	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE OFA_ACCESS_PROFILE
	ADD CONSTRAINT PK_OFA_ACCESS_PROF
	PRIMARY KEY (ACCESS_PROFILE_ID);

CREATE TABLE OFA_ACCESS_PROFILE_ROLETYPE ( 
	ACCESS_PROFILE_ID	BIGINT,
	ROLE_TYPE_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX AC_PF_RTP_I1
	ON OFA_ACCESS_PROFILE_ROLETYPE(ACCESS_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE TABLE REPORT_REQUEST ( 
	USER_ID   	VARCHAR(60),
	REPORT_ID 	VARCHAR(60),
	SID       	VARCHAR(20),
	REQUEST_TS	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE SCI_BKG_LOCTN ( 
	CMS_BKG_LOCTN_ID         	BIGINT NOT NULL,
	BKL_BKG_LOCTN_ID         	BIGINT NOT NULL,
	BKL_BKG_LOCTN_DESC       	VARCHAR(100) NOT NULL,
	BKL_CNTRY_ISO_CODE       	CHARACTER(2) NOT NULL,
	BKL_BKG_LOCTN_ORGN_NUM   	VARCHAR(40) NOT NULL,
	BKL_BKG_LOCTN_ORGN_VALUE 	VARCHAR(10) NOT NULL,
	BKL_FINANCE_RPT_UNIT     	VARCHAR(5),
	PROGRESS_STATUS_NUM      	VARCHAR(40),
	PROGRESS_STATUS_VALUE    	VARCHAR(10),
	BKG_LOCTN_EXT_SYS_CHK_IND	CHARACTER(1),
	BKG_LOCTN_INSTRC_CHK_IND 	CHARACTER(1),
	BKG_LOCTN_CHK_IND        	CHARACTER(1),
	BKG_EMP_CODE_MAP_CHK_IND 	CHARACTER(1),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	INTEGER,
	UPDATE_STATUS_IND        	CHARACTER(1),
	LOCK_IND                 	CHARACTER(1),
	LOCK_USER_ID             	BIGINT,
	CHANGE_IND               	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SCI_BKG_LOCTN
	ADD CONSTRAINT PK_BKG_LOCTN
	PRIMARY KEY (CMS_BKG_LOCTN_ID);

ALTER TABLE SCI_BKG_LOCTN
	ADD CONSTRAINT XUQBKG_LOCTN
	UNIQUE (BKL_BKG_LOCTN_ID);

CREATE TABLE SCI_BKG_LOCTN_EMP_CODE ( 
	CMS_BKG_LOCTN_EMP_CODE_ID	BIGINT NOT NULL,
	BLE_ID                   	BIGINT NOT NULL,
	BLE_BKG_LOCTN_ID         	BIGINT NOT NULL,
	BLE_EMP_CODE             	VARCHAR(10) NOT NULL,
	BLE_EMP_CODE_DESC        	VARCHAR(100),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	INTEGER,
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	CMS_BKG_LOCTN_ID         	BIGINT,
	BLE_EMP_ID               	BIGINT,
	BLE_EMP_STAFF_ID         	BIGINT,
	BLE_EMP_STAFF_DESC       	VARCHAR(50) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOC_EMP_COD_I1
	ON SCI_BKG_LOCTN_EMP_CODE(CMS_BKG_LOCTN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_BKG_LOCTN_EMP_CODE
	ADD CONSTRAINT PK_BKG_LOC_EMP_COD
	PRIMARY KEY (CMS_BKG_LOCTN_EMP_CODE_ID);

ALTER TABLE SCI_BKG_LOCTN_EMP_CODE
	ADD CONSTRAINT XUQBKG_LOC_EMP_COD
	UNIQUE (BLE_BKG_LOCTN_ID, BLE_EMP_CODE);

CREATE TABLE SCI_BKG_LOCTN_EXT_SYS_MAP ( 
	CMS_BKG_LOCTN_EXT_SYS_MAP_ID	BIGINT NOT NULL,
	BKX_BKG_LOCTN_ID            	BIGINT NOT NULL,
	BKX_BKG_EXT_SYS_MAP_ID      	BIGINT NOT NULL,
	BKX_EXT_SYS_CODE_NUM        	VARCHAR(40) NOT NULL,
	BKX_EXT_SYS_CODE_VALUE      	VARCHAR(10) NOT NULL,
	BKX_ID                      	BIGINT,
	CREATE_USER_ID              	BIGINT,
	LAST_UPDATE_USER_ID         	BIGINT,
	VERIFY_USER_ID              	BIGINT,
	CREATE_DATE                 	TIMESTAMP,
	LAST_UPDATE_DATE            	TIMESTAMP,
	VERIFY_DATE                 	TIMESTAMP,
	UPDATE_COUNT                	BIGINT,
	UPDATE_STATUS_IND           	CHARACTER(1),
	CHANGE_IND                  	CHARACTER(1),
	CMS_BKG_LOCTN_ID            	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX EXT_SYS_MAP_I1
	ON SCI_BKG_LOCTN_EXT_SYS_MAP(BKX_BKG_LOCTN_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX EXT_SYS_MAP_I2
	ON SCI_BKG_LOCTN_EXT_SYS_MAP(CMS_BKG_LOCTN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_BKG_LOCTN_EXT_SYS_MAP
	ADD CONSTRAINT PK_BKG_EXT_SYSMAP
	PRIMARY KEY (CMS_BKG_LOCTN_EXT_SYS_MAP_ID);

ALTER TABLE SCI_BKG_LOCTN_EXT_SYS_MAP
	ADD CONSTRAINT BKG_LOC_EXT_SYSMAP
	UNIQUE (BKX_BKG_EXT_SYS_MAP_ID, BKX_BKG_LOCTN_ID, BKX_EXT_SYS_CODE_NUM, BKX_EXT_SYS_CODE_VALUE);

CREATE TABLE SCI_COUNTRY ( 
	CMS_COUNTRY_ID        	BIGINT NOT NULL,
	CTR_CNTRY_ISO_CODE    	CHARACTER(2) NOT NULL,
	CTR_CNTRY_NAME        	VARCHAR(60) NOT NULL,
	CTR_AREA_CODE_NUM     	VARCHAR(40),
	CTR_AREA_CODE_VALUE   	VARCHAR(10),
	CTR_CRRNCY_ISO_CODE   	CHARACTER(3),
	CTR_RISK_CTGRY_NUM    	VARCHAR(40),
	CTR_RISK_CTGRY_VALUE  	VARCHAR(10),
	CTR_SVRTY_CODE        	VARCHAR(40),
	CTR_WITH_HOLD_TAX_RATE	DECIMAL(6,2),
	CTR_BKG_LOCTN_IND     	CHARACTER(1),
	CTR_DATA_PROTECT_IND  	CHARACTER(1),
	CTR_EU_CNTRY_IND      	CHARACTER(1),
	CTR_OECD_CNTRY_IND    	CHARACTER(1),
	CTR_OWN_CLRNG_SYS_IND 	CHARACTER(1),
	CTR_WORK_DAY_FRI_IND  	CHARACTER(1),
	CTR_WORK_DAY_SAT_IND  	CHARACTER(1),
	CTR_WORK_DAY_SUN_IND  	CHARACTER(1),
	PROGRESS_STATUS_NUM   	VARCHAR(40),
	CNTRY_INSTRC_CHK_IND  	CHARACTER(1),
	PROGRESS_STATUS_VALUE 	VARCHAR(10),
	CNTRY_CHK_IND         	CHARACTER(1),
	CREATE_USER_ID        	BIGINT,
	LAST_UPDATE_USER_ID   	BIGINT,
	VERIFY_USER_ID        	BIGINT,
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	LOCK_IND              	CHARACTER(1),
	LOCK_USER_ID          	BIGINT,
	CHANGE_IND            	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CTN_I1
	ON SCI_COUNTRY(CTR_AREA_CODE_NUM)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT PK_COUNTRY
	PRIMARY KEY (CMS_COUNTRY_ID);

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT XUQCOUNTRY
	UNIQUE (CTR_CNTRY_ISO_CODE);

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR297
	CHECK (CTR_WORK_DAY_SUN_IND IN ('Y','N'));

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR296
	CHECK (CTR_WORK_DAY_SAT_IND IN ('Y','N'));

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR295
	CHECK (CTR_WORK_DAY_FRI_IND IN ('Y','N'));

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR294
	CHECK (CTR_OWN_CLRNG_SYS_IND IN ('Y','N'));

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR293
	CHECK (CTR_OECD_CNTRY_IND IN ('Y','N'));

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR292
	CHECK (CTR_EU_CNTRY_IND IN ('Y','N'));

ALTER TABLE SCI_COUNTRY
	ADD CONSTRAINT INDICATOR291
	CHECK (CTR_DATA_PROTECT_IND IN ('Y','N'));

CREATE TABLE SCI_CPC_BKG_LOCTN_MAP ( 
	CMS_CPC_BKG_LOCTN_MAP_ID	BIGINT NOT NULL,
	CBM_ID                  	BIGINT NOT NULL,
	CBM_BKG_LOCTN_ID        	BIGINT NOT NULL,
	CBM_CPC_ZONE_NUM        	VARCHAR(40) NOT NULL,
	CBM_CPC_ZONE_VALUE      	VARCHAR(10) NOT NULL,
	CPC_BKG_LOCTN_CHK_IND   	CHARACTER(1),
	PROGRESS_STATUS_NUM     	VARCHAR(40),
	CPC_INSTRC_CHK_IND      	CHARACTER(1),
	PROGRESS_STATUS_VALUE   	VARCHAR(10),
	CREATE_USER_ID          	BIGINT,
	LAST_UPDATE_USER_ID     	BIGINT,
	VERIFY_USER_ID          	BIGINT,
	CREATE_DATE             	TIMESTAMP,
	LAST_UPDATE_DATE        	TIMESTAMP,
	VERIFY_DATE             	TIMESTAMP,
	UPDATE_COUNT            	INTEGER,
	UPDATE_STATUS_IND       	CHARACTER(1),
	LOCK_IND                	CHARACTER(1),
	LOCK_USER_ID            	BIGINT,
	CHANGE_IND              	CHARACTER(1),
	CMS_BKG_LOCTN_ID        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LOC_MAP_I1
	ON SCI_CPC_BKG_LOCTN_MAP(CMS_BKG_LOCTN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_CPC_BKG_LOCTN_MAP
	ADD CONSTRAINT PK_CPC_BKG_LOC_MAP
	PRIMARY KEY (CMS_CPC_BKG_LOCTN_MAP_ID);

ALTER TABLE SCI_CPC_BKG_LOCTN_MAP
	ADD CONSTRAINT XUQCPC_BKG_LOC_MAP
	UNIQUE (CBM_BKG_LOCTN_ID, CBM_CPC_ZONE_NUM, CBM_CPC_ZONE_VALUE);

CREATE TABLE SCI_CURRENCY ( 
	CMS_CURRENCY_ID       	BIGINT NOT NULL,
	CUR_CRRNCY_ISO_CODE   	CHARACTER(3) NOT NULL,
	CUR_CRRNCY_DESC       	VARCHAR(100) NOT NULL,
	CUR_CRRNCY_FORMAT     	VARCHAR(20),
	CUR_CNTRY_ISO_CODE    	CHARACTER(2),
	CUR_MRP_RANGE         	DECIMAL(6,2),
	CUR_DECIMAL_PLACE_NUM 	BIGINT,
	CUR_START_DATE        	TIMESTAMP,
	CUR_SPOT_TXN_DAY_NUM  	BIGINT,
	CUR_INTRST_BASIS_NUM  	VARCHAR(40),
	CUR_INTRST_BASIS_VALUE	VARCHAR(10),
	CUR_REPO_BASIS_NUM    	VARCHAR(40),
	CUR_REPO_BASIS_VALUE  	VARCHAR(10),
	CUR_TENOR_BASIS_NUM   	VARCHAR(40),
	CUR_TENOR_BASIS_VALUE 	VARCHAR(10),
	CUR_EURO_FIX_RATE     	DECIMAL(6,2),
	CUR_RSTRCT_CRRNCY_IND 	CHARACTER(1),
	CUR_NET_CRRNCY_IND    	CHARACTER(1),
	CUR_MAJOR_CRRNCY_IND  	CHARACTER(1),
	CUR_EURO_CRRNCY_IND   	CHARACTER(1),
	CUR_CLS_ELIGIBLE_IND  	CHARACTER(1),
	PROGRESS_STATUS_NUM   	VARCHAR(40),
	PROGRESS_STATUS_VALUE 	VARCHAR(10),
	CRRNCY_CHK_IND        	CHARACTER(1),
	CRRNCY_INSTRC_CHK_IND 	CHARACTER(1),
	CREATE_USER_ID        	BIGINT,
	LAST_UPDATE_USER_ID   	BIGINT,
	VERIFY_USER_ID        	BIGINT,
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	LOCK_IND              	CHARACTER(1),
	LOCK_USER_ID          	BIGINT,
	CHANGE_IND            	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT PK_CURRENCY
	PRIMARY KEY (CMS_CURRENCY_ID);

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT XUQCURRENCY
	UNIQUE (CUR_CRRNCY_ISO_CODE);

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT INDICATOR306
	CHECK (CUR_CLS_ELIGIBLE_IND IN ('Y','N'));

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT INDICATOR305
	CHECK (CUR_EURO_CRRNCY_IND IN ('Y','N'));

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT INDICATOR304
	CHECK (CUR_MAJOR_CRRNCY_IND IN ('Y','N'));

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT INDICATOR303
	CHECK (CUR_NET_CRRNCY_IND IN ('Y','N'));

ALTER TABLE SCI_CURRENCY
	ADD CONSTRAINT INDICATOR302
	CHECK (CUR_RSTRCT_CRRNCY_IND IN ('Y','N'));

CREATE TABLE SCI_EMP_EMP_CODE_MAP ( 
	EEC_EMP_ID        	BIGINT NOT NULL,
	EEC_EMP_CODE      	VARCHAR(10) NOT NULL,
	EEC_BKG_LOC_CTRY  	VARCHAR(20),
	EEC_BKG_LOC_ORG   	VARCHAR(20),
	UPDATE_STATUS_IND 	CHARACTER(1),
	EEC_SYS_GEN_MAP_ID	BIGINT NOT NULL,
	EEC_ID            	BIGINT,
	EEC_BKG_LOC_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX EMP_COD_MAP_I1
	ON SCI_EMP_EMP_CODE_MAP(EEC_EMP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_EMP_EMP_CODE_MAP
	ADD CONSTRAINT UNQ_EMP_EMP_CODE
	UNIQUE (EEC_SYS_GEN_MAP_ID);

CREATE TABLE SCI_EMP_PROFILE ( 
	EMP_ID                   	BIGINT NOT NULL,
	EMP_STAFF_ID_NUM         	VARCHAR(40),
	EMP_BASE_BKG_LOC_CTRY    	CHARACTER(2),
	EMP_BASE_BKG_LOC_ORG     	VARCHAR(20),
	EMP_NAME                 	VARCHAR(100) NOT NULL,
	EMP_TEAM                 	VARCHAR(10),
	EMP_STATUS_NUM           	VARCHAR(40),
	EMP_STATUS_VALUE         	VARCHAR(10),
	EMP_COIN_NUM             	VARCHAR(10),
	UPDATE_STATUS_IND        	CHARACTER(1),
	EMP_STAFF_ID_VALUE       	VARCHAR(10),
	EMP_BASE_BKG_LOC_ID      	BIGINT,
	EMP_PROGRESS_STATUS_NUM  	VARCHAR(40),
	EMP_PROGRESS_STATUS_VALUE	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SCI_EMP_PROFILE
	ADD CONSTRAINT PK_EMP_PROFILE
	PRIMARY KEY (EMP_ID);

CREATE TABLE SCI_GRP_CREDIT_GRADE ( 
	CMS_GRP_CREDIT_GRADE_ID  	BIGINT NOT NULL,
	GCG_GRP_ID               	BIGINT NOT NULL,
	GCG_ID                   	BIGINT NOT NULL,
	GCG_CRDT_GRADE_TYPE_NUM  	VARCHAR(40) NOT NULL,
	GCG_CRDT_GRADE_TYPE_VALUE	VARCHAR(10) NOT NULL,
	GCG_CRDT_GRADE_CODE_NUM  	VARCHAR(40) NOT NULL,
	GCG_CRDT_GRADE_CODE_VALUE	VARCHAR(10) NOT NULL,
	GCG_CRDT_GRADE_START_DATE	TIMESTAMP NOT NULL,
	GCG_CRDT_GRADE_DESC      	VARCHAR(100),
	GCG_APPR_EMP_ID          	BIGINT,
	GCG_APPR_EMP_TYPE_NUM    	VARCHAR(40),
	GCG_APPR_EMP_TYPE_VALUE  	VARCHAR(10),
	GCG_APPR_EMP_CODE        	VARCHAR(10),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	BIGINT,
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	CMS_GRP_PROFILE_ID       	BIGINT,
	GCG_APPD_LOC_CTRY        	CHARACTER(2),
	GCG_APPD_LOC_ORG         	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CRP_CRD_GRD_I1
	ON SCI_GRP_CREDIT_GRADE(CMS_GRP_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_GRP_CREDIT_GRADE
	ADD CONSTRAINT PK_GRP_CRDT_GRADE
	PRIMARY KEY (CMS_GRP_CREDIT_GRADE_ID);

ALTER TABLE SCI_GRP_CREDIT_GRADE
	ADD CONSTRAINT XUQGRP_CRDT_GRADE
	UNIQUE (GCG_GRP_ID, GCG_ID);

CREATE TABLE SCI_GRP_LE_LE_MAP ( 
	CMS_GRP_LE_LE_MAP_ID	BIGINT NOT NULL,
	GLL_GRP_ID          	BIGINT NOT NULL,
	GLL_PRNT_LE_ID      	VARCHAR(20) NOT NULL,
	GLL_REL_STATUS_NUM  	VARCHAR(40) NOT NULL,
	GLL_CHILD_LE_ID     	VARCHAR(20) NOT NULL,
	GLL_ID              	BIGINT NOT NULL,
	GLL_REL_STATUS_VALUE	VARCHAR(10) NOT NULL,
	GLL_OWNSP_PERCENT   	DECIMAL(5,2) NOT NULL,
	CREATE_USER_ID      	BIGINT,
	LAST_UPDATE_USER_ID 	BIGINT,
	VERIFY_USER_ID      	BIGINT,
	CREATE_DATE         	TIMESTAMP,
	LAST_UPDATE_DATE    	TIMESTAMP,
	VERIFY_DATE         	TIMESTAMP,
	UPDATE_COUNT        	BIGINT,
	UPDATE_STATUS_IND   	CHARACTER(1),
	CHANGE_IND          	CHARACTER(1),
	CMS_GRP_PROFILE_ID  	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LE_LE_MAP_I1
	ON SCI_GRP_LE_LE_MAP(CMS_GRP_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_GRP_LE_LE_MAP
	ADD CONSTRAINT PK_GRP_LE_LE_MAP
	PRIMARY KEY (CMS_GRP_LE_LE_MAP_ID);

ALTER TABLE SCI_GRP_LE_LE_MAP
	ADD CONSTRAINT XUQGRP_LE_LE_MAP
	UNIQUE (GLL_GRP_ID, GLL_PRNT_LE_ID, GLL_CHILD_LE_ID, GLL_ID);

CREATE TABLE SCI_GRP_LE_MAP ( 
	CMS_GRP_LE_MAP_ID     	BIGINT NOT NULL,
	GLE_GRP_ID            	BIGINT NOT NULL,
	GLE_LE_ID             	VARCHAR(20) NOT NULL,
	GLE_LINK_TYPE_NUM     	VARCHAR(40) NOT NULL,
	GLE_ID                	BIGINT NOT NULL,
	GLE_LINK_TYPE_VALUE   	VARCHAR(10) NOT NULL,
	CREATE_USER_ID        	BIGINT,
	LAST_UPDATE_USER_ID   	BIGINT,
	VERIFY_USER_ID        	BIGINT,
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	CHANGE_IND            	CHARACTER(1),
	CMS_LE_MAIN_PROFILE_ID	BIGINT,
	CMS_GRP_PROFILE_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX GRP_LE_MAP_I1
	ON SCI_GRP_LE_MAP(CMS_GRP_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX GRP_LE_MAP_I2
	ON SCI_GRP_LE_MAP(GLE_LE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX GRP_LE_MAP_I3
	ON SCI_GRP_LE_MAP(CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_GRP_LE_MAP
	ADD CONSTRAINT PK_GRP_LE_MAP
	PRIMARY KEY (CMS_GRP_LE_MAP_ID);

ALTER TABLE SCI_GRP_LE_MAP
	ADD CONSTRAINT XUQGRP_LE_MAP
	UNIQUE (GLE_GRP_ID, GLE_LE_ID, GLE_ID);

CREATE TABLE SCI_GRP_MAP ( 
	CMS_GRP_MAP_ID     	BIGINT NOT NULL,
	GMP_GRP_ID         	BIGINT NOT NULL,
	GMP_CHILD_GRP_ID   	BIGINT NOT NULL,
	CREATE_USER_ID     	BIGINT,
	GMP_ID             	BIGINT NOT NULL,
	LAST_UPDATE_USER_ID	BIGINT,
	VERIFY_USER_ID     	BIGINT,
	CREATE_DATE        	TIMESTAMP,
	LAST_UPDATE_DATE   	TIMESTAMP,
	VERIFY_DATE        	TIMESTAMP,
	UPDATE_COUNT       	BIGINT,
	UPDATE_STATUS_IND  	CHARACTER(1),
	CHANGE_IND         	CHARACTER(1),
	CMS_GRP_PROFILE_ID 	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX GRP_MAP_I1
	ON SCI_GRP_MAP(CMS_GRP_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_GRP_MAP
	ADD CONSTRAINT PK_GRP_MAP
	PRIMARY KEY (CMS_GRP_MAP_ID);

ALTER TABLE SCI_GRP_MAP
	ADD CONSTRAINT XUQGRP_MAP
	UNIQUE (GMP_GRP_ID, GMP_CHILD_GRP_ID, GMP_ID);

CREATE TABLE SCI_GRP_PROFILE ( 
	CMS_GRP_PROFILE_ID     	BIGINT NOT NULL,
	GRP_ID                 	BIGINT NOT NULL,
	GRP_NAME               	VARCHAR(100) NOT NULL,
	GRP_ULTIMATE_IND       	CHARACTER(1) NOT NULL,
	GRP_DMCL_CNTRY_ISO_CODE	CHARACTER(2) NOT NULL,
	GRP_SGMNT_TYPE_NUM     	VARCHAR(40) NOT NULL,
	GRP_SGMNT_TYPE_VALUE   	VARCHAR(10) NOT NULL,
	GRP_BIZ_TYPE_NUM       	VARCHAR(40) NOT NULL,
	GRP_BIZ_TYPE_VALUE     	VARCHAR(10) NOT NULL,
	GRP_STATUS_NUM         	VARCHAR(40) NOT NULL,
	GRP_STATUS_VALUE       	VARCHAR(10) NOT NULL,
	GRP_EMP_ID             	BIGINT NOT NULL,
	GRP_EMP_TYPE_NUM       	VARCHAR(40) NOT NULL,
	GRP_EMP_TYPE_VALUE     	VARCHAR(10) NOT NULL,
	GRP_EMP_CODE           	VARCHAR(10) NOT NULL,
	PROGRESS_STATUS_NUM    	VARCHAR(40),
	PROGRESS_STATUS_VALUE  	VARCHAR(10),
	GRP_INSTRC_REF_CHK_IND 	CHARACTER(1),
	GRP_MAP_CHK_IND        	CHARACTER(1),
	GRP_LE_MAP_CHK_IND     	CHARACTER(1),
	GRP_LE_LE_MAP_CHK_IND  	CHARACTER(1),
	GRP_CRDT_GRADE_CHK_IND 	CHARACTER(1),
	GRP_PROFILE_CHK_IND    	CHARACTER(1),
	CREATE_USER_ID         	BIGINT,
	LAST_UPDATE_USER_ID    	BIGINT,
	VERIFY_USER_ID         	BIGINT,
	CREATE_DATE            	TIMESTAMP,
	LAST_UPDATE_DATE       	TIMESTAMP,
	VERIFY_DATE            	TIMESTAMP,
	UPDATE_COUNT           	BIGINT,
	UPDATE_STATUS_IND      	CHARACTER(1),
	LOCK_IND               	CHARACTER(1),
	LOCK_USER_ID           	BIGINT,
	CHANGE_IND             	CHARACTER(1),
	GRP_EMP_LOC_CTRY       	CHARACTER(2),
	GRP_EMP_LOC_ORG        	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SCI_GRP_PROFILE
	ADD CONSTRAINT PK_GRP_PROFILE
	PRIMARY KEY (CMS_GRP_PROFILE_ID);

ALTER TABLE SCI_GRP_PROFILE
	ADD CONSTRAINT XUQGRP_PROFILE
	UNIQUE (GRP_ID);

ALTER TABLE SCI_GRP_PROFILE
	ADD CONSTRAINT INDICATOR316
	CHECK (GRP_ULTIMATE_IND IN ('Y','N'));

CREATE TABLE SCI_INSTRUCT_REF ( 
	CMS_INSTRUCT_REF_ID        	BIGINT NOT NULL,
	SCI_INSTRUCT_REF_ID        	BIGINT,
	SCI_INSTRUCT_REF_NUMBER    	VARCHAR(20),
	SCI_INSTRUCT_REF_TYPE_CODE 	VARCHAR(20),
	SCI_INSTRUCT_REF_TYPE_VALUE	VARCHAR(20),
	CMS_INSTRUCT_REFERRED_ID   	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SCI_INSTRUCT_REF
	ADD CONSTRAINT PK_SCI_INSTRCT_REF
	PRIMARY KEY (CMS_INSTRUCT_REF_ID);


CREATE TABLE SCI_LMT_CREDIT_GRADE ( 
  CMS_LMT_CREDIT_GRADE_ID	BIGINT	NOT NULL,
  LCG_ID	BIGINT,
  LCG_LMT_ID	VARCHAR(20),
  LCG_CRDT_GRADE_TYPE_NUM	VARCHAR(40),
  LCG_CRDT_GRADE_TYPE_VALUE	VARCHAR(10),
  LCG_CRDT_GRADE_CODE_NUM	VARCHAR(40),
  LCG_CRDT_GRADE_CODE_VALUE	VARCHAR(10),
  LCG_CRDT_GRADE_START_DATE	TIMESTAMP,
  LCG_CRDT_GRADE_DESC	VARCHAR(100),
  LCG_APPR_EMP_ID	BIGINT,
  CREATE_USER_ID	BIGINT,
  LAST_UPDATE_USER_ID	BIGINT,
  VERIFY_USER_ID	BIGINT,
  CREATE_DATE	TIMESTAMP,
  LAST_UPDATE_DATE	TIMESTAMP,
  VERIFY_DATE	TIMESTAMP,
  UPDATE_COUNT	BIGINT,
  UPDATE_STATUS_IND	CHARACTER(1),
  CHANGE_IND	CHARACTER(1),
  LCG_APPR_BOOKING_LOC	VARCHAR(20),
  LCG_APPR_EMP_TYPE	VARCHAR(20),
  LOS_AA_NUMBER	VARCHAR(35)
) 
  IN CMS_SMALL_DATA
  INDEX IN CMS_INDEX;

ALTER TABLE SCI_LMT_CREDIT_GRADE
  DATA CAPTURE NONE
  LOCKSIZE ROW
  APPEND OFF
  NOT VOLATILE;

ALTER TABLE SCI_LMT_CREDIT_GRADE
  ADD CONSTRAINT PK_LM_CREDIT_GRADE PRIMARY KEY
    (CMS_LMT_CREDIT_GRADE_ID);

CREATE TABLE SCI_LE_CREDIT_GRADE ( 
	CMS_LE_CREDIT_GRADE_ID   	BIGINT NOT NULL,
	LCG__ID                  	BIGINT,
	LCG_LE_ID                	VARCHAR(20),
	LCG_CRDT_GRADE_TYPE_NUM  	VARCHAR(40),
	LCG_CRDT_GRADE_TYPE_VALUE	VARCHAR(10),
	LCG_CRDT_GRADE_CODE_NUM  	VARCHAR(40),
	LCG_CRDT_GRADE_CODE_VALUE	VARCHAR(10),
	LCG_CRDT_GRADE_START_DATE	TIMESTAMP,
	LCG_CRDT_GRADE_DESC      	VARCHAR(500),
	LCG_APPR_EMP_ID          	BIGINT,
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	BIGINT,
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	LCG_APPR_BOOKING_LOC     	VARCHAR(20),
	LCG_APPR_EMP_TYPE        	VARCHAR(20),
	CMS_MAIN_PROFILE_ID      	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LE_CRD_GRD_I4
	ON SCI_LE_CREDIT_GRADE(LCG_LE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_CRD_GRD_I1
	ON SCI_LE_CREDIT_GRADE(CMS_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_CRD_GRD_I3
	ON SCI_LE_CREDIT_GRADE(LCG_CRDT_GRADE_CODE_VALUE)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_CRD_GRD_I5
	ON SCI_LE_CREDIT_GRADE(LCG_CRDT_GRADE_TYPE_VALUE, CMS_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_CRD_GRD_I2
	ON SCI_LE_CREDIT_GRADE(LCG_CRDT_GRADE_START_DATE)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LE_CREDIT_GRADE
	ADD CONSTRAINT PK_LE_CREDIT_GRADE
	PRIMARY KEY (CMS_LE_CREDIT_GRADE_ID);

CREATE TABLE SCI_LE_CREDIT_STATUS ( 
	CMS_LE_CREDIT_STATUS_ID   	BIGINT NOT NULL,
	LCS_ID                    	BIGINT,
	LCS_LE_ID                 	VARCHAR(20),
	LCS_CRDT_STATUS_TYPE_NUM  	VARCHAR(40),
	LCS_CRDT_STATUS_TYPE_VALUE	VARCHAR(10),
	LCS_CRDT_STATUS_CODE_NUM  	VARCHAR(40),
	LCS_CRDT_STATUS_CODE_VALUE	VARCHAR(10),
	LCS_CRDT_STATUS_START_DATE	TIMESTAMP,
	LCS_CRDT_STATUS_DESC      	VARCHAR(100),
	CREATE_USER_ID            	BIGINT,
	LAST_UPDATE_USER_ID       	BIGINT,
	VERIFY_USER_ID            	BIGINT,
	CREATE_DATE               	TIMESTAMP,
	LAST_UPDATE_DATE          	TIMESTAMP,
	VERIFY_DATE               	TIMESTAMP,
	UPDATE_COUNT              	BIGINT,
	UPDATE_STATUS_IND         	CHARACTER(1),
	CHANGE_IND                	CHARACTER(1),
	CMS_LE_MAIN_PROFILE_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LE_CRD_STA_I2
	ON SCI_LE_CREDIT_STATUS(LCS_LE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_CRD_STA_I1
	ON SCI_LE_CREDIT_STATUS(CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LE_CREDIT_STATUS
	ADD CONSTRAINT PK_LE_CRDT_STATUS
	PRIMARY KEY (CMS_LE_CREDIT_STATUS_ID);

CREATE TABLE SCI_LE_ISIC_DTL ( 
	CMS_LE_ISIC_DTL_ID    	BIGINT NOT NULL,
	LID_ID                	BIGINT,
	LID_LE_ID             	VARCHAR(20),
	LID_ISIC_TYPE_NUM     	VARCHAR(40),
	LID_ISIC_TYPE_VALUE   	VARCHAR(10),
	LID_ISIC_CODE_NUM     	VARCHAR(40),
	LID_ISIC_CODE_VALUE   	VARCHAR(10),
	LID_ISIC_START_DATE   	TIMESTAMP,
	LID_ISIC_WEIGHTAGE    	VARCHAR(30),
	CREATE_USER_ID        	BIGINT,
	LAST_UPDATE_USER_ID   	BIGINT,
	VERIFY_USER_ID        	BIGINT,
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	CHANGE_IND            	CHARACTER(1),
	CMS_LE_MAIN_PROFILE_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LE_ISIC_DTL_I1
	ON SCI_LE_ISIC_DTL(CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LE_ISIC_DTL
	ADD CONSTRAINT PKSCI_LE_ISIC_DTL
	PRIMARY KEY (CMS_LE_ISIC_DTL_ID);

CREATE TABLE SCI_LE_KYC ( 
	CMS_LE_KYC_ID       	BIGINT NOT NULL,
	LKY_LE_ID           	VARCHAR(20),
	LKY_ORIG_LOC        	VARCHAR(20),
	LKY_RISK_RATING     	VARCHAR(100),
	LKY_LAST_REVIEW_DATE	TIMESTAMP,
	LKY_NEXT_REVIEW_DATE	TIMESTAMP,
	LKY_CDD_SUBMIT_IND  	CHARACTER(1),
	LKY_KYC_SUBMIT_IND  	CHARACTER(1),
	LKY_GIC_SUBMIT_IND  	CHARACTER(1),
	LKY_EXCEP_APPR_IND  	CHARACTER(1),
	CMS_MAIN_PROFILE_ID 	BIGINT,
	LKY_ID              	BIGINT,
	UPDATE_STATUS_IND   	CHARACTER(1),
	CHANGE_IND          	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LE_KYC_I1
	ON SCI_LE_KYC(CMS_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LE_KYC
	ADD CONSTRAINT PK_LE_KYC
	PRIMARY KEY (CMS_LE_KYC_ID);

CREATE TABLE SCI_LE_MAIN_PROFILE ( 
	CMS_LE_MAIN_PROFILE_ID      	BIGINT NOT NULL,
	LMP_LE_ID                   	VARCHAR(20),
	LMP_LONG_NAME               	VARCHAR(150),
	LMP_SHORT_NAME              	VARCHAR(80),
	LMP_LEGAL_CONST_NUM         	VARCHAR(40),
	LMP_LEGAL_CONST_VALUE       	VARCHAR(10),
	LMP_INC_CNTRY_ISO_CODE      	CHARACTER(2),
	LMP_INC_NUM_TEXT            	VARCHAR(100),
	LMP_TYPE_NUM                	VARCHAR(40),
	LMP_INC_DATE                	TIMESTAMP,
	LMP_TYPE_VALUE              	VARCHAR(10),
	LMP_REL_START_DATE          	TIMESTAMP,
	LMP_SGMNT_CODE_NUM          	VARCHAR(40),
	LMP_SGMNT_CODE_VALUE        	VARCHAR(10),
	LMP_SUB_SGMNT_CODE_NUM      	VARCHAR(40),
	LMP_SUB_SGMNT_CODE_VALUE    	VARCHAR(10),
	LMP_BSL_SGMNT_CODE_NUM      	VARCHAR(40),
	LMP_BSL_SGMNT_CODE_VALUE    	VARCHAR(10),
	LMP_BIZ_TYPE_NUM            	VARCHAR(40),
	LMP_BSL_SUB_SGMNT_CODE_NUM  	VARCHAR(40),
	LMP_BIZ_TYPE_VALUE          	VARCHAR(10),
	LMP_BSL_SUB_SGMNT_CODE_VALUE	VARCHAR(10),
	LMP_ENV_RISK_GRADE_NUM      	VARCHAR(40),
	LMP_ENV_RISK_GRADE_VALUE    	VARCHAR(10),
	LMP_TOP_1000_BANK_IND       	CHARACTER(1),
	LMP_OPR_STATUS_1_NUM        	VARCHAR(40),
	LMP_OPR_STATUS_1_VALUE      	VARCHAR(10),
	LMP_OPR_STATUS_1_EFF_DATE   	TIMESTAMP,
	LMP_RFRRL_STATUS_NUM        	VARCHAR(40),
	LMP_RFRRL_STATUS_VALUE      	VARCHAR(10),
	LE_REG_ADDR_CHK_IND         	CHARACTER(1),
	LE_INSTRC_REF_CHK_IND       	CHARACTER(1),
	LE_ISIC_DTL_CHK_IND         	CHARACTER(1),
	LE_CREDIT_GRADE_CHK_IND     	CHARACTER(1),
	LE_CREDIT_STATUS_CHK_IND    	CHARACTER(1),
	LE_KYC_CHK_IND              	CHARACTER(1),
	LE_GRP_MAP_CHK_IND          	CHARACTER(1),
	LE_PROFILE_CHK_IND          	CHARACTER(1),
	LE_SUB_PROFILE_CHK_IND      	CHARACTER(1),
	PROGRESS_STATUS_NUM         	VARCHAR(40),
	PROGRESS_STATUS_VALUE       	VARCHAR(10),
	CREATE_USER_ID              	BIGINT,
	LAST_UPDATE_USER_ID         	BIGINT,
	VERIFY_USER_ID              	BIGINT,
	CREATE_DATE                 	TIMESTAMP,
	LAST_UPDATE_DATE            	TIMESTAMP,
	VERIFY_DATE                 	TIMESTAMP,
	UPDATE_COUNT                	BIGINT,
	UPDATE_STATUS_IND           	CHARACTER(1),
	LOCK_IND                    	CHARACTER(1),
	LOCK_USER_ID                	BIGINT,
	MAKER_HUB_LOCTN_NUM         	VARCHAR(40),
	CHANGE_IND                  	CHARACTER(1),
	MAKER_HUB_LOCTN_VALUE       	VARCHAR(10),
	CMS_BLACK_LISTED_IND        	CHARACTER(1),
	CMS_VERSION_TIME            	BIGINT,
	SOURCE_ID                   	VARCHAR(10),
	LMP_BIZ_GROUP               	VARCHAR(10),
	LMP_TFA_AMT                 	BIGINT,
	LMP_INCOME_CODE_NUM         	VARCHAR(40),
	LMP_INCOME_CODE_VALUE       	VARCHAR(10),
	LMP_BIZ_SECTOR_CODE_NUM     	VARCHAR(40),
	LMP_BIZ_SECTOR_CODE_VALUE   	VARCHAR(10),
	LMP_ID_OLD_NUM              	VARCHAR(40),
	LMP_CTRY_PM_CODE_NUM        	VARCHAR(40),
	LMP_CTRY_PM_CODE_VALUE      	VARCHAR(10),
	LMP_LANG_CODE_NUM           	VARCHAR(40),
	LMP_LANG_CODE_VALUE         	VARCHAR(10),
	LMP_LE_ID_SRC_NUM           	VARCHAR(40),
	LMP_LE_ID_SRC_VALUE         	VARCHAR(10),
	LMP_ID_TYPE_NUM             	VARCHAR(40),
	LMP_ID_TYPE_VALUE           	VARCHAR(10),
	LMP_ID_NUMBER 					VARCHAR(100),
	LMP_ID_COUNTRY_ISSUED 			CHARACTER(2),
	LMP_ID_STARTDATE 				TIMESTAMP,
	LMP_SECOND_ID_TYPE_NUM      	VARCHAR(40),
	LMP_SECOND_ID_TYPE_VALUE    	VARCHAR(10),
	LMP_SECOND_ID_NUMBER 			VARCHAR(100),
	LMP_SECOND_ID_COUNTRY_ISSUED	CHARACTER(2),
	LMP_SECOND_ID_STARTDATE 		TIMESTAMP,
	LMP_THIRD_ID_TYPE_NUM 			VARCHAR(10),
	LMP_THIRD_ID_TYPE_VALUE 		VARCHAR(40),
	LMP_THIRD_ID_NUMBER 			VARCHAR(100),
	LMP_THIRD_ID_COUNTRY_ISSUED 	CHARACTER(2),
	LMP_THIRD_ID_STARTDATE 			TIMESTAMP,
	LMP_ACC_OFFICER_NUM 			VARCHAR(10),
	LMP_ACC_OFFICER_VALUE 			VARCHAR(40)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

-- CREATE INDEX LE_MAIN_PRF_I6
-- 	ON SCI_LE_MAIN_PROFILE(LMP_INC_NUM_TEXT)
-- 	ALLOW REVERSE SCANS ;

-- CREATE INDEX LE_MAIN_PRF_I2
-- 	ON SCI_LE_MAIN_PROFILE(LMP_TYPE_VALUE)
-- 	ALLOW REVERSE SCANS ;

-- CREATE INDEX LE_MAIN_PRF_I4
-- 	ON SCI_LE_MAIN_PROFILE(LMP_SGMNT_CODE_VALUE)
-- 	ALLOW REVERSE SCANS ;

-- CREATE INDEX LE_MAIN_PRF_I7
-- 	ON SCI_LE_MAIN_PROFILE(LMP_ID_OLD_NUM)
-- 	ALLOW REVERSE SCANS ;

CREATE INDEX LE_MAIN_PRF_I1
	ON SCI_LE_MAIN_PROFILE(SOURCE_ID, LMP_LE_ID, CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX LE_MAIN_PRF_I2
	ON SCI_LE_MAIN_PROFILE (LMP_ID_NUMBER, LMP_ID_TYPE_VALUE, LMP_ID_COUNTRY_ISSUED)
	ALLOW REVERSE SCANS;
	
CREATE INDEX LE_MAIN_PRF_I3
	ON SCI_LE_MAIN_PROFILE (LMP_LE_ID, CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS;

-- CREATE INDEX LE_MAIN_PRF_I3
-- 	ON SCI_LE_MAIN_PROFILE(LMP_LEGAL_CONST_VALUE)
-- 	ALLOW REVERSE SCANS ;

create index LE_MAIN_PRF_I8 on sci_le_main_profile
	(LMP_ID_NUMBER, LMP_ID_TYPE_VALUE, LMP_ID_TYPE_NUM) allow reverse scans;
	
create index LE_MAIN_PRF_I9 on sci_le_main_profile
	(LMP_SECOND_ID_NUMBER, LMP_SECOND_ID_TYPE_VALUE,LMP_SECOND_ID_TYPE_NUM) allow reverse scans;
	
create index LE_MAIN_PRF_I10 on sci_le_main_profile
	(LMP_THIRD_ID_NUMBER, LMP_THIRD_ID_TYPE_VALUE, LMP_THIRD_ID_TYPE_NUM) allow reverse scans;

ALTER TABLE SCI_LE_MAIN_PROFILE
	ADD CONSTRAINT PK_LE_MAIN_PROFILE
	PRIMARY KEY (CMS_LE_MAIN_PROFILE_ID);

ALTER TABLE SCI_LE_MAIN_PROFILE
	ADD CONSTRAINT INDICATOR321
	CHECK (LMP_TOP_1000_BANK_IND IN ('Y','N'));

CREATE TABLE SCI_LE_REG_ADDR ( 
	CMS_LE_REG_ADDR_ID    	BIGINT NOT NULL,
	LRA_ID                	BIGINT,
	LRA_LE_ID             	VARCHAR(20),
	LRA_TYPE_NUM          	VARCHAR(40),
	LRA_TYPE_VALUE        	VARCHAR(10),
	LRA_ATTN_PARTY        	VARCHAR(30),
	LRA_ADDR_LINE_1       	VARCHAR(100),
	LRA_ADDR_LINE_2       	VARCHAR(100),
	LRA_CITY_TEXT         	VARCHAR(50),
	LRA_STATE             	VARCHAR(50),
	LRA_POST_CODE         	VARCHAR(30),
	LRA_FAX_NUM_TEXT      	VARCHAR(30),
	LRA_CNTRY_ISO_CODE    	CHARACTER(2),
	LRA_EMAIL_TEXT        	VARCHAR(50),
	LRA_TELEPHONE_TEXT    	VARCHAR(30),
	LRA_TELEX_TEXT        	VARCHAR(30),
	CREATE_USER_ID        	BIGINT,
	LAST_UPDATE_USER_ID   	BIGINT,
	VERIFY_USER_ID        	BIGINT,
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	CHANGE_IND            	CHARACTER(1),
	CMS_LE_MAIN_PROFILE_ID	BIGINT,
	LRA_ADDR_LINE_3       	VARCHAR(100),
	LRA_ADDR_LINE_4       	VARCHAR(100),
	LRA_ADDR_LINE_5       	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX SI_LRA_IDX1
	ON SCI_LE_REG_ADDR(CMS_LE_MAIN_PROFILE_ID, LRA_TYPE_VALUE)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_REG_ADD_I1
	ON SCI_LE_REG_ADDR(CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX IDX_SCI_LE_REG_ADDR_1 
ON SCI_LE_REG_ADDR (LRA_LE_ID ASC ) 
ALLOW REVERSE SCANS;	

ALTER TABLE SCI_LE_REG_ADDR
	ADD CONSTRAINT PK_LE_REG_ADDR
	PRIMARY KEY (CMS_LE_REG_ADDR_ID);

CREATE TABLE SCI_LE_SUB_PROFILE ( 
	CMS_LE_SUB_PROFILE_ID    	BIGINT NOT NULL,
	LSP_ID                   	BIGINT,
	LSP_LE_ID                	VARCHAR(20),
	LSP_SHORT_NAME           	VARCHAR(100),
	LSP_DMCL_REG_NUM_TEXT    	VARCHAR(100),
	LSP_DMCL_CNTRY_ISO_CODE  	CHARACTER(2),
	LSP_SWIFT_CNTRY_CODE     	CHARACTER(2),
	LSP_ORGN_TYPE_NUM        	VARCHAR(40),
	LSP_ORGN_TYPE_VALUE      	VARCHAR(10),
	LSP_DCL_AGREE_IND        	CHARACTER(1),
	LSP_DCL_AGREE_DATE       	TIMESTAMP,
	LSP_LANG_CODE_NUM        	VARCHAR(40),
	LSP_LANG_CODE_VALUE      	VARCHAR(10),
	LSP_REL_START_DATE       	TIMESTAMP,
	LSP_SVC_STD_PRRTY_NUM    	VARCHAR(40),
	LSP_SVC_STD_PRRTY_VALUE  	VARCHAR(10),
	LSP_BANK_SCY_ACT_IND     	CHARACTER(1),
	LSP_TRSRY_APPL_NUM       	VARCHAR(40),
	LSP_TRSRY_APPL_VALUE     	VARCHAR(10),
	LSP_OPR_STATUS_2_NUM     	VARCHAR(40),
	LSP_OPR_STATUS_2_VALUE   	VARCHAR(10),
	LSP_OPR_STATUS_2_EFF_DATE	TIMESTAMP,
	LSP_OFF_ADDR_CHK_IND     	CHARACTER(1),
	LSP_INSTRC_REF_CHK_IND   	CHARACTER(1),
	LSP_SYS_XREF_CHK_IND     	CHARACTER(1),
	LSP_EMP_MAP_CHK_IND      	CHARACTER(1),
	LSP_LMT_PROFILE_CHK_IND  	CHARACTER(1),
	LSP_PLCY_EXCEP_CHK_IND   	CHARACTER(1),
	LSP_APPR_LMTS_CHK_IND    	CHARACTER(1),
	LSP_CO_BORR0W_LMT_CHK_IND	CHARACTER(1),
	LSP_LMTS_XREF_MAP_CHK_IND	CHARACTER(1),
	LSP_COBO_XREF_MAP_CHK_IND	CHARACTER(1),
	LSP_LMTS_SEC_MAP_CHK_IND 	CHARACTER(1),
	PROGRESS_STATUS_NUM      	VARCHAR(40),
	PROGRESS_STATUS_VALUE    	VARCHAR(10),
	LSP_SUB_PROFILE_CHK_IND  	CHARACTER(1),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	BIGINT,
	UPDATE_STATUS_IND        	CHARACTER(1),
	LOCK_IND                 	CHARACTER(1),
	LOCK_USER_ID             	BIGINT,
	LOCK_LE_IND              	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	MAKER_HUB_LOCTN_NUM      	VARCHAR(40),
	MAKER_HUB_LOCTN_VALUE    	VARCHAR(10),
	CMS_LE_MAIN_PROFILE_ID   	BIGINT,
	CMS_VERSION_TIME         	BIGINT,
	CMS_CCC_STATUS           	VARCHAR(30),
	CMS_SUB_ORIG_COUNTRY     	CHARACTER(2),
	CMS_SUB_ORIG_ORGANISATION	VARCHAR(20),
	CMS_NON_BORROWER_IND     	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX TEST_IDX_6
	ON SCI_LE_SUB_PROFILE(CMS_LE_MAIN_PROFILE_ID, CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX XUQLE_SUB_PROFILE
	ON SCI_LE_SUB_PROFILE(LSP_LE_ID, LSP_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LE_SUB_PRF_I2
	ON SCI_LE_SUB_PROFILE(CMS_LE_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX LE_SUB_PRF_I4
-- 	ON SCI_LE_SUB_PROFILE(CMS_NON_BORROWER_IND)
-- 	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LE_SUB_PROFILE
	ADD CONSTRAINT PK_LE_SUB_PROFILE
	PRIMARY KEY (CMS_LE_SUB_PROFILE_ID);

ALTER TABLE SCI_LE_SUB_PROFILE
	ADD CONSTRAINT INDICATOR325
	CHECK (LSP_BANK_SCY_ACT_IND IN ('Y','N'));

ALTER TABLE SCI_LE_SUB_PROFILE
	ADD CONSTRAINT INDICATOR324
	CHECK (LSP_DCL_AGREE_IND IN ('Y','N'));

SET INTEGRITY FOR SCI_LE_SUB_PROFILE OFF;

alter table SCI_LE_SUB_PROFILE
    add column ULSP_SHORT_NAME generated always as (ucase(lsp_short_name));
    
SET INTEGRITY FOR SCI_LE_SUB_PROFILE IMMEDIATE CHECKED FORCE GENERATED;     


create index LE_SUB_PRF_I6 on sci_le_sub_profile
(ulsp_short_name asc, cms_le_sub_profile_id )
allow reverse scans;
	
CREATE TABLE SCI_LIMITS_REPORT ( 
	LMT_REPORT_ID            	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID     	BIGINT NOT NULL,
	CMS_LIMIT_PROFILE_ID     	BIGINT,
	LMT_ID                   	BIGINT,
	LMT_PRD_TYPE_NUM         	VARCHAR(40),
	LMT_PRD_TYPE_VALUE       	VARCHAR(10),
	LMT_TYPE_NUM             	VARCHAR(40),
	LMT_TYPE_VALUE           	VARCHAR(10),
	LMT_AMT                  	DECIMAL(20,2),
	LMT_SEC_TYPE_NUM         	VARCHAR(40),
	LMT_SEC_TYPE_VALUE       	VARCHAR(10),
	LMT_CRRNCY_ISO_CODE      	CHARACTER(3),
	LMT_OUTER_LMT_ID         	BIGINT,
	LMT_EXPRY_DATE           	TIMESTAMP,
	LMT_INTRST_BASE_NUM      	VARCHAR(40),
	LMT_TENOR                	BIGINT,
	LMT_INTRST_BASE_VALUE    	VARCHAR(10),
	LMT_INTRST_MARGIN        	VARCHAR(30),
	LMT_CMMSN                	VARCHAR(30),
	LMT_FEE                  	VARCHAR(30),
	LMT_CONDTN_TEXT          	VARCHAR(255),
	LMT_ADVISE_IND           	CHARACTER(1),
	LMT_CMMTD_IND            	CHARACTER(1),
	LMT_SHARE_IND            	CHARACTER(1),
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	LMT_TENOR_BASIS_NUM      	VARCHAR(40),
	LMT_LLP_ID               	BIGINT,
	LMT_TENOR_BASIS_VALUE    	VARCHAR(10),
	LMT_LE_ID                	VARCHAR(20),
	LMT_LSP_ID               	BIGINT,
	CMS_LIMIT_STATUS         	VARCHAR(20),
	CMS_BKG_COUNTRY          	CHARACTER(2),
	CMS_BKG_ORGANISATION     	VARCHAR(20),
	CMS_IS_LIMIT_EXISTING_IND	CHARACTER(1),
	CMS_OUTER_LMT_REF        	VARCHAR(20),
	TIMESTAMP                	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE SCI_LSP_APPR_LMTS ( 
	CMS_LSP_APPR_LMTS_ID          	BIGINT NOT NULL,
	CMS_LIMIT_PROFILE_ID          	BIGINT,
	LMT_ID                        	VARCHAR(43),
	LOS_LMT_ID            			VARCHAR(43),
	ACF_NO            				VARCHAR(40),
	LMT_BKG_LOCTN_ID              	BIGINT,
	LMT_PRD_TYPE_NUM              	VARCHAR(40),
	LMT_PRD_TYPE_VALUE            	VARCHAR(60),
	LMT_TYPE_NUM                  	VARCHAR(40),
	LMT_TYPE_VALUE                	VARCHAR(10),
	LMT_AMT                       	DECIMAL(20,2),
	LMT_SEC_TYPE_NUM              	VARCHAR(40),
	LMT_SEC_TYPE_VALUE            	VARCHAR(10),
	LMT_CRRNCY_ISO_CODE           	CHARACTER(3),
	LMT_OUTER_LMT_ID              	BIGINT,
	LMT_EXPRY_DATE                	TIMESTAMP,
	LMT_INTRST_BASE_NUM           	VARCHAR(40),
	LMT_TENOR                     	BIGINT,
	LMT_INTRST_BASE_VALUE         	VARCHAR(10),
	LMT_INTRST_MARGIN VARCHAR(30),
	INTEREST_RATE 					DECIMAL(11,9),
	LMT_CMMSN                     	VARCHAR(30),
	LMT_FEE                       	VARCHAR(30),
	LMT_CONDTN_TEXT               	VARCHAR(255),
	LMT_ADVISE_IND                	CHARACTER(1),
	LMT_CMMTD_IND                 	CHARACTER(1),
	LMT_SHARE_IND                 	CHARACTER(1),
	CREATE_USER_ID                	BIGINT,
	LAST_UPDATE_USER_ID           	BIGINT,
	VERIFY_USER_ID                	BIGINT,
	CREATE_DATE                   	TIMESTAMP,
	LAST_UPDATE_DATE              	TIMESTAMP,
	VERIFY_DATE                   	TIMESTAMP,
	UPDATE_COUNT                  	BIGINT,
	UPDATE_STATUS_IND             	CHARACTER(1),
	CHANGE_IND                    	CHARACTER(1),
	LMT_TENOR_BASIS_NUM           	VARCHAR(40),
	LMT_LLP_ID                    	BIGINT,
	LMT_TENOR_BASIS_VALUE         	VARCHAR(10),
	LMT_LE_ID                     	VARCHAR(20),
	LMT_LSP_ID                    	BIGINT,
	CMS_ACT_SEC_COVERAGE          	DOUBLE,
	CMS_REQ_SEC_COVERAGE          	DOUBLE DEFAULT 100,
	CMS_VERSION_TIME              	BIGINT,
	CMS_LIMIT_STATUS              	VARCHAR(20),
	CMS_ACTIVATED_LIMIT           	DECIMAL(20,2),
	CMS_BKG_COUNTRY               	CHARACTER(2),
	CMS_BKG_ORGANISATION          	VARCHAR(20),
	CMS_IS_LIMIT_EXISTING_IND     	CHARACTER(1),
	CMS_ACTIVATED_LIMIT_IND       	CHARACTER(1),
	CMS_OUTER_LMT_REF             	VARCHAR(43),
	CMDT_OP_LMT                   	DECIMAL(20,2),
	CMS_OUTER_LMT_PROF_ID         	BIGINT,
	CMS_REF_ID                    	BIGINT,
	GROUP_ID                      	BIGINT,
	ZERO_REASON                   	VARCHAR(250),
	ZERO_DATE                     	TIMESTAMP,
	ZERO_IND                      	CHARACTER(1),
	CMS_CR125_DERIVE_ACTVD_LMT_AMT	DECIMAL(20,2),
	LMT_PRD_GRP_NUM               	VARCHAR(40),
	LMT_PRD_GRP_VALUE             	VARCHAR(40),
	CMS_DRAWING_LIMIT             	DECIMAL(20,2),
	CMS_OUTSTANDING_AMT           	DECIMAL(20,2),
	LMT_DESC                      	VARCHAR(250),
	LMT_FAC_TYPE_NUM              	VARCHAR(40),
	LMT_FAC_TYPE_VALUE            	VARCHAR(40),
	SOURCE_ID                     	VARCHAR(10),
	LMT_BCA_REF_NUM               	VARCHAR(35),
	LOS_BCA_REF_NUM            		VARCHAR(35),
	LMT_ID_OLD                    	VARCHAR(20),
	LMT_OMNIBUS_IND               	CHARACTER(1),
	LMT_FAC_CODE                  	VARCHAR(3),
	LMT_FAC_SEQ                   	BIGINT,
	ACCOUNT_TYPE					CHARACTER(1),
	AVAILABLE_LMT                 	DECIMAL(20,2),
	LOAN_TYPE                     	CHARACTER(2), 
	CMS_ACTUAL_SEC_COVERAGE_AMT     DECIMAL(30,12),
	CMS_OMV_SEC_COVERAGE_AMT        DECIMAL(30,12),
	CMS_FSV_SEC_COVERAGE_AMT        DECIMAL(30,12),
	INNER_LIMIT_ORDERING 			SMALLINT,
	OMNIBUS_ENVELOPE_ID 			BIGINT,
	OMNIBUS_ENVELOPE_NAME 			VARCHAR(50)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LSP_APPR_LMTS_IDX1
	ON SCI_LSP_APPR_LMTS(LMT_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LSP_APPR_LMTS_IDX5
	ON SCI_LSP_APPR_LMTS(CMS_LIMIT_PROFILE_ID, CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LSP_APPR_LMTS_IDX2
	ON SCI_LSP_APPR_LMTS(LMT_OUTER_LMT_ID, SOURCE_ID, CMS_LIMIT_STATUS, CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX LSP_APPR_LMTS_IDX6
	ON SCI_LSP_APPR_LMTS(CMS_LSP_APPR_LMTS_ID, CMS_BKG_ORGANISATION DESC, CMS_BKG_COUNTRY DESC, CMS_LIMIT_PROFILE_ID DESC)
	ALLOW REVERSE SCANS ;

CREATE INDEX LSP_APPR_LMTS_IDX4
	ON SCI_LSP_APPR_LMTS(LMT_BCA_REF_NUM, LMT_FAC_CODE, LMT_FAC_SEQ, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LSP_APPR_LMTS_IDX7
	ON SCI_LSP_APPR_LMTS(CMS_LSP_APPR_LMTS_ID, CMS_LIMIT_PROFILE_ID, LMT_TYPE_VALUE, CMS_LIMIT_STATUS)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX LMT_LOS_IDX
ON SCI_LSP_APPR_LMTS
( LOS_BCA_REF_NUM ASC, LOS_LMT_ID ASC )
ALLOW REVERSE SCANS;	
	
ALTER TABLE SCI_LSP_APPR_LMTS
	ADD CONSTRAINT PK_LSP_APPR_LMTS
	PRIMARY KEY (CMS_LSP_APPR_LMTS_ID);

ALTER TABLE SCI_LSP_APPR_LMTS
	ADD CONSTRAINT INDICATOR331
	CHECK (LMT_SHARE_IND IN ('Y','N'));

ALTER TABLE SCI_LSP_APPR_LMTS
	ADD CONSTRAINT INDICATOR330
	CHECK (LMT_CMMTD_IND IN ('Y','N'));

ALTER TABLE SCI_LSP_APPR_LMTS
	ADD CONSTRAINT INDICATOR329
	CHECK (LMT_ADVISE_IND IN ('Y','N'));

CREATE TABLE SCI_LSP_CO_BORROW_LMT ( 
	CMS_LSP_CO_BORROW_LMT_ID      	BIGINT NOT NULL,
	CMS_LIMIT_ID                  	BIGINT,
	LCL_ID                        	VARCHAR(43) NOT NULL,
	CREATE_USER_ID                	BIGINT,
	LAST_UPDATE_USER_ID           	BIGINT,
	VERIFY_USER_ID                	BIGINT,
	CREATE_DATE                   	TIMESTAMP,
	LAST_UPDATE_DATE              	TIMESTAMP,
	LCL_COBO_LE_ID                	VARCHAR(20),
	LCL_COBO_LSP_ID               	BIGINT,
	VERIFY_DATE                   	TIMESTAMP,
	LCL_BKG_LOCTN_ID              	BIGINT,
	UPDATE_COUNT                  	BIGINT,
	UPDATE_STATUS_IND             	CHARACTER(1),
	LCL_CRRNCY_ISO_CODE           	CHARACTER(3),
	LCL_LMT_AMT                   	DECIMAL(20,2),
	CHANGE_IND                    	CHARACTER(1),
	LCL_LE_ID                     	VARCHAR(20),
	LCL_LMT_ID                    	VARCHAR(43),
	LCL_LSP_ID                    	BIGINT,
	LCL_LLP_ID                    	VARCHAR(35),
	LCL_ACTIVATED_LIMIT           	DECIMAL(20,2),
	CMS_LIMIT_STATUS              	VARCHAR(22),
	CMS_CUSTOMER_ID               	BIGINT,
	CMS_BKG_COUNTRY               	CHARACTER(2),
	CMS_BKG_ORGANISATION          	VARCHAR(20),
	CMS_VERSION_TIME              	BIGINT,
	CMS_OUTER_LIMIT_REF           	VARCHAR(43),
	CMS_LIMIT_ACTIVATED_IND       	CHARACTER(1),
	CMS_IS_LIMIT_EXISTING_IND     	CHARACTER(1),
	CMS_REF_ID                    	BIGINT,
	GROUP_ID                      	BIGINT,
	ZERO_REASON                   	VARCHAR(250),
	ZERO_DATE                     	TIMESTAMP,
	ZERO_IND                      	CHARACTER(1),
	REQUIRED_SECURITY_COVERAGES   	DOUBLE,
	LIMIT_ZERORISED               	CHARACTER(1),
	ZERORISED_DATE                	TIMESTAMP,
	ZERORISED_REASONS             	VARCHAR(250),
	LMT_SEC_TYPE_NUM              	VARCHAR(40),
	LMT_SEC_TYPE_VALUE            	VARCHAR(10),
	CMS_ACT_SEC_COVERAGE          	DOUBLE,
	CMS_CR125_DERIVE_ACTVD_LMT_AMT	DECIMAL(20,2),
	SOURCE_ID                     	VARCHAR(10),
	LCL_OUTSTANDING_AMT           	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CB_LMT_I1
	ON SCI_LSP_CO_BORROW_LMT(CMS_LIMIT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CB_LMT_I3
	ON SCI_LSP_CO_BORROW_LMT(CMS_CUSTOMER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CB_LMT_I2
	ON SCI_LSP_CO_BORROW_LMT(LCL_COBO_LE_ID, LCL_LLP_ID, LCL_LE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LSP_CO_BORROW_LMT
	ADD CONSTRAINT PK_LSP_CO_BO_LMT
	PRIMARY KEY (CMS_LSP_CO_BORROW_LMT_ID);

CREATE TABLE SCI_LSP_COBO_LMT_XREF_MAP ( 
	CMS_LSP_COBO_LMT_XREF_MAP_ID	BIGINT NOT NULL,
	CREATE_USER_ID              	BIGINT,
	LAST_UPDATE_USER_ID         	BIGINT,
	VERIFY_USER_ID              	BIGINT,
	CREATE_DATE                 	TIMESTAMP,
	LCX_ID                      	BIGINT NOT NULL,
	LCX_LCL_ID                  	VARCHAR(20),
	LAST_UPDATE_DATE            	TIMESTAMP,
	VERIFY_DATE                 	TIMESTAMP,
	UPDATE_COUNT                	BIGINT,
	UPDATE_STATUS_IND           	CHARACTER(1),
	CHANGE_IND                  	CHARACTER(1),
	LCX_LSX_ID                  	BIGINT NOT NULL,
	LCX_LLP_ID                  	BIGINT NOT NULL,
	LCX_LSP_ID                  	BIGINT NOT NULL,
	LCX_LE_ID                   	VARCHAR(20) NOT NULL,
	LCX_LMT_ID                  	VARCHAR(20) NOT NULL,
	LCX_COBO_LSP_ID             	BIGINT NOT NULL,
	LCX_COBO_LE_ID              	VARCHAR(20) NOT NULL,
	CMS_LSP_SYS_XREF_ID         	BIGINT,
	CMS_LSP_CO_BORROW_LMT_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX CB_LMT_MAP_I1
	ON SCI_LSP_COBO_LMT_XREF_MAP(LCX_LE_ID, LCX_LSP_ID, LCX_LSX_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX CB_LMT_MAP_I2
	ON SCI_LSP_COBO_LMT_XREF_MAP(CMS_LSP_SYS_XREF_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LSP_COBO_LMT_XREF_MAP
	ADD CONSTRAINT PK_COBOLMT_XREFMAP
	PRIMARY KEY (CMS_LSP_COBO_LMT_XREF_MAP_ID);

ALTER TABLE SCI_LSP_COBO_LMT_XREF_MAP
	ADD CONSTRAINT XUQCOBOLMT_XREFMAP
	UNIQUE (LCX_ID, LCX_COBO_LE_ID, LCX_COBO_LSP_ID, LCX_LMT_ID, LCX_LE_ID, LCX_LSP_ID, LCX_LLP_ID, LCX_LSX_ID);

CREATE TABLE SCI_LSP_EMP_MAP ( 
	CMS_LSP_EMP_MAP_ID   	BIGINT NOT NULL,
	CMS_LE_SUB_PROFILE_ID	BIGINT NOT NULL,
	LEM_ID               	BIGINT NOT NULL,
	LEM_LE_ID            	VARCHAR(20) NOT NULL,
	LEM_LSP_ID           	BIGINT NOT NULL,
	LEM_EMP_ID           	BIGINT NOT NULL,
	LEM_EMP_CODE         	VARCHAR(10) NOT NULL,
	LEM_EMP_NAME         	VARCHAR(100),
	LEM_EMP_BKG_LOC_CTRY 	CHARACTER(2),
	LEM_EMP_BKG_LOC_ORG  	VARCHAR(20),
	LEM_EMP_TYPE_NUM     	VARCHAR(40) NOT NULL,
	LEM_EMP_TYPE_VALUE   	VARCHAR(10) NOT NULL,
	LEM_PRINCIPAL_FAM_IND	CHARACTER(1) NOT NULL,
	UPDATE_STATUS_IND    	CHARACTER(1),
	CHANGE_IND           	CHARACTER(1),
	LEM_EEC_MAP_ID       	BIGINT,
	LEM_BKG_LOCTN_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX EMP_MAP_I4
	ON SCI_LSP_EMP_MAP(LEM_EMP_ID)
	ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX EMP_MAP_U1
	ON SCI_LSP_EMP_MAP(CMS_LE_SUB_PROFILE_ID, LEM_EMP_BKG_LOC_CTRY, LEM_EMP_BKG_LOC_ORG, CMS_LSP_EMP_MAP_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX EMP_MAP_I2
	ON SCI_LSP_EMP_MAP(LEM_EMP_BKG_LOC_CTRY, LEM_EMP_BKG_LOC_ORG)
	ALLOW REVERSE SCANS ;

CREATE INDEX EMP_MAP_I1
	ON SCI_LSP_EMP_MAP(CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX EMP_MAP_I3
	ON SCI_LSP_EMP_MAP(LEM_LE_ID, LEM_LSP_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LSP_EMP_MAP
	ADD CONSTRAINT PK_LSP_EMP_MAP
	PRIMARY KEY (CMS_LSP_EMP_MAP_ID);

ALTER TABLE SCI_LSP_EMP_MAP
	ADD CONSTRAINT INDICATOR335
	CHECK (LEM_PRINCIPAL_FAM_IND IN ('Y','N'));

CREATE TABLE SCI_LSP_JOINT_BORROWER ( 
	CMS_LSP_JOINT_BORROWER_ID	BIGINT NOT NULL,
	CMS_LMP_LIMIT_PROFILE_ID 	BIGINT,
	LJB_LE_ID                	VARCHAR(20),
	LJB_LSP_ID               	VARCHAR(20),
	LJB_BCA_REF_NUM          	VARCHAR(50),
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	SOURCE_ID                	VARCHAR(10),
	CMS_LE_SUB_PROFILE_ID    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LSP_JOINT_BORROWER_IDX1
	ON SCI_LSP_JOINT_BORROWER(CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX JOINT_BORROWER_IDX2
	ON SCI_LSP_JOINT_BORROWER(CMS_LMP_LIMIT_PROFILE_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE SCI_LSP_LMT_PROFILE ( 
	CMS_LSP_LMT_PROFILE_ID     	BIGINT NOT NULL,
	LLP_ID                     	BIGINT,
	LLP_LE_ID                  	VARCHAR(20),
	LLP_LSP_ID                 	BIGINT,
	LLP_NEXT_ANNL_RVW_DATE     	TIMESTAMP,
	LLP_NEXT_INTRM_RVW_DATE    	TIMESTAMP,
	LLP_CRDT_PLCY_COMPLNCE_IND 	CHARACTER(1),
	LLP_UNWRT_STD_CMPLNCE_IND  	CHARACTER(1),
	LLP_EXTD_NEXT_RVW_DATE     	TIMESTAMP,
	LLP_PRJTD_ECON_PROFIT      	DECIMAL(20,2),
	LLP_EXPECT_LOSS_AMT        	DECIMAL(20,2),
	LLP_PROD_PRG_COMPLNCE_IND  	CHARACTER(1),
	LLP_CNTRY_RISK_APPR_REQ_IND	CHARACTER(1),
	LLP_BKG_LOCTN_ID           	BIGINT,
	CREATE_USER_ID             	BIGINT,
	LAST_UPDATE_USER_ID        	BIGINT,
	VERIFY_USER_ID             	BIGINT,
	CREATE_DATE                	TIMESTAMP,
	LAST_UPDATE_DATE           	TIMESTAMP,
	VERIFY_DATE                	TIMESTAMP,
	UPDATE_COUNT               	BIGINT,
	UPDATE_STATUS_IND          	CHARACTER(1),
	CHANGE_IND                 	CHARACTER(1),
	LLP_2ND_APPR_EMP_ID        	BIGINT,
	LLP_1ST_APPR_EMP_ID        	BIGINT,
	LLP_BCA_REF_NUM            	VARCHAR(35),
	LOS_BCA_REF_NUM            	VARCHAR(35),
	LLP_BCA_REF_APPR_DATE      	TIMESTAMP,
	CMS_REQ_SEC_COVERAGE       	DOUBLE DEFAULT 100,
	CMS_ACT_SEC_COVERAGE       	DOUBLE,
	CMS_APPR_OFFICER_GRADE     	VARCHAR(10),
	CMS_VERSION_TIME           	BIGINT,
	CMS_CUSTOMER_ID            	BIGINT,
	CMS_BCA_STATUS             	VARCHAR(20),
	CMS_BCA_CREATE_DATE        	TIMESTAMP,
	CMS_TAT_CREATE_DATE        	TIMESTAMP,
	CMS_BFL_REQUIRED_IND       	CHARACTER(1),
	CMS_ORIG_COUNTRY           	CHARACTER(2),
	CMS_ORIG_ORGANISATION      	VARCHAR(20),
	CMS_BCA_RENEWAL_IND        	CHARACTER(1),
	CMS_FULL_DOC_REVIEW_IND    	CHARACTER(1),
	CMS_BCA_COMPLETE_IND       	CHARACTER(1) DEFAULT 'N',
	CMS_CCC_COMPLETE_IND       	CHARACTER(1),
	CMS_SCC_COMPLETE_IND       	CHARACTER(1),
	LLP_1ST_APPR_EMP_NAME      	VARCHAR(100),
	LLP_2ND_APPR_EMP_NAME      	VARCHAR(100),
	CMS_BCA_LOCAL_IND          	CHARACTER(1),
	CMS_BFL_IND_UPDATE_DATE    	TIMESTAMP,
	CMS_EXTENDED_BFL_DATE      	TIMESTAMP,
	CMS_CB_ACT_SEC_COVERAGE    	DOUBLE,
	IS_MIGRATED_IND            	CHARACTER(1) DEFAULT 'N',
	LLP_SEGMENT_CODE_NUM       	VARCHAR(40),
	LLP_SEGMENT_CODE_VALUE     	VARCHAR(10),
	ISLAMIC_FLAG               	CHARACTER(1),
	SOURCE_ID                  	VARCHAR(10),
	LSP_LMT_PROFILE_SRC_ID_OLD 	VARCHAR(19),
	CMS_BCA_JOINT_IND          	CHARACTER(1),
	LMT_PROFILE_TYPE           	VARCHAR(10),
	APPLICATION_TYPE    		VARCHAR(40),
    APPLICATION_LAW_TYPE        VARCHAR(40),
	CMS_CREATE_IND             	CHARACTER(1),
	CIF_SOURCE_ID              	VARCHAR(10),
    LI_GENERATION_DATE          TIMESTAMP    
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LMT_PRF_I2
	ON SCI_LSP_LMT_PROFILE(CMS_BCA_CREATE_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_LSP_LMT_PROFILE_IDX2
	ON SCI_LSP_LMT_PROFILE(SOURCE_ID, CMS_BCA_STATUS, CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX LMT_PRF_U2
	ON SCI_LSP_LMT_PROFILE(CMS_CUSTOMER_ID, CMS_ORIG_COUNTRY, CMS_ORIG_ORGANISATION, CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_PRF_I5
	ON SCI_LSP_LMT_PROFILE(CMS_ACT_SEC_COVERAGE, CMS_REQ_SEC_COVERAGE)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_PRF_I3
	ON SCI_LSP_LMT_PROFILE(CMS_CUSTOMER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_PRF_I4
	ON SCI_LSP_LMT_PROFILE(CMS_ORIG_COUNTRY, CMS_ORIG_ORGANISATION)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_LLP_IDX1
	ON SCI_LSP_LMT_PROFILE(LLP_BCA_REF_NUM, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_LSP_LMT_PROFILE_IDX3
	ON SCI_LSP_LMT_PROFILE(CMS_BCA_CREATE_DATE, CMS_BCA_STATUS, SOURCE_ID, CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_LSP_LMT_PROFILE_IDX1
	ON SCI_LSP_LMT_PROFILE(LLP_BCA_REF_NUM, LLP_LE_ID, CMS_BCA_STATUS, CIF_SOURCE_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_PRF_I6
	ON SCI_LSP_LMT_PROFILE(CMS_ORIG_ORGANISATION, CMS_ORIG_COUNTRY, CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LSP_LMT_PROFILE
	ADD CONSTRAINT PK_LSP_LMT_PROFILE
	PRIMARY KEY (CMS_LSP_LMT_PROFILE_ID);

ALTER TABLE SCI_LSP_LMT_PROFILE
	ADD CONSTRAINT INDICATOR341
	CHECK (LLP_CNTRY_RISK_APPR_REQ_IND IN ('Y','N'));

ALTER TABLE SCI_LSP_LMT_PROFILE
	ADD CONSTRAINT INDICATOR340
	CHECK (LLP_PROD_PRG_COMPLNCE_IND IN ('Y','N'));

ALTER TABLE SCI_LSP_LMT_PROFILE
	ADD CONSTRAINT INDICATOR339
	CHECK (LLP_UNWRT_STD_CMPLNCE_IND IN ('Y','N'));

ALTER TABLE SCI_LSP_LMT_PROFILE
	ADD CONSTRAINT INDICATOR338
	CHECK (LLP_CRDT_PLCY_COMPLNCE_IND IN ('Y','N'));

CREATE TABLE SCI_LSP_LMTS_XREF_MAP ( 
	CMS_LSP_LMTS_XREF_MAP_ID	BIGINT NOT NULL,
	CREATE_USER_ID          	BIGINT,
	LAST_UPDATE_USER_ID     	BIGINT,
	VERIFY_USER_ID          	BIGINT,
	LXM_ID                  	BIGINT,
	CREATE_DATE             	TIMESTAMP,
	LAST_UPDATE_DATE        	TIMESTAMP,
	VERIFY_DATE             	TIMESTAMP,
	UPDATE_COUNT            	BIGINT,
	UPDATE_STATUS_IND       	CHARACTER(1),
	CHANGE_IND              	CHARACTER(1),
	LXM_LE_ID               	VARCHAR(20),
	LXM_LLP_ID              	BIGINT,
	LXM_LMT_ID              	VARCHAR(43),
	LXM_LSX_ID              	BIGINT,
	LXM_LSP_ID              	BIGINT,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	CMS_LSP_SYS_XREF_ID     	BIGINT,
	CMS_STATUS              	VARCHAR(20),
	CMS_SID                 	BIGINT,
	LXM_EXT_SYS_ACCT_TYPE   	VARCHAR(1),
	LXM_EXT_SYS_ACCT_SEQ    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX LMT_MAP_I1
	ON SCI_LSP_LMTS_XREF_MAP(CMS_LSP_SYS_XREF_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_MAP_I2
	ON SCI_LSP_LMTS_XREF_MAP(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX LMT_MAP_I3
	ON SCI_LSP_LMTS_XREF_MAP(LXM_LE_ID, LXM_LSP_ID, LXM_LSX_ID)
	ALLOW REVERSE SCANS ;
	
ALTER TABLE SCI_LSP_LMTS_XREF_MAP
	ADD CONSTRAINT PK_LSPLMTS_XREFMAP
	PRIMARY KEY (CMS_LSP_LMTS_XREF_MAP_ID);
	
CREATE INDEX LMT_MAP_I4
	ON SCI_LSP_LMTS_XREF_MAP(CMS_LSP_APPR_LMTS_ID, CMS_LSP_SYS_XREF_ID, UPDATE_STATUS_IND)
	ALLOW REVERSE SCANS ;	

CREATE TABLE SCI_LSP_OFF_ADDR ( 
	CMS_LOA_ID         	BIGINT NOT NULL,
	LOA_ID             	BIGINT,
	LOA_LSP_ID         	SMALLINT,
	LOA_LE_ID          	VARCHAR(20),
	LOA_TYPE_NUM       	VARCHAR(40),
	LOA_TYPE_VALUE     	VARCHAR(10),
	LOA_ATTN_PARTY     	VARCHAR(30),
	LOA_ADDR_LINE_1    	VARCHAR(100),
	LOA_ADDR_LINE_2    	VARCHAR(100),
	LOA_CITY_TEXT      	VARCHAR(30),
	LOA_STATE          	VARCHAR(50),
	LOA_POST_CODE      	VARCHAR(30),
	LOA_CNTRY_ISO_CODE 	CHARACTER(2),
	LOA_FAX_NUM_TEXT   	VARCHAR(30),
	LOA_EMAIL_TEXT     	VARCHAR(50),
	LOA_TELEPHONE_TEXT 	VARCHAR(30),
	LOA_TELEX_TEXT     	VARCHAR(30),
	CMS_MAIN_PROFILE_ID	BIGINT,
	LOA_ADDR_LINE_3    	VARCHAR(100),
	LOA_ADDR_LINE_4    	VARCHAR(100),
	LOA_ADDR_LINE_5    	VARCHAR(100) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX OFF_ADD_I1
	ON SCI_LSP_OFF_ADDR(LOA_LE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX OFF_ADD_I2
	ON SCI_LSP_OFF_ADDR(CMS_MAIN_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_LSP_OFF_ADDR
	ADD CONSTRAINT PK_LSP_OFF_ADDR
	PRIMARY KEY (CMS_LOA_ID);

CREATE TABLE SCI_LSP_SYS_XREF ( 
	CMS_LSP_SYS_XREF_ID   	BIGINT NOT NULL,
	LSX_ID                	BIGINT,
	LSX_LE_ID             	VARCHAR(20),
	LSX_BKG_LOCTN_ID      	BIGINT,
	LSX_LSP_ID            	BIGINT,
	LSX_EXT_SYS_CODE_NUM  	VARCHAR(40),
	LSX_EXT_SYS_CODE_VALUE	VARCHAR(10),
	LSX_EXT_SYS_CUST_ID   	VARCHAR(30),
	LSX_EXT_SYS_CUST_NAME 	VARCHAR(100),
	LSX_EXT_SYS_ACCT_NUM  	VARCHAR(50),
	LSX_ACCT_STATUS_TEXT  	VARCHAR(30),
	CREATE_USER_ID        	BIGINT,
	LAST_UPDATE_USER_ID   	BIGINT,
	VERIFY_USER_ID        	BIGINT,
	CREATE_DATE           	TIMESTAMP,
	LAST_UPDATE_DATE      	TIMESTAMP,
	VERIFY_DATE           	TIMESTAMP,
	UPDATE_COUNT          	BIGINT,
	UPDATE_STATUS_IND     	CHARACTER(1),
	CHANGE_IND            	CHARACTER(1),
	CMS_LE_SUB_PROFILE_ID 	BIGINT,
	ACCOUNT_DESC_NUM      	VARCHAR(40),
	ACCOUNT_DESC_VALUE    	VARCHAR(60),
	LSX_EXT_SYS_ACCT_SEQ  	BIGINT,
	LSX_FAC_CODE          	VARCHAR(3),
	LSX_FAC_SEQ           	BIGINT,
	LSX_EXT_CTY_CODE_VALUE	VARCHAR(40),
	ACCT_DELQ_IND         	CHARACTER(1),
	ACCT_EFFECTIVE_DATE   	TIMESTAMP,
	ACCT_STATUS           	VARCHAR(40),
	LSX_BCA_REF_NUM       	VARCHAR(35),
	LSX_LMT_ID            	VARCHAR(43),
	LSX_BKG_LOCTN_CTRY    	CHARACTER(2),
	LSX_BKG_LOCTN_ORG     	VARCHAR(20),
	LSX_EXT_SYS_ACCT_TYPE 	CHARACTER(1),
	ACCT_RV               	DECIMAL(20,2),
	ACCT_RV_CCY           	CHARACTER(3),
	FIRST_DISBURSEMENT_DATE	TIMESTAMP,
	FINAL_DISBURSEMENT_DATE	TIMESTAMP,
	cms_sec_coverage_amt decimal(30,12),
	cms_outstanding_amt decimal(20,2),
	last_allocation_date	timestamp,
	outstanding_amt_ccy char(3),
	sec_coverage_amt_ccy char(3)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX SI_LSX_IDX1
	ON SCI_LSP_SYS_XREF(LSX_EXT_SYS_ACCT_NUM, LSX_EXT_SYS_ACCT_SEQ, LSX_EXT_SYS_CODE_VALUE)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX SYS_XREF_I1
-- 	ON SCI_LSP_SYS_XREF(CMS_LE_SUB_PROFILE_ID)
-- 	ALLOW REVERSE SCANS ;

CREATE INDEX SYS_XREF_I1
    ON SCI_LSP_SYS_XREF (CMS_LSP_SYS_XREF_ID, UPDATE_STATUS_IND)
    ALLOW REVERSE SCANS;

ALTER TABLE SCI_LSP_SYS_XREF
	ADD CONSTRAINT PK_LSP_SYS_XREF
	PRIMARY KEY (CMS_LSP_SYS_XREF_ID);

CREATE TABLE SCI_PLDGR_CREDIT_GRADE ( 
	CMS_PLDGR_CREDIT_GRADE_ID	BIGINT NOT NULL,
	PCG_CRDT_GRADE_ID        	BIGINT,
	PCG_PLEDGOR_ID           	BIGINT,
	PCG_CRDT_GRADE_TYPE_NUM  	VARCHAR(40) NOT NULL,
	PCG_CRDT_GRADE_TYPE_VALUE	VARCHAR(10) NOT NULL,
	PCG_CRDT_GRADE_CODE_NUM  	VARCHAR(40) NOT NULL,
	PCG_CRDT_GRADE_CODE_VALUE	VARCHAR(10) NOT NULL,
	PCG_CRDT_GRADE_START_DATE	TIMESTAMP NOT NULL,
	PCG_CRDT_GRADE_DESC      	VARCHAR(100),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	BIGINT,
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	CMS_PLEDGOR_DTL_ID       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SCI_PLDGR_CREDIT_GRADE
	ADD CONSTRAINT PK_PLDGR_CRDTGRAD
	PRIMARY KEY (CMS_PLDGR_CREDIT_GRADE_ID);

CREATE TABLE SCI_PLEDGOR_DTL ( 
	CMS_PLEDGOR_DTL_ID       	BIGINT NOT NULL,
	PLG_PLEDGOR_ID           	BIGINT,
	PLG_LE_ID                	VARCHAR(20),
	PLG_LEGAL_NAME           	VARCHAR(100),
	PLG_GRP_ID               	BIGINT,
	PLG_GRP_NAME             	VARCHAR(100),
	PLG_GRNT_SGMNT_CODE_NUM  	VARCHAR(40),
	PLG_GRNT_SGMNT_CODE_VALUE	VARCHAR(10),
	PLG_REL_TYPE_NUM         	VARCHAR(40),
	PLG_REL_TYPE_VALUE       	VARCHAR(10),
	PLG_LEGAL_TYPE_NUM       	VARCHAR(40),
	PLG_LEGAL_TYPE_VALUE     	VARCHAR(10),
	PLG_INC_NUM_TEXT         	VARCHAR(30),
	PLG_ISIC_TYPE_NUM        	VARCHAR(40),
	PLG_ISIC_TYPE_VALUE      	VARCHAR(10),
	PLG_ISIC_CODE_NUM        	VARCHAR(40),
	PROGRESS_STATUS_NUM      	VARCHAR(40),
	PROGRESS_STATUS_VALUE    	VARCHAR(10),
	PLG_ISIC_CODE_VALUE      	VARCHAR(10),
	PLG_DMCL_CNTRY_ISO_CODE  	CHARACTER(2),
	PLG_INC_CNTRY_ISO_CODE   	CHARACTER(2),
	PRIMARY_CODE_NUM         	VARCHAR(40),
	PRIMARY_CODE_VALUE       	VARCHAR(10),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	LOCK_USER_ID             	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LOCK_IND                 	CHARACTER(1),
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	BIGINT,
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	PLDGR_CRDT_GRADE_CHK_IND 	CHARACTER(1),
	PLDGR_INSTRC_CHK_IND     	CHARACTER(1),
	PLDGR_CHK_IND            	CHARACTER(1),
	CMS_ORIG_COUNTRY         	CHARACTER(2),
	CMS_ORIG_ORGANISATION    	VARCHAR(20),
	SOURCE_ID                	VARCHAR(10),
	PLG_ID_CNTRY_ISO_CODE    	CHARACTER(2),
	PLG_ID_NUM_TEXT          	VARCHAR(100),
	PLG_ID_TYPE_NUM          	VARCHAR(40),
	PLG_ID_TYPE_VALUE        	VARCHAR(10),
	PLG_LE_ID_SRC_NUM        	VARCHAR(40),
	PLG_LE_ID_SRC_VALUE      	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_PLGSRC1
	ON SCI_PLEDGOR_DTL(PLG_LE_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_PLEDGOR_DTL
	ADD CONSTRAINT PK_PLEDGOR_DTL
	PRIMARY KEY (CMS_PLEDGOR_DTL_ID);

CREATE TABLE SCI_PLEDGOR_REPORT ( 
	PLG_REPORT_ID        	BIGINT NOT NULL,
	CMS_PLEDGOR_DTL_ID   	BIGINT NOT NULL,
	PLG_PLEDGOR_ID       	BIGINT NOT NULL,
	PLG_LE_ID            	VARCHAR(20),
	PLG_LEGAL_NAME       	VARCHAR(100) NOT NULL,
	CMS_ORIG_COUNTRY     	VARCHAR(20),
	CMS_ORIG_ORGANISATION	VARCHAR(20),
	UPDATE_STATUS_IND    	CHARACTER(1),
	TIMESTAMP            	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX PLG_RPT_I1
	ON SCI_PLEDGOR_REPORT(TIMESTAMP, CMS_ORIG_COUNTRY)
	ALLOW REVERSE SCANS ;

CREATE TABLE SCI_SEC_PLDGR_MAP ( 
	CMS_SEC_PLDGR_MAP_ID          	BIGINT NOT NULL,
	SPM_ID                        	BIGINT,
	SPM_PLEDGOR_ID                	BIGINT,
	SPM_SEC_ID                    	VARCHAR(27),
	SPM_MAP_ID                    	BIGINT,
	CREATE_USER_ID                	BIGINT,
	LAST_UPDATE_USER_ID           	BIGINT,
	VERIFY_USER_ID                	BIGINT,
	CREATE_DATE                   	TIMESTAMP,
	LAST_UPDATE_DATE              	TIMESTAMP,
	VERIFY_DATE                   	TIMESTAMP,
	UPDATE_COUNT                  	BIGINT,
	UPDATE_STATUS_IND             	CHARACTER(1),
	CHANGE_IND                    	CHARACTER(1),
	CMS_PLEDGOR_DTL_ID            	BIGINT,
	CMS_COLLATERAL_ID             	BIGINT,
	SEC_PLEDGOR_RELATIONSHIP_NUM  	VARCHAR(40),
	SEC_PLEDGOR_RELATIONSHIP_VALUE	VARCHAR(10),
	SOURCE_ID                     	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX SEC_PLG_MAP_I1
	ON SCI_SEC_PLDGR_MAP(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SEC_PLG_MAP_I2
	ON SCI_SEC_PLDGR_MAP(CMS_PLEDGOR_DTL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SCI_SEC_PLDGR_MAP
	ADD CONSTRAINT PK_SEC_PLDGR_MAP
	PRIMARY KEY (CMS_SEC_PLDGR_MAP_ID);

CREATE TABLE SECURITY_FIELD ( 
	FIELD_NAME          	VARCHAR(40) NOT NULL,
	SECURITY_SUB_TYPE_ID	VARCHAR(30) NOT NULL,
	IS_SSC_UPDATABLE    	CHARACTER(1) NOT NULL,
	APPLICABLE_COUNTRY  	CHARACTER(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SECURITY_FIELD
	ADD CONSTRAINT PK_SECURITY_FIELD
	PRIMARY KEY (FIELD_NAME, SECURITY_SUB_TYPE_ID);

ALTER TABLE SECURITY_FIELD
	ADD CONSTRAINT CHK_SECURITY_FIELD
	CHECK (IS_SSC_UPDATABLE in ( 'Y', 'N'));

CREATE TABLE SECURITY_SUBTYPE_MAPPING ( 
	CMS_COLLATERAL_ID          	BIGINT NOT NULL,
	SCI_SECURITY_DTL_ID        	VARCHAR(20) NOT NULL,
	SECURITY_SUB_TYPE_ID       	VARCHAR(30),
	ORIGIN_SECURITY_SUB_TYPE_ID	VARCHAR(30),
	SUBTYPE_NAME               	VARCHAR(60),
	TYPE_NAME                  	VARCHAR(40),
	FSV                        	DECIMAL(30,2),
	FSV_CURRENCY               	CHARACTER(3),
	CMV                        	DECIMAL(30,2),
	CMV_CURRENCY               	CHARACTER(3),
	RPT_CHARGE_DETAILS         	VARCHAR(4000),
	RPT_COLLATERAL_PARTICULARS 	VARCHAR(4000),
	SCI_SECURITY_CURRENCY      	CHARACTER(3),
	SECURITY_LOCATION          	VARCHAR(20),
	SECURITY_ORGANISATION      	VARCHAR(20),
	SECURITY_MATURITY_DATE     	DATE,
	STATUS                     	VARCHAR(20),
	SCI_REFERENCE_NOTE         	VARCHAR(100),
	MARGIN                     	DECIMAL(5,2) 
	) IN CMS_MEDIUM_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_SEC_SBTYP_MAP1
	ON SECURITY_SUBTYPE_MAPPING(SECURITY_SUB_TYPE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE SECURITY_SUBTYPE_MAPPING
	ADD CONSTRAINT SQL080609120047680
	PRIMARY KEY (CMS_COLLATERAL_ID);

CREATE TABLE SECURITY_TYPE ( 
	SECURITY_TYPE_ID	VARCHAR(20) NOT NULL,
	TYPE_NAME       	VARCHAR(40),
	TYPE_DESCRIPTION	VARCHAR(200) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE SECURITY_TYPE
	ADD CONSTRAINT PKSECURITY_TYPE
	PRIMARY KEY (SECURITY_TYPE_ID);

CREATE TABLE SESSIONS ( 
	ID             	VARCHAR(128) NOT NULL,
	PROPID         	VARCHAR(128) NOT NULL,
	APPNAME        	VARCHAR(128) NOT NULL,
	LISTENERCNT    	SMALLINT,
	LASTACCESS     	BIGINT,
	CREATIONTIME   	BIGINT,
	MAXINACTIVETIME	INTEGER,
	USERNAME       	VARCHAR(256),
	SMALL          	VARCHAR(3122),
	MEDIUM         	LONG VARCHAR,
	LARGE          	BLOB(2097152) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX SESS_INDEX
	ON SESSIONS(ID, PROPID, APPNAME)
	ALLOW REVERSE SCANS ;

CREATE TABLE STAGE_BUS_PARAM ( 
	PARAMETER_PK   	BIGINT NOT NULL,
	PARAMETER_CODE 	VARCHAR(40) NOT NULL,
	PARAMETER_NAME 	VARCHAR(255),
	PARAMETER_VALUE	VARCHAR(255),
	VERSION_STATUS 	VARCHAR(20),
	ENTITY_ID      	BIGINT NOT NULL,
	VERSION_NUMBER 	BIGINT,
	EFFECTIVE_DATE 	TIMESTAMP,
	VERSION_TIME   	BIGINT NOT NULL,
	STATUS         	CHARACTER(1),
	GROUP_CODE     	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_BUS_PRM_I1
	ON STAGE_BUS_PARAM(GROUP_CODE)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_BUS_PARAM
	ADD CONSTRAINT PKSTAGE_BUS_PARAM
	PRIMARY KEY (PARAMETER_PK);

ALTER TABLE STAGE_BUS_PARAM
	ADD CONSTRAINT UISTAGE_BUS_PARAM
	UNIQUE (PARAMETER_CODE, PARAMETER_PK);

CREATE TABLE STAGE_BUS_PARAM_GRP ( 
	GROUP_CODE  	VARCHAR(40) NOT NULL,
	GROUP_NAME  	VARCHAR(255),
	VERSION_TIME	BIGINT NOT NULL,
	STATUS      	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_BUS_PARAM_GRP
	ADD CONSTRAINT PK_STG_BUS_PAR_GRP
	PRIMARY KEY (GROUP_CODE);

CREATE TABLE STAGE_CC_DOC_LOC ( 
	DOC_LOC_ID            	BIGINT NOT NULL,
	SUB_CATEGORY          	VARCHAR(20) NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT,
	CMS_LE_SUB_PROFILE_ID 	BIGINT,
	CMS_PLEDGOR_DTL_ID    	BIGINT,
	DOC_ORIG_COUNTRY      	CHARACTER(2),
	DOC_ORIG_ORGANISATION 	VARCHAR(20),
	REMARKS               	VARCHAR(350),
	IS_DELETED            	CHARACTER(1),
	VERSION_TIME          	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CCDL_I1
	ON STAGE_CC_DOC_LOC(CMS_LSP_LMT_PROFILE_ID, SUB_CATEGORY, CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_CC_DOC_LOC
	ADD CONSTRAINT PK_STG_CC_DOC_LOC
	PRIMARY KEY (DOC_LOC_ID);

CREATE TABLE STAGE_CC_TASK ( 
	TASK_ID               	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	CMS_PLEDGOR_DTL_ID    	BIGINT,
	CMS_LMP_SUB_PROFILE_ID	BIGINT,
	CATEGORY              	VARCHAR(40),
	DMCL_CNTRY_ISO_CODE   	CHARACTER(2),
	ORG_CODE              	VARCHAR(20),
	REMARKS               	VARCHAR(256),
	VERSION_TIME          	BIGINT,
	IS_DELETED            	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_CC_TASK
	ADD CONSTRAINT PK_STAGE_CC_TASK
	PRIMARY KEY (TASK_ID);

CREATE TABLE STAGE_CCC_GENERATED ( 
	CCC_ID                 	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	CMS_LE_SUB_PROFILE_ID  	BIGINT,
	CMS_PLEDGOR_DTL_ID     	BIGINT,
	CHECKLIST_ID           	BIGINT,
	SUB_CATEGORY           	VARCHAR(20) NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	BIGINT,
	CCC_REF                	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	VARCHAR(20),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	VARCHAR(20),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	BCA_EXT_RVW_DATE       	TIMESTAMP,
	BCA_APPR_DATE          	TIMESTAMP,
	BCA_NEXT_RVW_DATE      	TIMESTAMP,
	BCA_ORIG_CTRY          	CHARACTER(2),
	BCA_ORIG_ORG           	VARCHAR(20),
	BCA_APPR_AUTHORITY     	VARCHAR(100),
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	BFL_ISSUED_DATE        	TIMESTAMP,
	LEGAL_NAME             	VARCHAR(100),
	CUST_NAME              	VARCHAR(100),
	CUST_SEGMENT           	VARCHAR(10),
	CREDIT_GRADE_CODE      	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CCC_GEN_I2
	ON STAGE_CCC_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CCC_GEN_I3
	ON STAGE_CCC_GENERATED(CMS_PLEDGOR_DTL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CCC_GEN_I1
	ON STAGE_CCC_GENERATED(CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_CCC_GENERATED
	ADD CONSTRAINT PK_STAGE_CCC_GEN
	PRIMARY KEY (CCC_ID);

CREATE TABLE STAGE_CCC_GENERATED_ITEM ( 
	CCC_ITEM_ID         	BIGINT NOT NULL,
	CCC_ID              	BIGINT,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	IS_DELETED          	CHARACTER(1),
	ACTIVATED_LIMIT_CCY 	CHARACTER(3),
	ACTIVATED_LIMIT     	DECIMAL(20,2) NOT NULL,
	CCC_ITEM_REF        	BIGINT,
	LIMIT_TYPE          	VARCHAR(10),
	MATURITY_DATE       	TIMESTAMP,
	LMT_AMT_CCY         	CHARACTER(3),
	LMT_AMT             	DECIMAL(20,2),
	PRD_TYPE            	VARCHAR(10),
	LMT_BKG_CTRY        	VARCHAR(20),
	LMT_BKG_ORG         	VARCHAR(20),
	OUTER_LMT_REF       	VARCHAR(20),
	COBORROWER_LEID     	VARCHAR(20),
	COBORROWER_NAME     	VARCHAR(100),
	LMT_APPROVAL_DATE   	TIMESTAMP,
	CLEAN_TYPE          	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CCC_IT_I1
	ON STAGE_CCC_GENERATED_ITEM(CCC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_CCC_GENERATED_ITEM
	ADD CONSTRAINT PK_STG_CCC_GEN_ITM
	PRIMARY KEY (CCC_ITEM_ID);

CREATE TABLE STAGE_CHECKLIST ( 
	CHECKLIST_ID             	BIGINT NOT NULL,
	CMS_COLLATERAL_ID        	BIGINT,
	MASTERLIST_ID            	BIGINT,
	CATEGORY                 	VARCHAR(40),
	VERSION_TIME             	BIGINT NOT NULL,
	CMS_PLEDGOR_DTL_ID       	BIGINT,
	CMS_LSP_LMT_PROFILE_ID   	BIGINT,
	CMS_LMP_SUB_PROFILE_ID   	BIGINT,
	SUB_CATEGORY             	VARCHAR(20),
	STATUS                   	VARCHAR(30),
	LAST_DOC_REC_DATE        	TIMESTAMP,
	LEGAL_FIRM               	VARCHAR(40),
	LAW_FIRM_PANEL_FLAG         VARCHAR(2),
	LAWYER_REFERENCE_NUMBER   	VARCHAR(50),
	LAWYER_IN_CHARGE     		VARCHAR(20),
	LAW_FIRM_ADDRESS     		VARCHAR(200),
	LAW_FIRM_CONTACT_NUMBER   	VARCHAR(20),
	LAWYER_EMAIL      			VARCHAR(50),
	ALLOW_DELETE_IND         	CHARACTER(1),
	DOC_ORIG_COUNTRY         	CHARACTER(2),
	DOC_ORIG_ORGANISATION    	VARCHAR(20),
	APPLICATION_TYPE    		VARCHAR(40),
	REMARKS                  	VARCHAR(2000),
	DEFICIENCY_IDENTIFY_DATE 	TIMESTAMP,
	NEXT_ACTION_DATE         	TIMESTAMP,
	VALUER_FIRM                	VARCHAR(40),
	VALUER_FIRM_PANEL_FLAG     	VARCHAR(2),
	VALUER_REFERENCE_NUMBER    	VARCHAR(50),
	VALUER_IN_CHARGE           	VARCHAR(20),
	VALUER_FIRM_ADDRESS        	VARCHAR(200),
	VALUER_FIRM_CONTACT_NUMBER 	VARCHAR(20),
	VALUER_EMAIL               	VARCHAR(50),
	INSURER_FIRM               	VARCHAR(40),
	INSURER_FIRM_PANEL_FLAG    	VARCHAR(2),
	INSURER_REFERENCE_NUMBER   	VARCHAR(50),
	INSURER_IN_CHARGE          	VARCHAR(20),
	INSURER_FIRM_ADDRESS       	VARCHAR(200),
	INSURER_FIRM_CONTACT_NUMBER	VARCHAR(20),
	INSURER_EMAIL              	VARCHAR(50),
	DISABLE_COLLABORATION_IND	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CHKLST_I4
	ON STAGE_CHECKLIST(CMS_LSP_LMT_PROFILE_ID, CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CHKLST_I1
	ON STAGE_CHECKLIST(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CHKLST_I2
	ON STAGE_CHECKLIST(CATEGORY, STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CHKLST_I3
	ON STAGE_CHECKLIST(CMS_LSP_LMT_PROFILE_ID, CMS_LMP_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_CHECKLIST
	ADD CONSTRAINT PK_STAGE_CHECKLIST
	PRIMARY KEY (CHECKLIST_ID);

CREATE TABLE STAGE_CHECKLIST_ITEM ( 
	DOC_ITEM_ID                 	BIGINT NOT NULL,
	DOC_DESCRIPTION             	VARCHAR(500),
	IS_PRE_APPROVE       			CHARACTER(1),
	IS_INHERITED           			CHARACTER(1),
	IN_VAULT                    	CHARACTER(1),
	IN_EXT_CUSTODY              	CHARACTER(1),
	IS_MANDATORY                	CHARACTER(1),
	ACTION_PARTY                	VARCHAR(100),
	STATUS                      	VARCHAR(30),
	DOC_DATE                    	TIMESTAMP,
	EXPIRY_DATE                 	TIMESTAMP,
	IS_AUDIT                    	CHARACTER(1),
	REMARKS                     	VARCHAR(1600),
	IS_DELETED                  	CHARACTER(1),
	CHECKLIST_ID                	BIGINT,
	DOCUMENT_ID                 	BIGINT,
	DOCUMENT_CODE               	VARCHAR(20),
	DOC_ITEM_REF                	BIGINT NOT NULL,
	FORM_NO                     	VARCHAR(50),
	DOC_REFERENCE               	VARCHAR(100),
	DEFER_EXPIRY_DATE           	TIMESTAMP,
	MONITOR_TYPE                	VARCHAR(20),
	IS_LOCKED                   	CHARACTER(1),
	IDENTIFY_DATE               	TIMESTAMP,
	DOC_COMPLETION_DATE         	TIMESTAMP,
	LAST_UPDATE_DATE            	TIMESTAMP,
	CPC_CUST_STATUS             	VARCHAR(30),
	PARENT_CHECKLIST_ITEM_REF   	BIGINT,
	DEFER_EXTENDED_DATE         	TIMESTAMP,
	CPC_CUST_STATUS_UPDATE_DATE 	TIMESTAMP,
	EFFECTIVE_DATE              	TIMESTAMP,
	CUST_STATUS_LAST_UPDATE_DATE	TIMESTAMP,
	SHARE_STATUS                	CHARACTER(1),
	RECEIVED_DATE            		TIMESTAMP,
    COMPLETED_DATE           		TIMESTAMP,
    EXPECTED_RETURN_DATE     		TIMESTAMP,
    WAIVED_DATE              		TIMESTAMP,
    LODGED_DATE              		TIMESTAMP,
    TEMP_UPLIFTED_DATE       		TIMESTAMP,
    PERM_UPLIFTED_DATE       		TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CL_IT_I4
	ON STAGE_CHECKLIST_ITEM(IDENTIFY_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CL_IT_I3
	ON STAGE_CHECKLIST_ITEM(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CL_IT_I2
	ON STAGE_CHECKLIST_ITEM(EXPIRY_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CL_IT_I1
	ON STAGE_CHECKLIST_ITEM(DOC_ITEM_REF)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_CHECKLIST_ITEM
	ADD CONSTRAINT PK_STG_CHKLIST_ITM
	PRIMARY KEY (DOC_ITEM_ID);

CREATE TABLE STAGE_CHECKLIST_ITEM_SHARE ( 
	CHECKLIST_ITEM_SHARE_ID 	BIGINT NOT NULL,
	DOC_ITEM_ID             	BIGINT,
	CHECKLIST_ID            	BIGINT,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	CMS_LMP_SUB_PROFILE_ID  	BIGINT,
	CMS_PLEDGOR_DTL_ID      	BIGINT,
	CMS_COLLATERAL_ID       	BIGINT,
	DETAILS                 	VARCHAR(1600),
	CHECKLIST_ITEM_SHARE_REF	BIGINT,
	STATUS                  	VARCHAR(12) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_CHECKLIST_ITEM_SHARE
	ADD CONSTRAINT PK_STG_CHK_ITM_SHR
	PRIMARY KEY (CHECKLIST_ITEM_SHARE_ID);

CREATE TABLE STAGE_CO_BORROWER_LIMIT ( 
	CMS_LSP_CO_BORROW_LMT_ID      	BIGINT NOT NULL,
	CMS_LIMIT_ID                  	BIGINT,
	CREATE_USER_ID                	BIGINT,
	LAST_UPDATE_USER_ID           	BIGINT,
	VERIFY_USER_ID                	BIGINT,
	CREATE_DATE                   	TIMESTAMP,
	LAST_UPDATE_DATE              	TIMESTAMP,
	LCL_COBO_LE_ID                	VARCHAR(20),
	LCL_COBO_LSP_ID               	BIGINT,
	VERIFY_DATE                   	TIMESTAMP,
	LCL_BKG_LOCTN_ID              	BIGINT,
	UPDATE_COUNT                  	BIGINT,
	UPDATE_STATUS_IND             	CHARACTER(1),
	LCL_CRRNCY_ISO_CODE           	CHARACTER(3),
	LCL_LMT_AMT                   	DECIMAL(20,2),
	CHANGE_IND                    	CHARACTER(1),
	LCL_LE_ID                     	VARCHAR(20),
	LCL_LMT_ID                    	VARCHAR(43),
	LCL_LSP_ID                    	BIGINT,
	LCL_LLP_ID                    	VARCHAR(35),
	LCL_ACTIVATED_LIMIT           	DECIMAL(20,2),
	CMS_LIMIT_STATUS              	VARCHAR(20),
	CMS_CUSTOMER_ID               	BIGINT,
	CMS_BKG_COUNTRY               	CHARACTER(2),
	CMS_BKG_ORGANISATION          	VARCHAR(20),
	CMS_VERSION_TIME              	BIGINT,
	CMS_OUTER_LIMIT_REF           	VARCHAR(43),
	LCL_ID                        	VARCHAR(43),
	CMS_LIMIT_ACTIVATED_IND       	CHARACTER(1),
	CMS_IS_LIMIT_EXISTING_IND     	CHARACTER(1),
	CMS_REF_ID                    	BIGINT,
	GROUP_ID                      	BIGINT,
	ZERO_REASON                   	VARCHAR(250),
	ZERO_DATE                     	TIMESTAMP,
	ZERO_IND                      	CHARACTER(1),
	REQUIRED_SECURITY_COVERAGES   	DOUBLE,
	LIMIT_ZERORISED               	CHARACTER(1),
	ZERORISED_DATE                	TIMESTAMP,
	ZERORISED_REASONS             	VARCHAR(250),
	LMT_SEC_TYPE_NUM              	VARCHAR(40),
	LMT_SEC_TYPE_VALUE            	VARCHAR(10),
	CMS_CR125_DERIVE_ACTVD_LMT_AMT	DECIMAL(20,2),
	CMS_ACT_SEC_COVERAGE          	DOUBLE,
	SOURCE_ID                     	VARCHAR(10),
	LCL_OUTSTANDING_AMT           	DECIMAL(20,2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_CO_BORROWER_LIMIT
	ADD CONSTRAINT PK_STAGE_CO_BO_LMT
	PRIMARY KEY (CMS_LSP_CO_BORROW_LMT_ID);

CREATE TABLE STAGE_COLLATERAL_TASK ( 
	TASK_ID               	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID	BIGINT NOT NULL,
	CMS_LSP_APPR_LMTS_ID  	BIGINT,
	CMS_COLLATERAL_ID     	BIGINT,
	SECURITY_LOCATION     	CHARACTER(2),
	REMARKS               	VARCHAR(256),
	VERSION_TIME          	BIGINT,
	IS_DELETED            	CHARACTER(1),
	SECURITY_ORGANISATION 	VARCHAR(20),
	CMS_LE_SUB_PROFILE_ID 	BIGINT,
	CUSTOMER_CATEGORY     	VARCHAR(2) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_COL_TSK_I1
	ON STAGE_COLLATERAL_TASK(CMS_LE_SUB_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_COLLATERAL_TASK
	ADD CONSTRAINT PK_STG_COL_TASK
	PRIMARY KEY (TASK_ID);

CREATE TABLE STAGE_COMMON_CODE_CATEGORY ( 
	CATEGORY_ID      	BIGINT NOT NULL,
	CATEGORY_CODE    	VARCHAR(40) NOT NULL,
	CATEGORY_NAME    	VARCHAR(255),
	CATEGORY_TYPE    	DECIMAL(1,0),
	ACTIVE_STATUS    	CHARACTER(1),
	VERSION_TIME     	BIGINT,
	STATUS           	CHARACTER(1),
	REF_CATEGORY_CODE	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE STAGE_COMMON_CODE_ENTRY ( 
	STAGE_ID            	BIGINT NOT NULL,
	ENTRY_ID            	BIGINT NOT NULL,
	ENTRY_CODE          	VARCHAR(40),
	ENTRY_NAME          	VARCHAR(255),
	ACTIVE_STATUS       	CHARACTER(1),
	CATEGORY_CODE       	VARCHAR(40),
	CATEGORY_CODE_ID    	BIGINT,
	ENTRY_SOURCE        	VARCHAR(40),
	COUNTRY             	VARCHAR(3),
	GROUP_ID            	BIGINT,
	REF_ENTRY_CODE      	VARCHAR(100),
	VERSION_TIME        	BIGINT,
	STATUS              	VARCHAR(15),
	STAGING_REFERENCE_ID	BIGINT,
	IS_NEW              	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_COMMON_CODE_ENTRY
	ADD CONSTRAINT CCC_ENT_STG_ID_PK
	PRIMARY KEY (STAGE_ID);

CREATE TABLE STAGE_CONVENANT ( 
	CONVENANT_ID          	BIGINT NOT NULL,
	CONVENANT_REF_ID      	BIGINT NOT NULL,
	CONV_DESCRIPTION      	VARCHAR(500),
	REMARKS               	VARCHAR(2000),
	IS_VERIFIED           	CHARACTER(1),
	IS_DELETED            	CHARACTER(1),
	DATE_CHECKED          	TIMESTAMP,
	RECURRENT_DOC_ID      	BIGINT,
	FREQUENCY             	BIGINT,
	FREQUENCY_UNIT        	VARCHAR(20),
	DUE_DATE              	TIMESTAMP,
	PRINT_REMINDER_IND    	CHARACTER(1),
	DOC_END_DATE          	TIMESTAMP,
	GRACE_PERIOD          	BIGINT,
	GRACE_PERIOD_UNIT     	VARCHAR(20),
	CHASE_REMIND_IND      	CHARACTER(1),
	ONE_OFF               	CHARACTER(1) DEFAULT 'N',
	LAST_DOC_ENTRY_DATE   	TIMESTAMP,
	RISK_TRIGGER          	CHARACTER(1) DEFAULT 'N',
	FEE                   	CHARACTER(1) DEFAULT 'N',
	IS_PARAMETERIZED_DESC   CHARACTER(1) DEFAULT 'Y',
	SOURCE_ID 				VARCHAR(10),
	END_DATE_CHANGED_COUNT	INTEGER 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CONV_I1
	ON STAGE_CONVENANT(RECURRENT_DOC_ID)
	ALLOW REVERSE SCANS ;

create index STAGE_CONVENANT_PK1 on STAGE_CONVENANT
(CONVENANT_REF_ID);

ALTER TABLE STAGE_CONVENANT
	ADD CONSTRAINT PK_STAGE_CONVENANT
	PRIMARY KEY (CONVENANT_ID);

CREATE TABLE STAGE_CONVENANT_SUB_ITEM ( 
	SUB_ITEM_ID       	BIGINT NOT NULL,
	SUB_ITEM_REF_ID   	BIGINT NOT NULL,
	DOC_END_DATE      	TIMESTAMP,
	DUE_DATE          	TIMESTAMP,
	CHECKED_DATE      	TIMESTAMP,
	DEFERRED_DATE     	TIMESTAMP,
	PRINT_REMINDER_IND	CHARACTER(1),
	IS_DELETED_IND    	CHARACTER(1),
	CONVENANT_ID      	BIGINT,
	STATUS            	VARCHAR(30),
	WAIVED_DATE       	TIMESTAMP,
	DEFERRED_CNT      	BIGINT DEFAULT 0,
	REMARKS           	VARCHAR(2000),
	IS_VERIFIED_IND   	CHARACTER(1),
	FREQUENCY         	BIGINT,
	FREQUENCY_UNIT    	VARCHAR(20),
	GRACE_PERIOD      	BIGINT,
	GRACE_PERIOD_UNIT 	VARCHAR(20) ,
	ACTION_PARTY    	VARCHAR(40)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CONV_SIT_I1
	ON STAGE_CONVENANT_SUB_ITEM(CONVENANT_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CONV_SIT_I2
	ON STAGE_CONVENANT_SUB_ITEM(DEFERRED_DATE)
	ALLOW REVERSE SCANS ;
	
create index STAGE_CONVENANT_SUB_ITEM_PK1 on STAGE_CONVENANT_SUB_ITEM
(SUB_ITEM_ID);	

CREATE TABLE STAGE_CUSTODIAN_DOC ( 
	CUSTODIAN_DOC_ID      	BIGINT NOT NULL,
	STATUS                	VARCHAR(30),
	REASON                	VARCHAR(200),
	CHECKLIST_ITEM_ID     	BIGINT,
	CMS_LSP_APPR_LMTS_ID  	BIGINT,
	CHECKLIST_ID          	BIGINT,
	CMS_PLEDGOR_DTL_ID    	BIGINT,
	CMS_LMP_SUB_PROFILE_ID	BIGINT,
	CMS_COLLATERAL_ID     	BIGINT,
	CATEGORY              	VARCHAR(40) NOT NULL,
	SUB_CATEGORY          	VARCHAR(20) NOT NULL,
	VERSION_TIME          	BIGINT NOT NULL,
	LAST_UPDATE_DATE      	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_CSTO_DOC_I3
	ON STAGE_CUSTODIAN_DOC(CHECKLIST_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CSTO_DOC_I1
	ON STAGE_CUSTODIAN_DOC(STATUS)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CSTO_DOC_I4
	ON STAGE_CUSTODIAN_DOC(CMS_COLLATERAL_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_CSTO_DOC_I2
	ON STAGE_CUSTODIAN_DOC(CHECKLIST_ITEM_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_CUSTODIAN_DOC
	ADD CONSTRAINT PK_STG_CUST_DOC
	PRIMARY KEY (CUSTODIAN_DOC_ID);

CREATE TABLE STAGE_DDN_GENERATED ( 
	DDN_ID                 	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	DEFERRED_TO            	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	BIGINT,
	IS_SCC_ISSUED          	CHARACTER(1),
	VALID_FOR              	DOUBLE,
	EXTENDED_TO_DATE       	TIMESTAMP,
	APPROVAL_DATE          	TIMESTAMP,
	APPROVAL_BY            	VARCHAR(50),
	DDN_REF                	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	CHARACTER(2),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	CHARACTER(2),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	TYPE                   	CHARACTER(3),
	BCA_APPROVAL_DATE      	TIMESTAMP,
	BCA_APPROVAL_AUTHORITY 	VARCHAR(100),
	BCA_NEXT_REVIEW_DATE   	TIMESTAMP,
	BCA_EXT_REVIEW_DATE    	TIMESTAMP,
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	BCA_ORIGINAL_COUNTRY   	CHARACTER(2),
	BCA_ORIGINAL_ORG       	VARCHAR(20),
	LEGAL_NAME             	VARCHAR(100),
	CUSTOMER_NAME          	VARCHAR(100),
	CUST_SEGMENT_CODE      	VARCHAR(10),
	BFL_ISSUED_DATE        	TIMESTAMP,
	CREDIT_GRADE_CODE      	VARCHAR(10),
	SUB_PROFILE_ID         	VARCHAR(20),
	LEGAL_ID               	VARCHAR(20),
	RELEASE_TO				VARCHAR(50)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_DDN_GEN_I1
	ON STAGE_DDN_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_DDN_GENERATED
	ADD CONSTRAINT PK_STG_DDN_GEN
	PRIMARY KEY (DDN_ID);

CREATE TABLE STAGE_DDN_GENERATED_ITEM ( 
	DDN_ITEM_ID           	BIGINT NOT NULL,
	DDN_ID                	BIGINT,
	CMS_LSP_APPR_LMTS_ID  	BIGINT NOT NULL,
	DDN_LIMIT_CCY         	CHARACTER(3),
	DDN_LIMIT             	DECIMAL(20,2),
	HAS_ISSUED            	CHARACTER(1) NOT NULL,
	IS_DELETED            	CHARACTER(1),
	DDN_ITEM_REF          	BIGINT,
	ISSUE_DATE            	TIMESTAMP,
	LIMIT_TYPE            	VARCHAR(10),
	HAS_CERTIFICATION     	CHARACTER(1),
	MATURITY_DATE         	TIMESTAMP,
	APPROVED_LIMIT_AMT_CCY	CHARACTER(3),
	APPROVED_LIMIT_AMT    	DECIMAL(20,2),
	BKG_LOCTN_CTRY        	CHARACTER(2),
	SECURITY_IDS          	VARCHAR(2000),
	SECURITY_TYPES        	VARCHAR(2000),
	BKG_LOCTN_ORG         	VARCHAR(20),
	PRODUCT_TYPE          	VARCHAR(20),
	OUTER_LIMIT_REF       	VARCHAR(20),
	CO_BORROWER_LEGAL_ID  	VARCHAR(20),
	CO_BORROWER_NAME      	VARCHAR(100),
	APPROVAL_LIMIT_DATE   	TIMESTAMP,
	DOC_NUMBER				BIGINT,
	DOC_CODE				VARCHAR(20),
	DOC_DESC				VARCHAR(500),
	DATE_DEFER				TIMESTAMP,
	DATE_OF_RETURN			TIMESTAMP,
	DOC_STATUS				VARCHAR(30),
	ACTION_PARTY			VARCHAR(100),
	APPROVAL_DATE			TIMESTAMP,
	APPROVED_BY				VARCHAR(50)
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_DDN_IT_I1
	ON STAGE_DDN_GENERATED_ITEM(DDN_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_DDN_GENERATED_ITEM
	ADD CONSTRAINT PK_STG_DDN_GEN_ITM
	PRIMARY KEY (DDN_ITEM_ID);

CREATE TABLE STAGE_DEFERRAL_GENERATED ( 
	DEFERRAL_ID             	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	PROPOSED_BY             	VARCHAR(50),
	PROPOSED_BY_DESIGNAT    	VARCHAR(50),
	PROPOSED_BY_SIGN_NO     	VARCHAR(20),
	PROPOSED_BY_DATE        	TIMESTAMP,
	SUPPORTED_BY            	VARCHAR(50),
	SUPPORTED_BY_DESIGNAT   	VARCHAR(50),
	SUPPORTED_BY_COIN_NO    	VARCHAR(20),
	SUPPORTED_BY_DATE       	TIMESTAMP,
	APPROVED_BY_SCO         	VARCHAR(50),
	APPROVED_BY_SCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_SCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_SCO_DATE    	TIMESTAMP,
	APPROVED_BY_RCO         	VARCHAR(50),
	APPROVED_BY_RCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_RCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_RCO_DATE    	TIMESTAMP,
	APPROVED_BY_CCO         	VARCHAR(50),
	APPROVED_BY_CCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_CCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_CCO_DATE    	TIMESTAMP,
	NAME                    	VARCHAR(50),
	CREDIT_COMMITTEE        	VARCHAR(50),
	MIN_OF_MEETING          	VARCHAR(100),
	MEETING_DATE            	TIMESTAMP,
	REASON                  	VARCHAR(640),
	VERSION_TIME            	BIGINT,
	CMS_CUSTOMER_ID         	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_DEFERRAL_GENERATED
	ADD CONSTRAINT STG_DEFER_GEN
	PRIMARY KEY (DEFERRAL_ID);

CREATE TABLE STAGE_DEFERRAL_GENERATED_ITEM ( 
	DEFERRAL_ITEM_ID 	BIGINT NOT NULL,
	DEFERRAL_ITEM_REF	BIGINT,
	DEFERRAL_ID      	BIGINT,
	CHECKLIST_ID     	BIGINT,
	CHECKLIST_ITEM_ID	BIGINT,
	IS_DELETED       	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_DEF_IT_I1
	ON STAGE_DEFERRAL_GENERATED_ITEM(DEFERRAL_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_DEFERRAL_GENERATED_ITEM
	ADD CONSTRAINT STG_DEFER_GEN_ITM
	PRIMARY KEY (DEFERRAL_ITEM_ID);

CREATE TABLE STAGE_DOCUMENT_GLOBALLIST ( 
	DOCUMENT_ID         	BIGINT NOT NULL,
	DOCUMENT_DESCRIPTION	VARCHAR(500) NOT NULL,
	DOCUMENT_CODE       	VARCHAR(20),
	CATEGORY            	VARCHAR(20) NOT NULL,
	EXPIRY_DATE         	TIMESTAMP,
	VERSION_TIME        	BIGINT,
	DOC_FREQ_UNIT       	VARCHAR(20),
	DOC_FREQ            	BIGINT,
	MONITOR_TYPE        	VARCHAR(20),
	DOC_VERSION      		VARCHAR(7),
    IS_PRE_APPROVE   		CHAR(1),
    IS_FOR_BORROWER  		CHAR(1),
    IS_FOR_PLEDGOR   		CHAR(1),
    LOAN_APP_TYPE    		VARCHAR(40)		
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_DOCUMENT_GLOBALLIST
	ADD CONSTRAINT PK_STG_DOC_GBLIST
	PRIMARY KEY (DOCUMENT_ID);

CREATE TABLE STAGE_DOCUMENT_ITEM ( 
	DOC_ITEM_ID    					BIGINT NOT NULL,
	DOC_DESCRIPTION					VARCHAR(500),
	IN_VAULT       					CHARACTER(1),
	IN_EXT_CUSTODY 					CHARACTER(1),
	IS_MANDATORY   					CHARACTER(1),
	IS_MANDATORY_FOR_BORROWER   	CHARACTER(1),
	IS_MANDATORY_FOR_PLEDGOR   		CHARACTER(1),
	EXPIRY_DATE    					TIMESTAMP,
	IS_AUDIT       					CHARACTER(1),
	IS_DELETED     					CHARACTER(1),
	MASTERLIST_ID  					BIGINT,
	DOCUMENT_ID    					BIGINT,
	DOCUMENT_CODE  					VARCHAR(20),
	FROM_DOC_ID    					BIGINT,
	MONITOR_TYPE   					VARCHAR(20),
	DOC_VERSION      				VARCHAR(7),
	WITH_TITLE					CHAR(1),
	IS_PROPERTY_COMPLETED				CHAR(1),
	WITHOUT_TITLE					CHAR(1),
	UNDER_CONSTRUCTION				CHAR(1),
	NEW_WITH_FBR					CHAR(1),
	NEW_WITHOUT_FBR					CHAR(1), 
	USED_WITH_FBR					CHAR(1),
	USED_WITHOUT_FBR				CHAR(1), 
	IS_PRE_APPROVE   				CHAR(1),
	IS_FOR_BORROWER  				CHAR(1),
	IS_FOR_PLEDGOR   				CHAR(1),
	LOAN_APP_TYPE    				VARCHAR(40)		
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_DOCUMENT_ITEM
	ADD CONSTRAINT PK_STG_DOCU_ITEM
	PRIMARY KEY (DOC_ITEM_ID);

CREATE TABLE STAGE_DOCUMENT_MASTERLIST ( 
	MASTERLIST_ID       	BIGINT NOT NULL,
	COUNTRY_ISO_CODE    	CHARACTER(2),
	CATEGORY            	VARCHAR(40),
	APPLICABLE_LAW      	VARCHAR(20),
	SECURITY_SUB_TYPE_ID	VARCHAR(30),
	FROM_TEMPLATE_ID    	BIGINT,
	CUSTOMER_TYPE_CODE  	VARCHAR(20),
	SECURITY_TYPE_ID    	VARCHAR(20),
	VERSION_TIME        	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_DOCUMENT_MASTERLIST
	ADD CONSTRAINT PK_STG_DOC_MLIST
	PRIMARY KEY (MASTERLIST_ID);

CREATE TABLE STAGE_LIMIT ( 
	CMS_LSP_APPR_LMTS_ID	BIGINT	NOT NULL,
	CMS_LIMIT_PROFILE_ID	BIGINT,
	LMT_ID					VARCHAR(43),
	LOS_LMT_ID				VARCHAR(43),
	ACF_NO					VARCHAR(40),
	LMT_BKG_LOCTN_ID		BIGINT,
	LMT_PRD_TYPE_NUM		VARCHAR(40),
	LMT_PRD_TYPE_VALUE		VARCHAR(60),
	LMT_TYPE_NUM			VARCHAR(40),
	LMT_TYPE_VALUE			VARCHAR(10),
	LMT_AMT					DECIMAL(20,2),
	LMT_SEC_TYPE_NUM		VARCHAR(40),
	LMT_SEC_TYPE_VALUE		VARCHAR(10),
	LMT_CRRNCY_ISO_CODE		CHARACTER(3),
	LMT_OUTER_LMT_ID		BIGINT,
	LMT_EXPRY_DATE			TIMESTAMP,
	LMT_INTRST_BASE_NUM		VARCHAR(40),
	LMT_TENOR				BIGINT,
	LMT_INTRST_BASE_VALUE	VARCHAR(10),
	INTEREST_RATE			DECIMAL(11,9),
	LMT_CMMSN				VARCHAR(30),
	LMT_FEE					VARCHAR(30),
	LMT_CONDTN_TEXT			VARCHAR(255),
	LMT_ADVISE_IND			CHARACTER(1),
	LMT_CMMTD_IND			CHARACTER(1),
	LMT_SHARE_IND			CHARACTER(1),
	CREATE_USER_ID			BIGINT,
	LAST_UPDATE_USER_ID		BIGINT,
	VERIFY_USER_ID			BIGINT,
	CREATE_DATE				TIMESTAMP,
	LAST_UPDATE_DATE		TIMESTAMP,
	VERIFY_DATE				TIMESTAMP,
	UPDATE_COUNT			BIGINT,
	UPDATE_STATUS_IND		CHARACTER(1),
	CHANGE_IND				CHARACTER(1),
	LMT_TENOR_BASIS_NUM		VARCHAR(40),
	LMT_LLP_ID				BIGINT,
	LMT_TENOR_BASIS_VALUE	VARCHAR(10),
	LMT_LE_ID				VARCHAR(20),
	LMT_LSP_ID				BIGINT,
	CMS_ACTIVATED_LIMIT		DECIMAL(20,2),
	CMS_ACT_SEC_COVERAGE	DOUBLE,
	CMS_REQ_SEC_COVERAGE	DOUBLE,
	CMS_VERSION_TIME		BIGINT,
	CMS_LIMIT_STATUS		VARCHAR(20),
	CMS_BKG_COUNTRY			CHARACTER(2),
	CMS_BKG_ORGANISATION	VARCHAR(20),
	CMS_IS_LIMIT_EXISTING_IND	CHARACTER(1),
	CMS_ACTIVATED_LIMIT_IND	CHARACTER(1),
	CMS_OUTER_LMT_REF		VARCHAR(43),
	CMDT_OP_LMT				DECIMAL(20,2),
	CMS_OUTER_LMT_PROF_ID	BIGINT,
	ZERO_REASON				VARCHAR(250),
	ZERO_DATE				TIMESTAMP,
	ZERO_IND				CHARACTER(1),
	CMS_CR125_DERIVE_ACTVD_LMT_AMT	DECIMAL(20,2),
	LMT_PRD_GRP_NUM			VARCHAR(40),
	LMT_PRD_GRP_VALUE		VARCHAR(40),
	CMS_DRAWING_LIMIT		DECIMAL(20,2),
	CMS_OUTSTANDING_AMT		DECIMAL(20,2),
	LMT_DESC				VARCHAR(250),
	LMT_FAC_TYPE_NUM		VARCHAR(40),
	LMT_FAC_TYPE_VALUE		VARCHAR(40),
	SOURCE_ID				VARCHAR(10),
	LMT_BCA_REF_NUM			VARCHAR(35),
	LOS_BCA_REF_NUM			VARCHAR(35),
	LMT_ID_OLD				VARCHAR(20),
	LMT_OMNIBUS_IND			CHARACTER(1),
	LMT_FAC_CODE			VARCHAR(3),
	LMT_FAC_SEQ				BIGINT,
	ACCOUNT_TYPE			CHARACTER(1),
	AVAILABLE_LMT			DECIMAL(20,2),
	LOAN_TYPE				CHARACTER(2),
	CMS_ACTUAL_SEC_COVERAGE_AMT	DECIMAL(30,12),
	CMS_OMV_SEC_COVERAGE_AMT	DECIMAL(30,12),
	CMS_FSV_SEC_COVERAGE_AMT	DECIMAL(30,12),
	INNER_LIMIT_ORDERING	SMALLINT,
	OMNIBUS_ENVELOPE_ID		BIGINT,
	OMNIBUS_ENVELOPE_NAME	VARCHAR(50),
	DISBURSED_IND			VARCHAR(1),
	LMT_LOAN_SECTOR_NUM		VARCHAR(40),
	LMT_LOAN_SECTOR_VALUE	VARCHAR(10),
	LMT_INTRST_MARGIN		VARCHAR(30)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX STG_APPR_LMTS_IDX5
	ON STAGE_LIMIT(CMS_LSP_APPR_LMTS_ID, CMS_BKG_ORGANISATION DESC, CMS_BKG_COUNTRY DESC, CMS_LIMIT_PROFILE_ID DESC)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_APPR_LMTS_IDX1
	ON STAGE_LIMIT(SOURCE_ID, LMT_BCA_REF_NUM, LMT_FAC_CODE, LMT_FAC_SEQ)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_APPR_LMTS_IDX3
	ON STAGE_LIMIT(LMT_ID, SOURCE_ID, CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_APPR_LMTS_IDX4
	ON STAGE_LIMIT(LMT_OUTER_LMT_ID, SOURCE_ID, CMS_LIMIT_STATUS, CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_APPR_LMTS_IDX2
	ON STAGE_LIMIT(CMS_LIMIT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_LIMIT
	ADD CONSTRAINT PK_STAGE_LIMIT
	PRIMARY KEY (CMS_LSP_APPR_LMTS_ID);

CREATE TABLE STAGE_LIMIT_PROFILE ( 
	CMS_LSP_LMT_PROFILE_ID     	BIGINT NOT NULL,
	LLP_ID                     	BIGINT,
	LLP_LE_ID                  	VARCHAR(20),
	LLP_LSP_ID                 	BIGINT,
	LLP_NEXT_ANNL_RVW_DATE     	TIMESTAMP,
	LLP_NEXT_INTRM_RVW_DATE    	TIMESTAMP,
	LLP_CRDT_PLCY_COMPLNCE_IND 	CHARACTER(1),
	LLP_UNWRT_STD_CMPLNCE_IND  	CHARACTER(1),
	LLP_EXTD_NEXT_RVW_DATE     	TIMESTAMP,
	LLP_PRJTD_ECON_PROFIT      	DECIMAL(20,2),
	LLP_EXPECT_LOSS_AMT        	DECIMAL(20,2),
	LLP_PROD_PRG_COMPLNCE_IND  	CHARACTER(1),
	LLP_CNTRY_RISK_APPR_REQ_IND	CHARACTER(1),
	LLP_BKG_LOCTN_ID           	BIGINT,
	CREATE_USER_ID             	BIGINT,
	LAST_UPDATE_USER_ID        	BIGINT,
	VERIFY_USER_ID             	BIGINT,
	CREATE_DATE                	TIMESTAMP,
	LAST_UPDATE_DATE           	TIMESTAMP,
	VERIFY_DATE                	TIMESTAMP,
	UPDATE_COUNT               	BIGINT,
	UPDATE_STATUS_IND          	CHARACTER(1),
	CHANGE_IND                 	CHARACTER(1),
	LLP_2ND_APPR_EMP_ID        	BIGINT,
	LLP_1ST_APPR_EMP_ID        	BIGINT,
	LLP_BCA_REF_NUM            	VARCHAR(35),
	LOS_BCA_REF_NUM            	VARCHAR(35),
	LLP_BCA_REF_APPR_DATE      	TIMESTAMP,
	CMS_REQ_SEC_COVERAGE       	DOUBLE,
	CMS_ACT_SEC_COVERAGE       	DOUBLE,
	CMS_APPR_OFFICER_GRADE     	VARCHAR(10),
	CMS_VERSION_TIME           	BIGINT,
	CMS_CUSTOMER_ID            	BIGINT,
	CMS_BCA_STATUS             	VARCHAR(20),
	CMS_BCA_CREATE_DATE        	TIMESTAMP,
	CMS_TAT_CREATE_DATE        	TIMESTAMP,
	CMS_BFL_REQUIRED_IND       	CHARACTER(1),
	CMS_ORIG_COUNTRY           	CHARACTER(2),
	CMS_ORIG_ORGANISATION      	VARCHAR(20),
	CMS_BCA_RENEWAL_IND        	CHARACTER(1),
	CMS_FULL_DOC_REVIEW_IND    	CHARACTER(1),
	CMS_BCA_COMPLETE_IND       	CHARACTER(1),
	CMS_CCC_COMPLETE_IND       	CHARACTER(1),
	CMS_SCC_COMPLETE_IND       	CHARACTER(1),
	LLP_1ST_APPR_EMP_NAME      	VARCHAR(100),
	LLP_2ND_APPR_EMP_NAME      	VARCHAR(100),
	CMS_BCA_LOCAL_IND          	CHARACTER(1),
	CMS_BFL_IND_UPDATE_DATE    	TIMESTAMP,
	CMS_EXTENDED_BFL_DATE      	TIMESTAMP,
	CMS_CB_ACT_SEC_COVERAGE    	DOUBLE,
	LLP_SEGMENT_CODE_NUM       	VARCHAR(40),
	LLP_SEGMENT_CODE_VALUE     	VARCHAR(10),
	ISLAMIC_FLAG               	CHARACTER(1),
	SOURCE_ID                  	VARCHAR(10),
	LSP_LMT_PROFILE_SRC_ID_OLD 	VARCHAR(19),
	CMS_BCA_JOINT_IND          	CHARACTER(1),
	LMT_PROFILE_TYPE           	VARCHAR(10),
	APPLICATION_TYPE    		VARCHAR(40),
    APPLICATION_LAW_TYPE        VARCHAR(40),
	CMS_CREATE_IND             	CHARACTER(1),
	CIF_SOURCE_ID              	VARCHAR(10),
    LI_GENERATION_DATE          TIMESTAMP    
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LMT_PROFILE_IDX1
	ON STAGE_LIMIT_PROFILE(LLP_BCA_REF_NUM, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_STAGE_LMT_PROFILE_IDX1
	ON STAGE_LIMIT_PROFILE(LLP_BCA_REF_NUM, LLP_LE_ID, CIF_SOURCE_ID, SOURCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX SI_STG_LMT_PROFILE_IDX1
	ON STAGE_LIMIT_PROFILE(CMS_LSP_LMT_PROFILE_ID, SOURCE_ID, CMS_BCA_STATUS)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_LIMIT_PROFILE
	ADD CONSTRAINT PK_STAGE_LIMIT_PRO
	PRIMARY KEY (CMS_LSP_LMT_PROFILE_ID);

CREATE TABLE STAGE_LIMIT_XREF ( 
	CMS_LSP_LMTS_XREF_MAP_ID	BIGINT NOT NULL,
	CREATE_USER_ID          	BIGINT,
	LAST_UPDATE_USER_ID     	BIGINT,
	VERIFY_USER_ID          	BIGINT,
	LXM_ID                  	BIGINT,
	CREATE_DATE             	TIMESTAMP,
	LAST_UPDATE_DATE        	TIMESTAMP,
	VERIFY_DATE             	TIMESTAMP,
	UPDATE_COUNT            	BIGINT,
	UPDATE_STATUS_IND       	CHARACTER(1),
	CHANGE_IND              	CHARACTER(1),
	LXM_LE_ID               	VARCHAR(20),
	LXM_LLP_ID              	BIGINT,
	LXM_LMT_ID              	VARCHAR(43),
	LXM_LSX_ID              	BIGINT,
	LXM_LSP_ID              	BIGINT,
	CMS_LSP_APPR_LMTS_ID    	BIGINT,
	CMS_LSP_SYS_XREF_ID     	BIGINT,
	CMS_STATUS              	VARCHAR(20),
	CMS_SID                 	BIGINT,
	LXM_EXT_SYS_ACCT_TYPE   	VARCHAR(1),
	LXM_EXT_SYS_ACCT_SEQ    	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_LMT_MAP_I1
	ON STAGE_LIMIT_XREF(CMS_LSP_SYS_XREF_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_MAP_I2
	ON STAGE_LIMIT_XREF(CMS_LSP_APPR_LMTS_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STG_LMT_MAP_I3
	ON STAGE_LIMIT_XREF(LXM_LE_ID, LXM_LSP_ID, LXM_LSX_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_LIMIT_XREF
	ADD CONSTRAINT PK_STAGE_LMT_XREF
	PRIMARY KEY (CMS_LSP_LMTS_XREF_MAP_ID);

CREATE TABLE STAGE_PLEDGOR_DTL ( 
	CMS_PLEDGOR_DTL_ID       	BIGINT NOT NULL,
	PLG_PLEDGOR_ID           	BIGINT,
	PLG_LE_ID                	VARCHAR(20),
	PLG_LEGAL_NAME           	VARCHAR(100) NOT NULL,
	PLG_GRP_ID               	BIGINT,
	PLG_GRP_NAME             	VARCHAR(100),
	PLG_GRNT_SGMNT_CODE_NUM  	VARCHAR(40),
	PLG_GRNT_SGMNT_CODE_VALUE	VARCHAR(10),
	PLG_REL_TYPE_NUM         	VARCHAR(40),
	PLG_REL_TYPE_VALUE       	VARCHAR(10),
	PLG_LEGAL_TYPE_NUM       	VARCHAR(40),
	PLG_LEGAL_TYPE_VALUE     	VARCHAR(10),
	PLG_INC_NUM_TEXT         	VARCHAR(30),
	PLG_ISIC_TYPE_NUM        	VARCHAR(40),
	PLG_ISIC_TYPE_VALUE      	VARCHAR(10),
	PLG_ISIC_CODE_NUM        	VARCHAR(40),
	PROGRESS_STATUS_NUM      	VARCHAR(40),
	PROGRESS_STATUS_VALUE    	VARCHAR(10),
	PLG_ISIC_CODE_VALUE      	VARCHAR(10),
	PLG_DMCL_CNTRY_ISO_CODE  	CHARACTER(2),
	PLG_INC_CNTRY_ISO_CODE   	CHARACTER(2),
	PRIMARY_CODE_NUM         	VARCHAR(40),
	PRIMARY_CODE_VALUE       	VARCHAR(10),
	CREATE_USER_ID           	BIGINT,
	LAST_UPDATE_USER_ID      	BIGINT,
	VERIFY_USER_ID           	BIGINT,
	LOCK_USER_ID             	BIGINT,
	CREATE_DATE              	TIMESTAMP,
	LOCK_IND                 	CHARACTER(1),
	LAST_UPDATE_DATE         	TIMESTAMP,
	VERIFY_DATE              	TIMESTAMP,
	UPDATE_COUNT             	BIGINT,
	UPDATE_STATUS_IND        	CHARACTER(1),
	CHANGE_IND               	CHARACTER(1),
	PLDGR_CRDT_GRADE_CHK_IND 	CHARACTER(1),
	PLDGR_INSTRC_CHK_IND     	CHARACTER(1),
	PLDGR_CHK_IND            	CHARACTER(1),
	CMS_ORIG_COUNTRY         	CHARACTER(2),
	CMS_ORIG_ORGANISATION    	VARCHAR(20),
	SOURCE_ID                	VARCHAR(10),
	PLG_ID_CNTRY_ISO_CODE    	CHARACTER(2),
	PLG_ID_NUM_TEXT          	VARCHAR(100),
	PLG_ID_TYPE_NUM          	VARCHAR(40),
	PLG_ID_TYPE_VALUE        	VARCHAR(10),
	PLG_LE_ID_SRC_NUM        	VARCHAR(40),
	PLG_LE_ID_SRC_VALUE      	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_PLEDGOR_DTL
	ADD CONSTRAINT SQL080609120031510
	PRIMARY KEY (CMS_PLEDGOR_DTL_ID);

-- CREATE TABLE STAGE_PLEDGORS ( 
-- 	PLEDGOR_ID     	BIGINT NOT NULL,
-- 	PLEDGOR_NAME   	VARCHAR(150),
-- 	PLEDGOR_RELSHIP	VARCHAR(150),
-- 	PLEDGOR_REF    	VARCHAR(150),
-- 	COLLATERAL_ID  	BIGINT 
-- 	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

-- CREATE INDEX STG_PLG_I1
-- 	ON STAGE_PLEDGORS(COLLATERAL_ID)
-- 	ALLOW REVERSE SCANS ;

-- ALTER TABLE STAGE_PLEDGORS
-- 	ADD CONSTRAINT PK_STAGE_PLEDGORS
-- 	PRIMARY KEY (PLEDGOR_ID);

CREATE TABLE STAGE_PSCC_GENERATED ( 
	PSCC_ID                	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	BIGINT,
	PSCC_REF               	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	CHARACTER(2),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	CHARACTER(2),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	BCA_EXT_RVW_DATE       	TIMESTAMP,
	BCA_APPR_DATE          	TIMESTAMP,
	BCA_NEXT_RVW_DATE      	TIMESTAMP,
	BCA_ORIG_CTRY          	CHARACTER(2),
	BCA_ORIG_ORG           	VARCHAR(20),
	BCA_APPR_AUTHORITY     	VARCHAR(100),
	BFL_ISSUED_DATE        	TIMESTAMP,
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	LEGAL_NAME             	VARCHAR(100),
	CUST_NAME              	VARCHAR(100),
	CUST_SEGMENT           	VARCHAR(10),
	CREDIT_GRADE_CODE      	VARCHAR(10),
	HAS_CHECK_1				CHARACTER(1),
	HAS_CHECK_2				CHARACTER(1),
	HAS_CHECK_3				CHARACTER(1),
	HAS_CHECK_4				CHARACTER(1),
	INSURED_WITH			VARCHAR(50),
	INSURED_WITH_AMT		DECIMAL(15,2),
	AMBM					VARCHAR(50),
	EXPIRY					TIMESTAMP,
	SINK_FUND_AMT			DECIMAL(15,2),
	PM_FOR_PERIOD_OF		VARCHAR(50),
	COMMENCING_FROM			VARCHAR(50),
	FUND_REACH				DECIMAL(15,2),
	FEES_AMT				DECIMAL(15,2),
	OTHERS					VARCHAR(200)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_PSCC_GEN_I1
	ON STAGE_PSCC_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_PSCC_GENERATED
	ADD CONSTRAINT PK_STAGE_PSCC_GEN
	PRIMARY KEY (PSCC_ID);

CREATE TABLE STAGE_PSCC_GENERATED_ITEM ( 
	PSCC_ITEM_ID        	BIGINT NOT NULL,
	PSCC_ID             	BIGINT,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	IS_DELETED          	CHARACTER(1),
	ACTIVATED_LIMIT_CCY 	CHARACTER(3),
	ACTIVATED_LIMIT     	DECIMAL(20,2) NOT NULL,
	PSCC_ITEM_REF       	BIGINT,
	ISSUE_DATE          	TIMESTAMP,
	HAS_ISSUED          	CHARACTER(1),
	LIMIT_TYPE          	VARCHAR(10),
	MATURITY_DATE       	TIMESTAMP,
	LMT_AMT_CCY         	CHARACTER(3),
	LMT_AMT             	DECIMAL(20,2),
	PRD_TYPE            	VARCHAR(10),
	LMT_BKG_ORG         	VARCHAR(20),
	OUTER_LMT_REF       	VARCHAR(20),
	COBORROWER_LEID     	VARCHAR(20),
	COBORROWER_NAME     	VARCHAR(100),
	SECURITY_REF        	VARCHAR(2000),
	SECURITY_TYPE       	VARCHAR(2500),
	LMT_BKG_CTRY        	VARCHAR(20),
	LMT_APPROVAL_DATE   	TIMESTAMP,
    EXP_AVAL_DT				TIMESTAMP,
    DIST_AMT_CCY			CHARACTER(3),
    DIST_AMT				DECIMAL(15,2),
    ENFORCE_AMT_CCY			CHARACTER(3),
    ENFORCE_AMT				DECIMAL(15,2),
    PAYMNT_INSTRUC			VARCHAR(200)	
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_PSCC_IT_I1
	ON STAGE_PSCC_GENERATED_ITEM(PSCC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_PSCC_GENERATED_ITEM
	ADD CONSTRAINT PK_STG_PSCC_GENITM
	PRIMARY KEY (PSCC_ITEM_ID);

CREATE TABLE STAGE_RECURRENT_DOC ( 
	RECURRENT_DOC_ID      	BIGINT NOT NULL,
	CMS_LMP_SUB_PROFILE_ID	BIGINT,
	VERSION_TIME          	BIGINT,
	STATUS                	VARCHAR(30),
	CMS_LSP_LMT_PROFILE_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_REC_DOC_I1
	ON STAGE_RECURRENT_DOC(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_RECURRENT_DOC
	ADD CONSTRAINT PK_STG_RECUR_DOC
	PRIMARY KEY (RECURRENT_DOC_ID);

CREATE TABLE STAGE_RECURRENT_DOC_ITEM ( 
	RECURRENT_ITEM_ID     	BIGINT NOT NULL,
	RECURRENT_ITEM_REF_ID 	BIGINT NOT NULL,
	RECURRENT_ITEM_DESC   	VARCHAR(250),
	FREQUENCY             	BIGINT,
	FREQUENCY_UNIT        	VARCHAR(20),
	DUE_DATE              	TIMESTAMP,
	REMARKS               	VARCHAR(250),
	IS_DELETED            	CHARACTER(1),
	DATE_RECEIVED         	TIMESTAMP,
	RECURRENT_DOC_ID      	BIGINT,
	PRINT_REMINDER_IND    	CHARACTER(1),
	DOC_END_DATE          	TIMESTAMP,
	GRACE_PERIOD          	BIGINT,
	GRACE_PERIOD_UNIT     	VARCHAR(20),
	CHASE_REMIND_IND      	CHARACTER(1),
	ONE_OFF               	CHARACTER(1) DEFAULT 'N',
	LAST_DOC_ENTRY_DATE   	TIMESTAMP,
	END_DATE_CHANGED_COUNT	INTEGER 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_REC_DIT_I1
	ON STAGE_RECURRENT_DOC_ITEM(RECURRENT_DOC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_RECURRENT_DOC_ITEM
	ADD CONSTRAINT PK_STG_RECR_DOCITM
	PRIMARY KEY (RECURRENT_ITEM_ID);

CREATE TABLE STAGE_RECURRENT_DOC_SUB_ITEM ( 
	SUB_ITEM_ID       	BIGINT NOT NULL,
	SUB_ITEM_REF_ID   	BIGINT NOT NULL,
	DOC_END_DATE      	TIMESTAMP,
	DUE_DATE          	TIMESTAMP,
	REC_DATE          	TIMESTAMP,
	DEFERRED_DATE     	TIMESTAMP,
	PRINT_REMINDER_IND	CHARACTER(1),
	IS_DELETED_IND    	CHARACTER(1),
	RECURRENT_ITEM_ID 	BIGINT,
	STATUS            	VARCHAR(30),
	WAIVED_DATE       	TIMESTAMP,
	DEFERRED_CNT      	BIGINT DEFAULT 0,
	REMARKS           	VARCHAR(250),
	FREQUENCY         	BIGINT,
	FREQUENCY_UNIT    	VARCHAR(20),
	GRACE_PERIOD      	BIGINT,
	GRACE_PERIOD_UNIT 	VARCHAR(20),
	ACTION_PARTY    	VARCHAR(40)	
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_REC_DSIT_I1
	ON STAGE_RECURRENT_DOC_SUB_ITEM(RECURRENT_ITEM_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_RECURRENT_DOC_SUB_ITEM
	ADD CONSTRAINT PK_STG_RDOC_SUBITM
	PRIMARY KEY (SUB_ITEM_ID);

CREATE TABLE STAGE_SCC_GENERATED ( 
	SCC_ID                 	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID 	BIGINT NOT NULL,
	GENERATION_DATE        	TIMESTAMP,
	CREDIT_OFFICER_NAME    	VARCHAR(50),
	CREDIT_OFFICER_SIGN_NO 	VARCHAR(20),
	SENIOR_OFFICER_NAME    	VARCHAR(50),
	SENIOR_OFFICER_SIGN_NO 	VARCHAR(20),
	REMARKS                	VARCHAR(2000),
	VERSION_TIME           	BIGINT,
	SCC_REF                	VARCHAR(20),
	CREDIT_OFFICER_COUNTRY 	CHARACTER(2),
	CREDIT_OFFICER_ORG_CODE	VARCHAR(20),
	SENIOR_OFFICER_COUNTRY 	CHARACTER(2),
	SENIOR_OFFICER_ORG_CODE	VARCHAR(20),
	CREDIT_OFFICER_DT      	TIMESTAMP,
	SENIOR_OFFICER_DT      	TIMESTAMP,
	EXTENDED_REVIEW_DATE   	TIMESTAMP,
	BCA_EXT_RVW_DATE       	TIMESTAMP,
	BCA_APPR_DATE          	TIMESTAMP,
	BCA_NEXT_RVW_DATE      	TIMESTAMP,
	BCA_ORIG_CTRY          	CHARACTER(2),
	BCA_ORIG_ORG           	VARCHAR(20),
	BCA_APPR_AUTHORITY     	VARCHAR(100),
	BFL_ISSUED_DATE        	TIMESTAMP,
	FAM_CODE               	VARCHAR(10),
	FAM_NAME               	VARCHAR(100),
	LEGAL_NAME             	VARCHAR(100),
	CUST_NAME              	VARCHAR(100),
	CUST_SEGMENT           	VARCHAR(10),
	CREDIT_GRADE_CODE      	VARCHAR(10),
	HAS_CHECK_1				CHARACTER(1),
	HAS_CHECK_2				CHARACTER(1),
	HAS_CHECK_3				CHARACTER(1),
	HAS_CHECK_4				CHARACTER(1),
	INSURED_WITH			VARCHAR(50),
	INSURED_WITH_AMT		DECIMAL(15,2),
	AMBM					VARCHAR(50),
	EXPIRY					TIMESTAMP,
	SINK_FUND_AMT			DECIMAL(15,2),
	PM_FOR_PERIOD_OF		VARCHAR(50),
	COMMENCING_FROM			VARCHAR(50),
	FUND_REACH				DECIMAL(15,2),
	FEES_AMT				DECIMAL(15,2),
	OTHERS					VARCHAR(200)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_SCC_GEN_I1
	ON STAGE_SCC_GENERATED(CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_SCC_GENERATED
	ADD CONSTRAINT PK_STG_SCC_GEN
	PRIMARY KEY (SCC_ID);

CREATE TABLE STAGE_SCC_GENERATED_ITEM ( 
	SCC_ITEM_ID         	BIGINT NOT NULL,
	SCC_ID              	BIGINT,
	CMS_LSP_APPR_LMTS_ID	BIGINT NOT NULL,
	IS_DELETED          	CHARACTER(1),
	ACTIVATED_LIMIT_CCY 	CHARACTER(3),
	ACTIVATED_LIMIT     	DECIMAL(20,2) NOT NULL,
	SCC_ITEM_REF        	BIGINT,
	LIMIT_TYPE          	VARCHAR(10),
	MATURITY_DATE       	TIMESTAMP,
	LMT_AMT_CCY         	CHARACTER(3),
	LMT_AMT             	DECIMAL(20,2),
	PRD_TYPE            	VARCHAR(10),
	LMT_BKG_ORG         	VARCHAR(20),
	OUTER_LMT_REF       	VARCHAR(20),
	COBORROWER_LEID     	VARCHAR(20),
	COBORROWER_NAME     	VARCHAR(100),
	SECURITY_REF        	VARCHAR(2000),
	SECURITY_TYPE       	VARCHAR(2500),
	LMT_BKG_CTRY        	VARCHAR(20),
	LMT_APPROVAL_DATE   	TIMESTAMP,
    EXP_AVAL_DT				TIMESTAMP,
    DIST_AMT_CCY			CHARACTER(3),
    DIST_AMT				DECIMAL(15,2),
    ENFORCE_AMT_CCY			CHARACTER(3),
    ENFORCE_AMT				DECIMAL(15,2),
    PAYMNT_INSTRUC			VARCHAR(200)	
	) IN CMS_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_SCC_IT_I1
	ON STAGE_SCC_GENERATED_ITEM(SCC_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_SCC_GENERATED_ITEM
	ADD CONSTRAINT PK_STG_SCC_GEN_ITM
	PRIMARY KEY (SCC_ITEM_ID);

CREATE TABLE STAGE_SEC_PLDGR_MAP ( 
	CMS_SEC_PLDGR_MAP_ID          	BIGINT NOT NULL,
	SPM_ID                        	BIGINT,
	SPM_PLEDGOR_ID                	BIGINT,
	SPM_SEC_ID                    	VARCHAR(20),
	SPM_MAP_ID                    	BIGINT,
	CREATE_USER_ID                	BIGINT,
	LAST_UPDATE_USER_ID           	BIGINT,
	VERIFY_USER_ID                	BIGINT,
	CREATE_DATE                   	TIMESTAMP,
	LAST_UPDATE_DATE              	TIMESTAMP,
	VERIFY_DATE                   	TIMESTAMP,
	UPDATE_COUNT                  	BIGINT,
	UPDATE_STATUS_IND             	CHARACTER(1),
	CHANGE_IND                    	CHARACTER(1),
	CMS_PLEDGOR_DTL_ID            	BIGINT,
	CMS_COLLATERAL_ID             	BIGINT,
	SEC_PLEDGOR_RELATIONSHIP_NUM  	VARCHAR(40),
	SEC_PLEDGOR_RELATIONSHIP_VALUE	VARCHAR(10),
	SOURCE_ID                     	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_SEC_PLDGR_MAP
	ADD CONSTRAINT SQL080609120032200
	PRIMARY KEY (CMS_SEC_PLDGR_MAP_ID);

CREATE TABLE STAGE_SECURITY_INSTRUMENT ( 
	CMS_INSTRUMENT_ID  	BIGINT NOT NULL,
	CMS_COLLATERAL_ID  	BIGINT NOT NULL,
	CMS_INSTRUMENT_CODE	VARCHAR(40) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_SECURITY_INSTRUMENT
	ADD CONSTRAINT SEC_INSTRUMT_ST_PK
	PRIMARY KEY (CMS_INSTRUMENT_ID);

CREATE TABLE STAGE_SECURITY_PARAMETER ( 
	ID                      	DOUBLE NOT NULL,
	COUNTRY_ISO_CODE        	VARCHAR(150),
	SECURITY_SUB_TYPE_ID    	VARCHAR(150),
	THRESHOLD_PERCENT       	DOUBLE,
	VALUATION_FREQUENCY_UNIT	VARCHAR(150),
	VALUATION_FREQUENCY     	DOUBLE 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_SECURITY_PARAMETER
	ADD CONSTRAINT PK_STG_SEC_PARAM
	PRIMARY KEY (ID);

CREATE TABLE STAGE_TEAM ( 
	TEAM_ID     	BIGINT NOT NULL,
	CODE        	VARCHAR(50),
	ABBREVIATION	VARCHAR(50),
	DESCRIPTION 	VARCHAR(250),
	PARENT_ID   	BIGINT,
	CCRIS_CODE  	VARCHAR(50),
	TEAM_TYPE_ID	BIGINT,
	VERSION_TIME	BIGINT,
	STATUS      	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM
	ADD CONSTRAINT PK_STAGE_TEAM
	PRIMARY KEY (TEAM_ID);

CREATE TABLE STAGE_TEAM_CMS_SEGMENT_CODE ( 
	CODE_ID     	BIGINT NOT NULL,
	SEGMENT_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_CMS_SEGMENT_CODE
	ADD CONSTRAINT PKSTG_CMS_SGMT_COD
	PRIMARY KEY (CODE_ID);

CREATE TABLE STAGE_TEAM_COUNTRY_CODE ( 
	CODE_ID     	BIGINT NOT NULL,
	COUNTRY_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_COUNTRY_CODE
	ADD CONSTRAINT PK_STG_TEAM_CY_COD
	PRIMARY KEY (CODE_ID);

CREATE TABLE STAGE_TEAM_MEMBER ( 
	TEAM_MEMBER_ID    	BIGINT NOT NULL,
	USER_ID           	BIGINT,
	TEAM_MEMBERSHIP_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_MEMBER
	ADD CONSTRAINT PK_STAGE_MEM_ID
	PRIMARY KEY (TEAM_MEMBER_ID);

CREATE TABLE STAGE_TEAM_MEMBERSHIP ( 
	TEAM_MEMBERSHIP_ID     	BIGINT NOT NULL,
	TEAM_ID                	BIGINT,
	TEAM_TYPE_MEMBERSHIP_ID	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_MEMBERSHIP
	ADD CONSTRAINT PK_STG_TEAM_MEM_ID
	PRIMARY KEY (TEAM_MEMBERSHIP_ID);

CREATE TABLE STAGE_TEAM_ORG_GROUP_CODE ( 
	ID            	BIGINT NOT NULL,
	ORG_GROUP_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID       	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_ORG_GROUP_CODE
	ADD CONSTRAINT STG_TEAM_ORG_GRP
	PRIMARY KEY (ID);
		
CREATE TABLE STAGE_TEAM_ORGANISATION_CODE ( 
	CODE_ID          	BIGINT NOT NULL,
	ORGANISATION_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID          	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_ORGANISATION_CODE
	ADD CONSTRAINT PK_STG_TEAM_ORGCOD
	PRIMARY KEY (CODE_ID);

CREATE TABLE STAGE_TEAM_SEGMENT_CODE ( 
	CODE_ID     	BIGINT NOT NULL,
	SEGMENT_CODE	VARCHAR(20) NOT NULL,
	TEAM_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_TEAM_SEGMENT_CODE
	ADD CONSTRAINT PKSTG_TEM_SGMT_COD
	PRIMARY KEY (CODE_ID);

CREATE TABLE STAGE_USER ( 
	USER_ID        	BIGINT NOT NULL,
	USER_NAME      	VARCHAR(50),
	OFFICER_CODE   	VARCHAR(20),
	EMPLOYEE_ID    	VARCHAR(20),
	DEPARTMENT     	VARCHAR(40),
	POSITION       	VARCHAR(40),
	PHONE_NUMBER   	VARCHAR(20),
	EMAIL_ID       	VARCHAR(80),
	LOGIN_ID       	VARCHAR(20),
	PASSWORD       	VARCHAR(20),
	STATUS         	VARCHAR(20),
	VERSION_TIME   	BIGINT,
	ROLETYPE_ID    	BIGINT,
	COUNTRY        	CHARACTER(2),
	ORGANISATION   	VARCHAR(20),
	VALID_FROM_DATE	TIMESTAMP,
	VALID_TO_DATE  	TIMESTAMP 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_USER
	ADD CONSTRAINT PK_STAGE_USER
	PRIMARY KEY (USER_ID);

CREATE TABLE STAGE_WAIVER_GENERATED ( 
	WAIVER_ID               	BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID  	BIGINT,
	PROPOSED_BY             	VARCHAR(50),
	PROPOSED_BY_DESIGNAT    	VARCHAR(50),
	PROPOSED_BY_SIGN_NO     	VARCHAR(20),
	PROPOSED_BY_DATE        	TIMESTAMP,
	SUPPORTED_BY            	VARCHAR(50),
	SUPPORTED_BY_DESIGNAT   	VARCHAR(50),
	SUPPORTED_BY_COIN_NO    	VARCHAR(20),
	SUPPORTED_BY_DATE       	TIMESTAMP,
	APPROVED_BY_SCO         	VARCHAR(50),
	APPROVED_BY_SCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_SCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_SCO_DATE    	TIMESTAMP,
	APPROVED_BY_RCO         	VARCHAR(50),
	APPROVED_BY_RCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_RCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_RCO_DATE    	TIMESTAMP,
	APPROVED_BY_CCO         	VARCHAR(50),
	APPROVED_BY_CCO_DESIGNAT	VARCHAR(50),
	APPROVED_BY_CCO_COIN_NO 	VARCHAR(50),
	APPROVED_BY_CCO_DATE    	TIMESTAMP,
	NAME                    	VARCHAR(50),
	CREDIT_COMMITTEE        	VARCHAR(50),
	MIN_OF_MEETING          	VARCHAR(100),
	MEETING_DATE            	TIMESTAMP,
	REASON                  	VARCHAR(640),
	VERSION_TIME            	BIGINT,
	CMS_CUSTOMER_ID         	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STAGE_WAIVER_GENERATED
	ADD CONSTRAINT STAGE_WAIVER_GEN
	PRIMARY KEY (WAIVER_ID);

CREATE TABLE STAGE_WAIVER_GENERATED_ITEM ( 
	WAIVER_ITEM_ID   	BIGINT NOT NULL,
	WAIVER_ITEM_REF  	BIGINT,
	WAIVER_ID        	BIGINT,
	CHECKLIST_ID     	BIGINT,
	CHECKLIST_ITEM_ID	BIGINT,
	IS_DELETED       	CHARACTER(1) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX STG_WV_IT_I1
	ON STAGE_WAIVER_GENERATED_ITEM(WAIVER_ID)
	ALLOW REVERSE SCANS ;

ALTER TABLE STAGE_WAIVER_GENERATED_ITEM
	ADD CONSTRAINT STAG_WAIVE_GEN_ITM
	PRIMARY KEY (WAIVER_ITEM_ID);

CREATE TABLE TR_STATE_MATRIX ( 
	STATEID   	BIGINT NOT NULL,
	STATEINS  	VARCHAR(20) NOT NULL,
	OPERATION 	VARCHAR(100) NOT NULL,
	FROMSTATE 	VARCHAR(30) NOT NULL,
	TOSTATE   	VARCHAR(30) NOT NULL,
	USERSTATE 	VARCHAR(30) NOT NULL,
	ENABLEIND 	CHARACTER(1) NOT NULL,
	FRONTENDOP	CHARACTER(1) NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE UNIQUE INDEX TR_ST_MAT_U2
	ON TR_STATE_MATRIX(STATEINS, STATEID, FROMSTATE)
	ALLOW REVERSE SCANS ;

CREATE UNIQUE INDEX TR_ST_MAT_U1
	ON TR_STATE_MATRIX(STATEINS, STATEID)
	ALLOW REVERSE SCANS ;

ALTER TABLE TR_STATE_MATRIX
	ADD CONSTRAINT PKTR_STATE_MATRIX
	PRIMARY KEY (STATEID);

CREATE TABLE TRANS_HISTORY ( 
	TR_HISTORY_ID          	BIGINT NOT NULL,
	TRANSACTION_ID         	VARCHAR(20) NOT NULL,
	FROM_STATE             	VARCHAR(30),
	TO_STATE               	VARCHAR(30),
	USER_ID                	BIGINT,
	LOGIN_ID				VARCHAR(20),
	TRANSACTION_TYPE       	VARCHAR(20),
	TRANSACTION_SUBTYPE    	VARCHAR(20),
	CREATION_DATE          	TIMESTAMP,
	TRANSACTION_DATE       	TIMESTAMP,
	REFERENCE_ID           	VARCHAR(20),
	STATUS                 	VARCHAR(30),
	STAGING_REFERENCE_ID   	VARCHAR(20),
	TEAM_ID                	BIGINT,
	VERSION                	DOUBLE,
	REMARKS                	VARCHAR(2000),
	OPSDESC                	VARCHAR(100),
	CURCYCLE               	VARCHAR(10),
	TO_USER_ID             	BIGINT,
	TO_GROUP_ID            	BIGINT,
	TRX_REFERENCE_ID       	VARCHAR(19),
	LEGAL_NAME             	VARCHAR(100),
	LEGAL_ID               	VARCHAR(20),
	CUSTOMER_NAME          	VARCHAR(100),
	CUSTOMER_ID            	DOUBLE,
	TRX_ORIGIN_COUNTRY     	VARCHAR(20),
	TRX_ORIGIN_ORGANISATION	VARCHAR(20),
	LIMIT_PROFILE_ID       	BIGINT,
	LIMIT_PROFILE_REF_NUM	VARCHAR(35),
	TRX_SEGMENT            	VARCHAR(20),
	TEAM_TYPE_ID           	BIGINT,
	TO_GROUP_TYPE_ID       	VARCHAR(20),
	DEAL_NO                	VARCHAR(18),
	TEAM_MEMBERSHIP_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TRX_HIS_I5
	ON TRANS_HISTORY(TRANSACTION_TYPE, FROM_STATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_HIS_I2
	ON TRANS_HISTORY(STAGING_REFERENCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_HIS_I3
	ON TRANS_HISTORY(TRANSACTION_DATE, TRANSACTION_TYPE)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_HIS_I1
	ON TRANS_HISTORY(TRANSACTION_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_HIS_I4
	ON TRANS_HISTORY(TRANSACTION_TYPE)
	ALLOW REVERSE SCANS ;

ALTER TABLE TRANS_HISTORY
	ADD CONSTRAINT CC1169796995914
	PRIMARY KEY (TR_HISTORY_ID);

CREATE TABLE TRANSACTION ( 
	TRANSACTION_ID         	VARCHAR(20) NOT NULL,
	FROM_STATE             	VARCHAR(30),
	USER_ID                	BIGINT,
	LOGIN_ID				VARCHAR(20),
	TRANSACTION_TYPE       	VARCHAR(20),
	CREATION_DATE          	TIMESTAMP,
	TRANSACTION_DATE       	TIMESTAMP,
	REFERENCE_ID           	BIGINT,
	STATUS                 	VARCHAR(30),
	STAGING_REFERENCE_ID   	BIGINT,
	TEAM_ID                	BIGINT,
	VERSION                	BIGINT,
	REMARKS                	VARCHAR(2000),
	TRX_REFERENCE_ID       	BIGINT,
	OPSDESC                	VARCHAR(100),
	LEGAL_NAME             	VARCHAR(100),
	LEGAL_ID               	VARCHAR(20),
	CUSTOMER_NAME          	VARCHAR(100),
	CUSTOMER_ID            	BIGINT,
	TRX_ORIGIN_COUNTRY     	VARCHAR(20),
	TRX_ORIGIN_ORGANISATION	VARCHAR(20),
	LIMIT_PROFILE_ID       	BIGINT,
	LIMIT_PROFILE_REF_NUM	VARCHAR(35),
	TRX_SEGMENT            	VARCHAR(20),
	USER_INFO              	VARCHAR(100),
	CUR_TRX_HISTORY_ID     	VARCHAR(20),
	TEAM_TYPE_ID           	BIGINT,
	TRANSACTION_SUBTYPE    	VARCHAR(20),
	TO_GROUP_TYPE_ID       	VARCHAR(20),
	TO_GROUP_ID            	BIGINT,
	TO_USER_ID             	BIGINT,
	DEAL_NO                	VARCHAR(18),
	TEAM_MEMBERSHIP_ID     	BIGINT 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

-- CREATE INDEX TRX_I11
-- 	ON TRANSACTION(TRANSACTION_TYPE)
-- 	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I3
	ON TRANSACTION(TRANSACTION_DATE)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I9
	ON TRANSACTION(LIMIT_PROFILE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I8
	ON TRANSACTION(TEAM_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I14
	ON TRANSACTION(TRANSACTION_ID, STATUS, TRANSACTION_SUBTYPE)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I10
	ON TRANSACTION(TRX_REFERENCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I2
	ON TRANSACTION(CUSTOMER_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I5
	ON TRANSACTION(STAGING_REFERENCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I1
	ON TRANSACTION(TRANSACTION_TYPE, STAGING_REFERENCE_ID, STATUS)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX TRX_I13
-- 	ON TRANSACTION(STATUS)
-- 	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I6
	ON TRANSACTION(TRANSACTION_TYPE, REFERENCE_ID)
	ALLOW REVERSE SCANS ;

CREATE INDEX TRX_I4
	ON TRANSACTION(REFERENCE_ID)
	ALLOW REVERSE SCANS ;

-- CREATE INDEX TRX_I12
-- 	ON TRANSACTION(FROM_STATE)
-- 	ALLOW REVERSE SCANS ;

-- CREATE INDEX TRX_I7
-- 	ON TRANSACTION(TRANSACTION_TYPE, STAGING_REFERENCE_ID)
-- 	ALLOW REVERSE SCANS ;
	
	
CREATE INDEX TRX_I12
    ON TRANSACTION (LIMIT_PROFILE_REF_NUM, TRANSACTION_ID)
    ALLOW REVERSE SCANS;  
    
CREATE INDEX TRX_I13
	ON TRANSACTION (TRANSACTION_TYPE, TRX_REFERENCE_ID)
	ALLOW REVERSE SCANS;  

ALTER TABLE TRANSACTION
	ADD CONSTRAINT CC1169796976386
	PRIMARY KEY (TRANSACTION_ID);

CREATE TABLE USER_DELETED_NOTIFICATION ( 
	USER_ID        	BIGINT NOT NULL,
	NOTIFICATION_ID	BIGINT NOT NULL,
	DELETED_DATE   	TIMESTAMP NOT NULL 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE USER_DELETED_NOTIFICATION
	ADD CONSTRAINT PK_USER_NOTIFI
	PRIMARY KEY (USER_ID, NOTIFICATION_ID);

CREATE TABLE USERGROUP ( 
	USERID 	VARCHAR(10),
	GROUPID	VARCHAR(10) 
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_FUNCTION_GROUP (
    ID                            BIGINT NOT NULL,
    DESCCRIPTION        VARCHAR(250),
    LABEL                        VARCHAR(100),
    PRIMARY KEY (ID)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE CMS_TEAM_FUNCTION_GRP (
    ID                                BIGINT NOT NULL,
    TEAM_ID                        BIGINT,
    TEAM_TYPE_ID            BIGINT,
    FUNCTION_GRP_ID        BIGINT,
    GROUP_ID                    BIGINT,
    STATUS                        VARCHAR(10),
    VERSION_TIME            BIGINT,
    PRIMARY KEY (ID)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE TABLE STAGE_TEAM_FUNCTION_GRP (
    ID                                BIGINT NOT NULL,
    TEAM_ID                        BIGINT,
    TEAM_TYPE_ID            BIGINT,
    FUNCTION_GRP_ID        BIGINT,
    GROUP_ID                    BIGINT,
    STATUS                        VARCHAR(10),
    VERSION_TIME            BIGINT,
    PRIMARY KEY (ID)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX TEAM_FUNCTION_GRP_IDX1
    ON CMS_TEAM_FUNCTION_GRP (TEAM_ID, FUNCTION_GRP_ID)
    ALLOW REVERSE SCANS;

CREATE SEQUENCE TEAM_FUNCTION_GRP_SEQ AS INTEGER
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999
    MINVALUE 1
    CYCLE
    NO CACHE
    NO ORDER;

CREATE SEQUENCE FUNCTION_GRP_SEQ AS INTEGER
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999
    MINVALUE 1
    CYCLE
    NO CACHE
    NO ORDER;

-- WLS: DDL Statements for "CMS_PROPERTY_VAL_INDEX"			
CREATE TABLE CMS_PROPERTY_IDX
(
	PROPERTY_IDX_ID            	BIGINT       NOT NULL,
	VAL_DESCR										VARCHAR(40),
	COUNTRY_CODE               	CHAR(2),
	VERSION_TIME               	BIGINT,
	STATUS								VARCHAR(20),
	PRIMARY KEY(PROPERTY_IDX_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX PROPERTY_IDX_IDX1
	ON CMS_PROPERTY_IDX (COUNTRY_CODE, STATUS)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_STAGE_PROPERTY_VAL_INDEX"			
CREATE TABLE CMS_STAGE_PROPERTY_IDX
(
    PROPERTY_IDX_ID            	BIGINT       NOT NULL,
		VAL_DESCR										VARCHAR(40),
		COUNTRY_CODE               	CHAR(2),
    VERSION_TIME               	BIGINT,
    STATUS								VARCHAR(20),
    PRIMARY KEY(PROPERTY_IDX_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_PROPERTY_IDX_IDX1
	ON CMS_STAGE_PROPERTY_IDX (COUNTRY_CODE, STATUS)
	ALLOW REVERSE SCANS;


-- WLS: DDL Statements for "CMS_PROPERTY_IDX_ITEM"			
CREATE TABLE CMS_PROPERTY_IDX_ITEM (
	PROPERTY_IDX_ITEM_ID				BIGINT       NOT NULL,
	PROPERTY_IDX_ID      				BIGINT,
	IDX_YEAR							DECIMAL(4),
	IDX_TYPE							VARCHAR(50),
	IDX_VALUE							DECIMAL(20, 4),
	STATE_CODE                 			VARCHAR(40),
	STATUS								VARCHAR(10),
	CMS_REF_ID							BIGINT,
	PRIMARY KEY(PROPERTY_IDX_ITEM_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX PROP_IDX_ITEM_IDX1
	ON CMS_PROPERTY_IDX_ITEM (PROPERTY_IDX_ID, STATUS)
	ALLOW REVERSE SCANS;
    
-- WLS: DDL Statements for "CMS_STAGE_PROPERTY_VAL_INDEX_ITEM"
CREATE TABLE CMS_STAGE_PROPERTY_IDX_ITEM (
	PROPERTY_IDX_ITEM_ID				BIGINT       NOT NULL,
	PROPERTY_IDX_ID      				BIGINT,
	IDX_YEAR							DECIMAL(4),
	IDX_TYPE							VARCHAR(50),
	IDX_VALUE							DECIMAL(20, 4),
	STATE_CODE                 			VARCHAR(40),
	STATUS								VARCHAR(10),
	CMS_REF_ID							BIGINT,
	PRIMARY KEY(PROPERTY_IDX_ITEM_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_PROP_IDX_ITEM_IDX1
	ON CMS_STAGE_PROPERTY_IDX_ITEM (PROPERTY_IDX_ID, STATUS)
	ALLOW REVERSE SCANS;


-- WLS: DDL Statements for "CMS_PROPERTY_IDX_SEC_SUBTYPE"
CREATE TABLE CMS_PROPERTY_IDX_SEC_SUBTYPE (    
  PROPERTY_IDX_SEC_SUBTYPE_ID			BIGINT		NOT NULL,
  PROPERTY_IDX_ID						BIGINT,
  SECURITY_SUB_TYPE_ID					VARCHAR(5),    
  STATUS								VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_SEC_SUBTYPE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX PROP_IDX_SEC_SUBTYPE_IDX1
	ON CMS_PROPERTY_IDX_SEC_SUBTYPE (PROPERTY_IDX_ID, STATUS)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_STAGE_PROPERTY_IDX_SEC_SUBTYPE"
CREATE TABLE CMS_STAGE_PROPERTY_IDX_SEC_SUBTYPE (     
  PROPERTY_IDX_SEC_SUBTYPE_ID			BIGINT		NOT NULL,
  PROPERTY_IDX_ID						BIGINT,
  SECURITY_SUB_TYPE_ID					VARCHAR(5),    
  STATUS								VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_SEC_SUBTYPE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_PROP_IDX_SEC_SUBTYPE_IDX1
	ON CMS_STAGE_PROPERTY_IDX_SEC_SUBTYPE (PROPERTY_IDX_ID, STATUS)
	ALLOW REVERSE SCANS;   
    
-- WLS: DDL Statements for "CMS_PROPERTY_IDX_DISTRICT_CODE"
CREATE TABLE CMS_PROPERTY_IDX_DISTRICT_CODE (     
  PROPERTY_IDX_DISTRICT_CODE_ID			BIGINT		NOT NULL,
  PROPERTY_IDX_ITEM_ID					BIGINT,
  DISTRICT_CODE              			VARCHAR(40),    
  STATUS								VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_DISTRICT_CODE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX PROP_IDX_DISTRICT_CODE_IDX1
	ON CMS_PROPERTY_IDX_DISTRICT_CODE (PROPERTY_IDX_ITEM_ID)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_STAGE_PROPERTY_IDX_DISTRICT_CODE"
CREATE TABLE CMS_STAGE_PROPERTY_IDX_DISTRICT_CODE (     
  PROPERTY_IDX_DISTRICT_CODE_ID			BIGINT		NOT NULL,
  PROPERTY_IDX_ITEM_ID					BIGINT,
  DISTRICT_CODE              			VARCHAR(40),    
  STATUS								VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_DISTRICT_CODE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_PROP_IDX_DISTRICT_CODE_IDX1
	ON CMS_STAGE_PROPERTY_IDX_DISTRICT_CODE (PROPERTY_IDX_ITEM_ID)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_PROPERTY_IDX_MUKIM_CODE"
CREATE TABLE CMS_PROPERTY_IDX_MUKIM_CODE (     
  PROPERTY_IDX_MUKIM_CODE_ID		BIGINT		NOT NULL,
  PROPERTY_IDX_ITEM_ID				BIGINT,
  MUKIM_CODE              			VARCHAR(40),    
  STATUS							VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_MUKIM_CODE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX PROP_IDX_MUKIM_CODE_IDX1
	ON CMS_PROPERTY_IDX_MUKIM_CODE (PROPERTY_IDX_ITEM_ID)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_STAGE_PROPERTY_IDX_MUKIM_CODE"
CREATE TABLE CMS_STAGE_PROPERTY_IDX_MUKIM_CODE (     
  PROPERTY_IDX_MUKIM_CODE_ID		BIGINT		NOT NULL,
  PROPERTY_IDX_ITEM_ID				BIGINT,
  MUKIM_CODE              			VARCHAR(40),    
  STATUS							VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_MUKIM_CODE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_PROP_IDX_MUKIM_CODE_IDX1
	ON CMS_STAGE_PROPERTY_IDX_MUKIM_CODE (PROPERTY_IDX_ITEM_ID)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_PROPERTY_IDX_PROPERTY_TYPE"
CREATE TABLE CMS_PROPERTY_IDX_PROPERTY_TYPE (     
  PROPERTY_IDX_PROPERTY_TYPE_ID		BIGINT		NOT NULL,
  PROPERTY_IDX_ITEM_ID				BIGINT,
  PROPERTY_TYPE_ID              	VARCHAR(40),    
  STATUS							VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_PROPERTY_TYPE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX PROPERTY_IDX_PROPERTY_TYPE_IDX1
	ON CMS_PROPERTY_IDX_PROPERTY_TYPE (PROPERTY_IDX_ITEM_ID, STATUS)
	ALLOW REVERSE SCANS;

-- WLS: DDL Statements for "CMS_STAGE_PROPERTY_IDX_PROPERTY_TYPE"
CREATE TABLE CMS_STAGE_PROPERTY_IDX_PROPERTY_TYPE (     
  PROPERTY_IDX_PROPERTY_TYPE_ID		BIGINT		NOT NULL,
  PROPERTY_IDX_ITEM_ID				BIGINT,
  PROPERTY_TYPE_ID              	VARCHAR(40),    
  STATUS							VARCHAR(10),
  PRIMARY KEY(PROPERTY_IDX_PROPERTY_TYPE_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_PROPERTY_IDX_PROPERTY_TYPE_IDX1
	ON CMS_STAGE_PROPERTY_IDX_PROPERTY_TYPE (PROPERTY_IDX_ITEM_ID, STATUS)
	ALLOW REVERSE SCANS;


-- DDL Statements for "CMS_SEC_ENVELOPE" --			
CREATE TABLE CMS_SEC_ENVELOPE
(
	SEC_ENVELOPE_ID         	BIGINT		NOT NULL,
	SEC_LSP_LMT_PROFILE_ID  	BIGINT		NOT NULL,
	VERSION_TIME            	BIGINT,
	STATUS										VARCHAR(20),
	PRIMARY KEY(SEC_ENVELOPE_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX SEC_ENVELOPE_ID_IDX1
	ON CMS_SEC_ENVELOPE (SEC_LSP_LMT_PROFILE_ID, STATUS)
	ALLOW REVERSE SCANS;


-- DDL Statements for "CMS_STAGE_SEC_ENVELOPE" --			
CREATE TABLE CMS_STAGE_SEC_ENVELOPE
(
  SEC_ENVELOPE_ID         	BIGINT		NOT NULL,
	SEC_LSP_LMT_PROFILE_ID  	BIGINT		NOT NULL,
	VERSION_TIME            	BIGINT,
	STATUS										VARCHAR(20),
	PRIMARY KEY(SEC_ENVELOPE_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_SEC_ENVELOPE_ID_IDX1
	ON CMS_STAGE_SEC_ENVELOPE (SEC_LSP_LMT_PROFILE_ID, STATUS)
	ALLOW REVERSE SCANS;


-- DDL Statements for "CMS_SEC_ENVELOPE_ITEM" --			
CREATE TABLE CMS_SEC_ENVELOPE_ITEM (
	SEC_ENVELOPE_ITEM_ID				BIGINT	NOT NULL,
	SEC_ENVELOPE_ID      				BIGINT	NOT NULL,
	SEC_ENVELOPE_ITEM_ADDR			VARCHAR(40) NOT NULL,
	SEC_ENVELOPE_ITEM_CAB				VARCHAR(40),
	SEC_ENVELOPE_ITEM_DRW				VARCHAR(40),
	SEC_ENVELOPE_ITEM_BARCODE   VARCHAR(100) NOT NULL,
	STATUS											VARCHAR(10),
	SEC_ENVELOPE_REF_ID					BIGINT NOT NULL,
	PRIMARY KEY(SEC_ENVELOPE_ITEM_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX SEC_ENVELOPE_ITEM_IDX1
	ON CMS_SEC_ENVELOPE_ITEM (SEC_ENVELOPE_ID, STATUS)
	ALLOW REVERSE SCANS;
 
    
-- DDL Statements for "CMS_STAGE_SEC_ENVELOPE_ITEM" --
CREATE TABLE CMS_STAGE_SEC_ENVELOPE_ITEM (
	SEC_ENVELOPE_ITEM_ID				BIGINT	NOT NULL,
	SEC_ENVELOPE_ID      				BIGINT	NOT NULL,
	SEC_ENVELOPE_ITEM_ADDR			VARCHAR(40)	NOT NULL,
	SEC_ENVELOPE_ITEM_CAB				VARCHAR(40),
	SEC_ENVELOPE_ITEM_DRW				VARCHAR(40),
	SEC_ENVELOPE_ITEM_BARCODE   VARCHAR(100)	NOT NULL,
	STATUS											VARCHAR(10),
	SEC_ENVELOPE_REF_ID					BIGINT	NOT NULL,
	PRIMARY KEY(SEC_ENVELOPE_ITEM_ID)
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE INDEX STG_SEC_ENVELOPE_ITEM_IDX1
	ON CMS_STAGE_SEC_ENVELOPE_ITEM (SEC_ENVELOPE_ID, STATUS)
	ALLOW REVERSE SCANS;

-- DDL Statements for "CMS_LI_DOC" --	

CREATE TABLE CMS_LI_DOC ( 
	LI_TEMPLATE_ID    	BIGINT NOT NULL,
	LI_TEMPLATE_NAME  	VARCHAR(150),
	GENERATED_BY		VARCHAR(40),
	GENERATED_DATE  	TIMESTAMP,
	CHECKLIST_ID		BIGINT,
	FILE_LOC		VARCHAR(150)
	) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE CMS_LI_DOC
	ADD CONSTRAINT LI_TEMPLATE_PK
	PRIMARY KEY (LI_TEMPLATE_ID);

	
CREATE SEQUENCE CMS_LI_DOC_SEQ AS INTEGER
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999
    MINVALUE 1
    CYCLE
    NO CACHE
    NO ORDER; 


CREATE SEQUENCE CMS_TAT_DOC_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_TAT_DOC_DRAFT_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE TABLE CMS_TAT_DOCUMENT (
	TAT_ID 							BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID     		BIGINT,
	SOLICITOR_INSTRUCTION_DATE		DATE,
	FILE_FROM_BIZ_CENTER_DATE		DATE,
	DOC_READY_FOR_PA_DATE			DATE,
	PA_EXCEUTED_DATE				DATE,
	PRE_DISBURSE_REMARKS			VARCHAR(250),
	SOLICITOR_ADVISE_RELEASE_DATE	DATE,
	DISBURSMENT_DOC_COMPLETED_DATE	DATE,
	DISBURSEMENT_DATE				DATE,
	DISBURSEMENT_REMARKS			VARCHAR(250),
	DOC_COMPLETION_DATE				DATE,
	POST_DISBURSEMENT_REMARKS		VARCHAR(250),
    STATUS                          VARCHAR(10),
	IS_PA_SOL_INVMT_REQ				CHARACTER(1),
	CMS_VERSION_TIME           		BIGINT
);

ALTER TABLE CMS_TAT_DOCUMENT
	ADD CONSTRAINT CMS_TAT_ID_PK
	PRIMARY KEY (TAT_ID);

CREATE UNIQUE INDEX TAT_DOC_U1
	ON CMS_TAT_DOCUMENT (CMS_LSP_LMT_PROFILE_ID)
	ALLOW REVERSE SCANS;


create index tat_doc_idx1 on cms_tat_document
	(FILE_FROM_BIZ_CENTER_DATE, DOC_COMPLETION_DATE, CMS_LSP_LMT_PROFILE_ID)
	allow reverse scans;

CREATE TABLE CMS_STAGE_TAT_DOCUMENT (
	TAT_ID							BIGINT NOT NULL,
	CMS_LSP_LMT_PROFILE_ID     		BIGINT,
	SOLICITOR_INSTRUCTION_DATE		DATE,
	FILE_FROM_BIZ_CENTER_DATE		DATE,
	DOC_READY_FOR_PA_DATE			DATE,
	PA_EXCEUTED_DATE				DATE,
	PRE_DISBURSE_REMARKS			VARCHAR(250),
	SOLICITOR_ADVISE_RELEASE_DATE	DATE,
	DISBURSMENT_DOC_COMPLETED_DATE	DATE,
	DISBURSEMENT_DATE				DATE,
	DISBURSEMENT_REMARKS			VARCHAR(250),
	DOC_COMPLETION_DATE				DATE,
	POST_DISBURSEMENT_REMARKS		VARCHAR(250),
    STATUS                          VARCHAR(10),
	IS_PA_SOL_INVMT_REQ				CHARACTER(1),
	CMS_VERSION_TIME           		BIGINT
);

ALTER TABLE CMS_STAGE_TAT_DOCUMENT
	ADD CONSTRAINT CMS_STG_TAT_ID_PK
	PRIMARY KEY (TAT_ID);

CREATE INDEX "CMS_STG_TAT_IDX1" ON "CMS_STAGE_TAT_DOCUMENT"
   ("CMS_LSP_LMT_PROFILE_ID" ASC, "DISBURSEMENT_DATE" ASC)
   ALLOW REVERSE SCANS ;

CREATE TABLE CMS_TAT_DOCUMENT_DRAFT (
	DRAFT_ID					BIGINT NOT NULL,
	TAT_ID							BIGINT,
	DOC_DRAFT_STAGE					VARCHAR(100),
	DRAFT_NUMBER					SMALLINT,
	DRAFT_DATE						DATE,
	STATUS							VARCHAR(10),
	REFERENCE_ID					BIGINT
);

ALTER TABLE CMS_TAT_DOCUMENT_DRAFT
	ADD CONSTRAINT CMS_DRAFT_ID_PK
	PRIMARY KEY (DRAFT_ID);

CREATE INDEX CMS_TAT_DOC_DRAFT_I1
	ON CMS_TAT_DOCUMENT_DRAFT (TAT_ID, DRAFT_ID)
	ALLOW REVERSE SCANS;

CREATE INDEX CMS_TAT_DOC_DRAFT_I2
	ON CMS_TAT_DOCUMENT_DRAFT(TAT_ID, DOC_DRAFT_STAGE, DRAFT_NUMBER)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_STAGE_TAT_DOCUMENT_DRAFT (
	DRAFT_ID					BIGINT NOT NULL,
	TAT_ID							BIGINT,
	DOC_DRAFT_STAGE 				VARCHAR(100),
	DRAFT_NUMBER					SMALLINT,
	DRAFT_DATE						DATE,
	STATUS							VARCHAR(10),
	REFERENCE_ID					BIGINT
);

ALTER TABLE CMS_STAGE_TAT_DOCUMENT_DRAFT
	ADD CONSTRAINT CMS_STG_DRFT_ID_PK
	PRIMARY KEY (DRAFT_ID);

CREATE INDEX CMS_STG_TAT_DOC_DRAFT_I1
	ON CMS_STAGE_TAT_DOCUMENT_DRAFT (TAT_ID, DRAFT_ID)
	ALLOW REVERSE SCANS;

CREATE TABLE CMS_AA_PENDING_PERFECTION (
    CMS_LSP_LMT_PROFILE_ID    BIGINT NOT NULL,
    HOST_BCA_REF_NUM          VARCHAR(35),
    LOS_BCA_REF_NUM           VARCHAR(35),
    CMS_CUSTOMER_ID           BIGINT,
    CMS_ORIG_COUNTRY           CHARACTER(2),
    CMS_ORIG_ORGANISATION       VARCHAR(20),
    APPLICATION_TYPE           VARCHAR(10),
    LLP_LE_ID                  VARCHAR(20)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_AA_PPCF
    ON CMS_AA_PENDING_PERFECTION
(CMS_ORIG_COUNTRY, CMS_ORIG_ORGANISATION, APPLICATION_TYPE, CMS_LSP_LMT_PROFILE_ID)
    ALLOW REVERSE SCANS;

CREATE INDEX IDX_AA_PPCF1
    ON CMS_AA_PENDING_PERFECTION
(HOST_BCA_REF_NUM)
    ALLOW REVERSE SCANS;

CREATE INDEX IDX_AA_PPCF2
    ON CMS_AA_PENDING_PERFECTION
(LLP_LE_ID)
    ALLOW REVERSE SCANS;

CREATE INDEX IDX_AA_PPCF3
    ON CMS_AA_PENDING_PERFECTION
(CMS_CUSTOMER_ID)
    ALLOW REVERSE SCANS;

CREATE SEQUENCE CMS_TAT_PARAM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;


CREATE SEQUENCE CMS_STAGE_TAT_PARAM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_TAT_PARAM_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

CREATE SEQUENCE CMS_STAGE_TAT_PARAM_ITEM_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;



--DROP TABLE CMS_TAT_PARAM;
CREATE TABLE CMS_TAT_PARAM
(
  TAT_PARAM_ID	BIGINT	NOT NULL,
  APPLICATION_TYPE	VARCHAR(100)	NOT NULL,
  VERSION_TIME	BIGINT	NOT NULL,
	PRIMARY KEY (TAT_PARAM_ID)
)IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX" ;


--DROP TABLE CMS_TAT_PARAM_ITEM;
CREATE TABLE CMS_TAT_PARAM_ITEM
(
  TAT_PARAM_ITEM_ID	BIGINT	NOT NULL,
	TAT_PARAM_ID BIGINT NOT NULL,
  STAGE_TYPE	VARCHAR(20)	NOT NULL,
	STAGE_CODE	VARCHAR(10)	NOT NULL,
  PRE_STAGE	VARCHAR(500)	NOT NULL,
  POST_STAGE	VARCHAR(500)	NOT NULL,
  DURATION	DOUBLE	NOT NULL,
	DURATION_TYPE	VARCHAR(10)	NOT NULL,
	SEQUENCE_ORDER BIGINT,
	CMS_REF_ID	BIGINT	NOT NULL,
  VERSION_TIME	BIGINT	NOT NULL,
  STATUS	VARCHAR(20),
	PRIMARY KEY (TAT_PARAM_ITEM_ID)
)IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX" ;


--DROP TABLE CMS_STAGE_TAT_PARAM;
CREATE TABLE CMS_STAGE_TAT_PARAM
(
  TAT_PARAM_ID	BIGINT	NOT NULL,
  APPLICATION_TYPE	VARCHAR(100)	NOT NULL,
  VERSION_TIME	BIGINT	NOT NULL,
	PRIMARY KEY (TAT_PARAM_ID)
)IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX" ;


--DROP TABLE CMS_STAGE_TAT_PARAM_ITEM;
CREATE TABLE CMS_STAGE_TAT_PARAM_ITEM
(
  TAT_PARAM_ITEM_ID	BIGINT	NOT NULL,
  TAT_PARAM_ID	BIGINT	NOT NULL,
  STAGE_TYPE	VARCHAR(20)	NOT NULL,
  STAGE_CODE	VARCHAR(10)	NOT NULL,
  PRE_STAGE	VARCHAR(500)	NOT NULL,
  POST_STAGE	VARCHAR(500)	NOT NULL,
  DURATION	DOUBLE	NOT NULL,
  DURATION_TYPE	VARCHAR(10)	NOT NULL,
  SEQUENCE_ORDER BIGINT,
  CMS_REF_ID	BIGINT	NOT NULL,
  VERSION_TIME	BIGINT	NOT NULL,
  STATUS	VARCHAR(20),
	PRIMARY KEY (TAT_PARAM_ITEM_ID)
)IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX" ;

--DROP SEQUENCE CMS_TAT_TRACK_SEQ;
CREATE SEQUENCE CMS_TAT_TRACK_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

--DROP TABLE CMS_TAT_TRACK;
CREATE TABLE CMS_TAT_TRACK
(
  TAT_TRACK_ID	BIGINT	NOT NULL,
  VERSION_TIME	BIGINT	NOT NULL,
  LMT_PROFILE_ID BIGINT	NOT NULL,
  PRE_DISBURSEMENT_REMARKS VARCHAR(250),
  DISBURSEMENT_REMARKS VARCHAR(250),
  POST_DISBURSEMENT_REMARKS VARCHAR(250),
	PRIMARY KEY (TAT_TRACK_ID)
)IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX" ;

--DROP SEQUENCE CMS_TAT_TRACK_STAGE_SEQ;
CREATE SEQUENCE CMS_TAT_TRACK_STAGE_SEQ AS INTEGER
	START WITH 1
	INCREMENT BY 1
	MAXVALUE 999999
	MINVALUE 1
	CYCLE
	NO CACHE
	NO ORDER;

--DROP TABLE CMS_TAT_TRACK_ITEM;
CREATE TABLE CMS_TAT_TRACK_ITEM
(
  TAT_TRACK_STAGE_ID	BIGINT	NOT NULL,
  TAT_PARAM_ITEM_ID	BIGINT	NOT NULL,
  TAT_TRACK_ID BIGINT NOT NULL,
  START_DATE TIMESTAMP ,
  ACTUAL_DATE	TIMESTAMP,
  END_DATE	TIMESTAMP,
  REASON_FOR_EXCEEDING	VARCHAR(20),
  APPLICABLE_TAT_STAGE_FLAG	VARCHAR(1),
  IS_STAGE_ACTIVE VARCHAR(1),
  STATUS	VARCHAR(20),
	PRIMARY KEY (TAT_TRACK_STAGE_ID)
)IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX" ;

/*******************************************
Create Functions for Concentration Report
*********************************************/
CREATE FUNCTION minimum (n1 DECIMAL(21,6), n2 DECIMAL(21,6), n3 DECIMAL(21,6))
   RETURNS DECIMAL(21,6)
   SPECIFIC minimum
   LANGUAGE SQL
   CONTAINS SQL
   NO EXTERNAL ACTION
   DETERMINISTIC

BEGIN ATOMIC
    DECLARE retVal DECIMAL(21,6);--

    IF (n1 <= n2) AND (n1 <= n3) THEN
        SET retVal = n1;--
    ELSEIF (n2 <= n1) AND (n2 <= n3) THEN
        SET retVal = n2;--
    ELSE
        SET retVal = n3;--
    END IF;--

    RETURN retVal;--
END;


CREATE VIEW VW_STOCK_INFO  (FEED_ID, COUNTER_NAME, COUNTRY,  EXCHANGE, BOARD_CODE, ENTITY, STOCK_EXCHANGE_BOARD,
STOCK_CODE, STOCK_TYPE,  UNIT_PRICE, MATURITY_DATE, LISTEDSHARE_QUANTITY,  PREV_DAY_PRICE, PREV_QUARTER_PRICE,
NORMAL_PRICE_CAP, RELIST_PRICE_CAP, FI_STOCK_IND, SHARE_STATUS, SHARE_STATUS_CODE, EXCHANGE_SUSPENSION, INT_SUSPENSION,
SUSPENDED_COUNTER, IS_ACCEPTABLE, IS_LIQUID, LIQUID_MOA, ILLIQUID_MOA, MOA,  MAX_TRADE_CAP_NON_FI,
MAX_COLLATERAL_CAP_NON_FI, MAX_COLLATERAL_CAP_FI,  QUOTA_COLLATERAL_CAP_NON_FI, QUOTA_COLLATERAL_CAP_FI,
MAX_CAP_PRICE, PAID_UP_CAPITAL, PAR_VALUE  ) AS
SELECT fd.feed_id, fd.name, fd.country, fd.exchange, crp.board_type, pcg.bank_entity,
       (SELECT entry_name
          FROM common_code_category_entry
         WHERE category_code = 'BOARD_TYPE' AND entry_code = crp.board_type)
          stock_exchange_board, fd.ticker stock_code, fd.type,
       fd.unit_price, fd.maturity_date, fd.LISTEDSHARE_QUANTITY,
       fd.prev_day_price, fd.prev_quarter_price,
       minimum
          (fd.prev_day_price,
           1.5 * fd.prev_quarter_price,
           (CASE
               WHEN pc.max_cap_price = -1 THEN NULL
               ELSE pc.max_cap_price
            END))
          normal_price_cap,
       minimum (0.5 * fd.prev_day_price, 1.5 * fd.prev_quarter_price, 0.5)
          relist_price_cap, crp.is_fi fi_stock_ind,
       (SELECT entry_name
          FROM common_code_category_entry cce
         WHERE cce.category_code = 'SHARE_STATUS'
           AND cce.entry_code = crp.share_status
           AND cce.ref_entry_code = fd.exchange
           AND active_status = '1')
          share_status, crp.share_status share_status_code,
       fd.is_suspended exchange_suspension, crp.is_int_suspend int_suspension,
       (CASE
           WHEN crp.is_int_suspend = 'Y' THEN 'Yes (Internal)'
           WHEN fd.is_suspended = 'Y' THEN 'Yes (Exchange)'
           ELSE 'No'
        END)
          suspended_counter, crp.is_acceptable, crp.is_liquid,
       (CASE WHEN pc.liquid_moa = -1 THEN NULL ELSE pc.liquid_moa END)
          liquid_moa,
       (CASE WHEN pc.illiquid_moa = -1 THEN NULL ELSE pc.illiquid_moa END)
          illiquid_moa,
       (CASE
           WHEN (crp.is_int_suspend = 'Y' OR fd.is_suspended = 'Y') THEN
              0
           WHEN (crp.share_status = '2'
              OR crp.share_status = '3'
              OR crp.share_status = '4') THEN
              0
           WHEN (crp.is_liquid = 'Y') THEN
              (CASE WHEN pc.liquid_moa = -1 THEN NULL ELSE pc.liquid_moa END)
           WHEN (crp.is_liquid = 'N') THEN
              (CASE
                  WHEN pc.illiquid_moa = -1 THEN NULL
                  ELSE pc.illiquid_moa
               END)
           ELSE
              NULL
        END)
          moa,
       (CASE
           WHEN pc.max_trade_cap_non_fi = -1 THEN NULL
           ELSE pc.max_trade_cap_non_fi
        END)
          max_trade_cap_non_fi,
                (CASE
           WHEN pc.max_collateral_cap_non_fi = -1 THEN NULL
           ELSE pc.max_collateral_cap_non_fi
        END)
                    max_collateral_cap_non_fi,
                (CASE
           WHEN pc.max_collateral_cap_fi = -1 THEN NULL
           ELSE pc.max_collateral_cap_fi
        END)
               max_collateral_cap_fi,
                (CASE
           WHEN pc.quota_collateral_cap_non_fi = -1 THEN NULL
           ELSE pc.quota_collateral_cap_non_fi
        END)
                    quota_collateral_cap_non_fi,
                (CASE
           WHEN pc.quota_collateral_cap_fi = -1 THEN NULL
           ELSE pc.quota_collateral_cap_fi
        END)
               quota_collateral_cap_fi,
       (CASE WHEN pc.max_cap_price = -1 THEN NULL ELSE pc.max_cap_price END)
          max_cap_price, fd.paid_up_capital, fd.par_value
  FROM cms_policy_cap pc,
       cms_policy_cap_group pcg,
             cms_price_feed fd, cms_credit_risk_param crp
 WHERE fd.exchange = pcg.stock_exchange
   AND pc.policy_cap_group_id = pcg.policy_cap_group_id
   AND crp.board_type = pc.board and fd.feed_id = crp.feed_id
   AND bank_entity = '001';


CREATE VIEW VW_EARMARK_GROUP (FEED_ID,  COUNTRY,  EARMARK_CURRENT,  EARMARK_HOLDING, LAST_QUOTA_BREACH_DATE, LAST_MAX_CAP_BREACH_DATE,
         TOTAL_NO_OF_UNITS, ENTITY) AS
(SELECT emg.feed_id,
		(select ccce.COUNTRY from common_code_category_entry ccce
		where ccce.category_code = '37' and ccce.entry_code = emg.source_system_id
		and active_status = '1') as country,
			sum (emg.earmark_current) earmark_current,
       sum (emg.earmark_holding) earmark_holding,
       max (last_quota_breach_date) last_quota_breach_date,
       max (last_max_cap_breach_date) last_max_cap_breach_date,
             (sum (emg.TOTAL_NO_OF_UNITS) + sum(coalesce(emg.CMS_ACTUAL_HOLDING,0))) total_no_of_units,
             emg.source_system_id    entity
  FROM cms_earmark_group emg
 	where emg.STATUS = 'ACTIVE'
 GROUP BY feed_id, source_system_id);

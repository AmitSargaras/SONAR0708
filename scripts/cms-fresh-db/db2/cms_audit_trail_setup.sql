--DROP TABLE COMMON_CODE_ENTRY_AUDIT@

CREATE TABLE COMMON_CODE_ENTRY_AUDIT (
  ID BIGINT	NOT NULL,
  ENTRY_ID	BIGINT,
  ENTRY_CODE	VARCHAR(40),
  ENTRY_NAME	VARCHAR(255),
  ACTIVE_STATUS	CHARACTER(1),
  CATEGORY_CODE	VARCHAR(40),
  CATEGORY_CODE_ID	BIGINT,
  ENTRY_SOURCE	VARCHAR(40),
  COUNTRY	VARCHAR(3),
  GROUP_ID	BIGINT,
  REF_ENTRY_CODE	VARCHAR(40),
  VERSION_TIME	BIGINT,
  STATUS	VARCHAR(15),
  CREATION_TIME	TIMESTAMP
) in CMS_AUDIT_DATA
@

--DROP SEQUENCE COMMON_CODE_ENTRY_AUDIT_SEQ@

CREATE SEQUENCE COMMON_CODE_ENTRY_AUDIT_SEQ
  AS INTEGER
  NO CACHE
  MAXVALUE 999999
  CYCLE
@  

--DROP TRIGGER CC_ENTRY_TRIGGER@

CREATE TRIGGER CC_ENTRY_TRIGGER
 AFTER UPDATE
  ON COMMON_CODE_CATEGORY_ENTRY
  REFERENCING 
              OLD AS "OLD"
              NEW AS "NEW"
  FOR EACH ROW
BEGIN ATOMIC 
  DECLARE ROW_ID BIGINT;
	
  IF ( "NEW".ENTRY_CODE != "OLD".ENTRY_CODE OR "NEW".ENTRY_NAME != "OLD".ENTRY_NAME OR "NEW".COUNTRY != "OLD".COUNTRY OR "NEW".REF_ENTRY_CODE != "OLD".REF_ENTRY_CODE OR "NEW".ACTIVE_STATUS != "OLD".ACTIVE_STATUS) THEN
    SET ROW_ID = CAST(FORMAT_KEY(CURRENT TIMESTAMP, NEXT VALUE FOR COMMON_CODE_ENTRY_AUDIT_SEQ) AS BIGINT);
		INSERT INTO COMMON_CODE_ENTRY_AUDIT(
				  ID,
					ENTRY_ID,
					ENTRY_CODE,
					ENTRY_NAME,
					ACTIVE_STATUS,
					CATEGORY_CODE,
					CATEGORY_CODE_ID,
					ENTRY_SOURCE,
					COUNTRY,
					GROUP_ID,
					REF_ENTRY_CODE,
					VERSION_TIME,
					STATUS,
					CREATION_TIME)
        VALUES (
				  ROW_ID,
					OLD.ENTRY_ID,
					OLD.ENTRY_CODE,
					OLD.ENTRY_NAME,
					OLD.ACTIVE_STATUS,
					OLD.CATEGORY_CODE,
					OLD.CATEGORY_CODE_ID,
					OLD.ENTRY_SOURCE,
					OLD.COUNTRY,
					OLD.GROUP_ID,
					OLD.REF_ENTRY_CODE,
					OLD.VERSION_TIME,
					OLD.STATUS,
					CURRENT TIMESTAMP);
  END IF;
END
@


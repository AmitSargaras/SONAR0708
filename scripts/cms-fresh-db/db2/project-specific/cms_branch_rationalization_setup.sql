DROP TABLE BR_TEMP_BVLNCMBR;
DROP TABLE BR_TEMP_BVLNCMAA;
DROP TABLE BR_TEMP_BVLNCMAC;
DROP TABLE BR_TEMP_BVDDCLIMS;
DROP TABLE BR_TEMP_BVCDCLIMS;
DROP TABLE BR_AUDIT_LOG;
DROP TABLE BR_BRANCH_NOT_CONVERT;
DROP TABLE BR_PROC_TIME_LOG;
DROP PROCEDURE BR_LOG_AUDIT;
DROP PROCEDURE BR_LOG_PROC_TIME;
DROP TABLE BR_AUDIT_REPORT;

-- Branch No
CREATE TABLE BR_TEMP_BVLNCMBR (
  WOLDBR	VARCHAR(3),
  WNEWBR	VARCHAR(3),
  IS_VALID	CHAR(1) Default 'Y'
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;  

-- AA No
CREATE TABLE BR_TEMP_BVLNCMAA (
  WOLDBR	VARCHAR(3),
  WNEWBR	VARCHAR(3),
  WOLDAP	VARCHAR(19),
  WNEWAP	VARCHAR(19),
  IS_VALID	CHAR(1) Default 'Y'
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;

-- Loan Account No
CREATE TABLE BR_TEMP_BVLNCMAC (
  WOLDBR	VARCHAR(3),
  WNEWBR	VARCHAR(3),
  WACTYPE	VARCHAR(1),
  WOLDAC	VARCHAR(19),
  WNEWAC	VARCHAR(19),
  IS_VALID	CHAR(1) Default 'Y'
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;

-- Current/Saving Account No
CREATE TABLE BR_TEMP_BVDDCLIMS (
  OBRN	VARCHAR(3),
  NBRN	VARCHAR(3),
  ATYP	VARCHAR(1),
  OACC	VARCHAR(19),
  NACC	VARCHAR(19),
  IS_VALID	CHAR(1) Default 'Y'
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;

-- Fixed Deposit Account No
CREATE TABLE BR_TEMP_BVCDCLIMS (
  OBRN	VARCHAR(3),
  NBRN	VARCHAR(3),
  ATYP	VARCHAR(1),
  OACCG	VARCHAR(19),
  NACCG	VARCHAR(19),
  OFDR	VARCHAR(19),
  NFDR	VARCHAR(19),
  IS_VALID	CHAR(1) Default 'Y'
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;

-- Audit log table
CREATE TABLE BR_AUDIT_LOG( 
TABLE_NAME	VARCHAR(50),
KEY_VALUE_1	BIGINT,
KEY_VALUE_2	VARCHAR(50),
KEY_VALUE_3	VARCHAR(50),
COLUMN_NAME	VARCHAR(50),
SOURCE_ID	VARCHAR(20),
OLD_VALUE	VARCHAR(50),
NEW_VALUE	VARCHAR(50),
UPDATE_TIMESTAMP	TIMESTAMP	
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;  

CREATE PROCEDURE BR_LOG_AUDIT (
    IN P_TABLE_NAME VARCHAR(50),
    IN P_COLUMN_NAME VARCHAR(50),
    IN P_KEY_VALUE_1 BIGINT,
	IN P_KEY_VALUE_2 VARCHAR(50),
	IN P_KEY_VALUE_3 VARCHAR(50),
	IN P_SOURCE_ID	VARCHAR(20),
	IN P_OLD_VALUE	VARCHAR(50),
	IN P_NEW_VALUE	VARCHAR(50))
LANGUAGE SQL
BEGIN ATOMIC
  INSERT INTO BR_AUDIT_LOG (TABLE_NAME, COLUMN_NAME, KEY_VALUE_1, KEY_VALUE_2, KEY_VALUE_3, SOURCE_ID, OLD_VALUE, NEW_VALUE, UPDATE_TIMESTAMP)
    VALUES (P_TABLE_NAME, P_COLUMN_NAME, P_KEY_VALUE_1, P_KEY_VALUE_2, P_KEY_VALUE_3, P_SOURCE_ID, P_OLD_VALUE, P_NEW_VALUE, CURRENT_TIMESTAMP);--
END;

-- Check branch not converted 
CREATE TABLE BR_BRANCH_NOT_CONVERT( 
ACTION_NAME VARCHAR(10),
TABLE_NAME	VARCHAR(50),
KEY_VALUE_1	BIGINT,
KEY_VALUE_2	VARCHAR(50),
KEY_VALUE_3	VARCHAR(50),
COLUMN_NAME	VARCHAR(50),
OLD_VALUE	VARCHAR(50),
SOURCE_ID	VARCHAR(20) 
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;


-- Proc Time Log
CREATE TABLE BR_PROC_TIME_LOG(
  PROC_NUMBER BIGINT GENERATED BY DEFAULT AS IDENTITY,
  PROC_NAME VARCHAR(255),
  FILE_NAME VARCHAR(10), -- Mapping file name
  START_FLAG INT,
  TIME_STAMP TIMESTAMP
)
IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;

CREATE PROCEDURE BR_LOG_PROC_TIME (
    IN P_PROC_NAME VARCHAR(255),
    IN P_FILE_NAME VARCHAR(10),
    IN P_START_FLAG INT)
LANGUAGE SQL
BEGIN ATOMIC
  INSERT INTO BR_PROC_TIME_LOG (PROC_NAME, FILE_NAME, START_FLAG, TIME_STAMP)
    VALUES (P_PROC_NAME, P_FILE_NAME, P_START_FLAG, CURRENT_TIMESTAMP);--
END;

--------------------------------------
-- Branch Rationalization Report Table 
--------------------------------------
CREATE TABLE BR_AUDIT_REPORT(
    BR_ID	BIGINT GENERATED BY DEFAULT AS IDENTITY,
    REPORT_TYPE VARCHAR(30),
    REC_KEY BIGINT,
    TEXT  VARCHAR(2000),
    FILE_NAME VARCHAR(10),
    SOURCE_ID VARCHAR(5),
		TIME_STAMP TIMESTAMP
)  IN CMS_BATCH INDEX IN CMS_BATCH_INDEX;

-- indexes

create index BR_BVLNCMBR_IDX1 on BR_TEMP_BVLNCMBR(WOLDBR asc, is_valid asc)
allow reverse scans;

create index BR_BVLNCMAA_IDX1 on BR_TEMP_BVLNCMAA(WOLDAP asc, is_valid asc)
allow reverse scans;

create index BR_BVLNCMAA_IDX2 on BR_TEMP_BVLNCMAA(WNEWAP asc, is_valid asc)
allow reverse scans;

create index BR_BVLNCMAC_IDX1 on BR_TEMP_BVLNCMAC(WACTYPE asc, WOLDAC asc, is_valid asc)
allow reverse scans;

create index BR_BVDDCLIMS_IDX1 on BR_TEMP_BVDDCLIMS(ATYP asc, OACC asc, is_valid asc)
allow reverse scans;

create index BR_BVCDCLIMS_IDX1 on BR_TEMP_BVCDCLIMS(OACCG asc, OFDR asc, is_valid asc)
allow reverse scans;

create index BR_BVCDCLIMS_IDX2 on BR_TEMP_BVCDCLIMS(OFDR asc, is_valid asc)
allow reverse scans;

COMMIT WORK;

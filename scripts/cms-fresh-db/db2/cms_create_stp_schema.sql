--drop table STP_MASTER_TRANS;
--drop table STP_TRANS_ERROR;
--drop table STP_TRANS;
--drop table STP_TRANS_HISTORY;
--DROP TABLE STP_BIZ_ERROR_CODE;

CREATE TABLE STP_MASTER_TRANS ( 
	MASTER_TRX_ID	        BIGINT NOT NULL,
	TRANSACTION_ID        VARCHAR(20),
	STATUS       			VARCHAR(20),
	TRANSACTION_TYPE		VARCHAR(20),
	REFERENCE_ID			BIGINT,
	LAST_SUBMISSION_DATE timestamp,
	PRIMARY KEY(MASTER_TRX_ID)
) IN CMS_STP INDEX IN CMS_STP_INDEX;

CREATE INDEX STP_MASTER_TRX_IDX1
	ON STP_MASTER_TRANS (TRANSACTION_ID, TRANSACTION_TYPE)
	ALLOW REVERSE SCANS;
	
CREATE INDEX STP_MASTER_TRX_IDX2
ON STP_MASTER_TRANS (STATUS, LAST_SUBMISSION_DATE)
ALLOW REVERSE SCANS;	

CREATE TABLE STP_TRANS ( 
	TRX_ID	         		BIGINT NOT NULL,
	MASTER_TRX_ID			BIGINT,
	USER_ID                	BIGINT,
	TRX_TYPE		       	VARCHAR(10),
	CREATION_DATE          	TIMESTAMP,
	LAST_UPDATE_DATE       	TIMESTAMP,
	STATUS                 	VARCHAR(30),
	CUR_TRX_HISTORY_ID     	VARCHAR(20),
	TRX_HISTORY_ID			BIGINT,
	MSG_COUNT				INTEGER DEFAULT 0,
	REQUEST_MSG				BLOB(4096),
	RESPONSE_CODE			VARCHAR(2),
	TRX_UID						BIGINT,
	REFERENCE_ID			BIGINT,
	OPS_DESC					VARCHAR(20),
	PRIMARY KEY(TRX_ID)
) IN CMS_STP INDEX IN CMS_STP_INDEX;

CREATE TABLE STP_TRANS_HISTORY ( 
	TRX_HISTORY_ID			BIGINT NOT NULL,
	TRX_ID	         		BIGINT NOT NULL,
	MASTER_TRX_ID			BIGINT,
	USER_ID                	BIGINT,
	TRX_TYPE		       	VARCHAR(10),
	CREATION_DATE          	TIMESTAMP,
	LAST_UPDATE_DATE       	TIMESTAMP,
	STATUS                 	VARCHAR(30),
	CUR_TRX_HISTORY_ID     	VARCHAR(20),
	MSG_COUNT				INTEGER DEFAULT 0,
	REQUEST_MSG				BLOB(4096),
	RESPONSE_CODE			VARCHAR(2),
	TRX_UID						BIGINT,
	REFERENCE_ID			BIGINT,
	OPS_DESC					VARCHAR(20),
	PRIMARY KEY(TRX_HISTORY_ID)
) IN CMS_STP INDEX IN CMS_STP_INDEX;

CREATE TABLE STP_TRANS_ERROR ( 
	ERROR_ID					BIGINT NOT NULL,
	TRX_UID       		BIGINT,
	ERROR_CODE				VARCHAR(20),
	ERROR_DESC				VARCHAR(500),
	PRIMARY KEY(ERROR_ID)
) IN CMS_STP INDEX IN CMS_STP_INDEX;

CREATE TABLE STP_ERROR_CODE_MAP ( 
	ERROR_CODE_ID   	BIGINT NOT NULL,
	ERROR_CODE      			VARCHAR(40) NOT NULL,
	ERROR_DESCRIPTION     VARCHAR(255),
	ERROR_TYPE						VARCHAR(5),
	CMS_ERROR_DESC				VARCHAR(255),
  STATUS                VARCHAR(10)
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

ALTER TABLE STP_ERROR_CODE_MAP
	ADD CONSTRAINT STP_COMMON_ERR_PK
	PRIMARY KEY (ERROR_CODE_ID);

	
CREATE TABLE CMS_STP_READY_STATUS_MAP (
	ID						BIGINT GENERATED ALWAYS AS IDENTITY
						     (START WITH 1,
						      INCREMENT BY 1,
						      CYCLE,
						      MAXVALUE 999999999),
	TRANSACTION_ID 			VARCHAR(20) NOT NULL,
	TRANSACTION_TYPE 		VARCHAR(20) NOT NULL,
	IS_STP_READY 			CHARACTER(1) NOT NULL,
	LAST_UPDATE_DATE		TIMESTAMP,
	CREATED_DATE			TIMESTAMP
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;

CREATE INDEX IDX_STP_STATUS_MAP ON CMS_STP_READY_STATUS_MAP
(TRANSACTION_ID ASC) ALLOW REVERSE SCANS;

--Govind S:create SEQUENCE for CMS_STP_READY_STATUS_MAP 
CREATE SEQUENCE CMS_STP_READY_STATUS_MAP_SEQ
  MINVALUE 1
  MAXVALUE 999999999
  INCREMENT BY 1
  CYCLE
  NOORDER
  NOCACHE
--Govind S:Trigger for isert id in CMS_STP_READY_STATUS_MAP
create trigger CMS_STP_READY_STUS_MAP_TRG_INS
  before insert on CMS_STP_READY_STATUS_MAP
  for each row
  begin
    select CMS_STP_READY_STATUS_MAP_SEQ.nextval into :new.ID from dual;
  end;
  

CREATE SEQUENCE STP_MASTER_TRANS_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 

CREATE SEQUENCE STP_TRANS_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 

CREATE SEQUENCE STP_TRANS_HISTORY_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 
	
CREATE SEQUENCE STP_TRANS_ERROR_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 
	
CREATE SEQUENCE STP_TRANS_UID_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 
	
CREATE SEQUENCE STP_TRANS_REF_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 9999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 
	
CREATE INDEX STP_TRANS_I1
	ON STP_TRANS(TRX_UID)
	ALLOW REVERSE SCANS ;
	
CREATE INDEX STP_TRANS_I2
	ON STP_TRANS(MASTER_TRX_ID, TRX_TYPE, REFERENCE_ID)
	ALLOW REVERSE SCANS;
	
CREATE INDEX STP_TRANS_HISTORY_I1
	ON STP_TRANS_HISTORY(TRX_UID)
	ALLOW REVERSE SCANS ;

CREATE INDEX STP_TRANS_ERROR_I1
	ON STP_TRANS_ERROR(TRX_UID)
	ALLOW REVERSE SCANS ;

CREATE SEQUENCE STP_ERROR_CODE_MAP_SEQ AS INTEGER
    START WITH 1
    INCREMENT BY 1
    MAXVALUE 999999999
    MINVALUE 1
    CYCLE
    NO CACHE
    NO ORDER;


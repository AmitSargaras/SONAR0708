CREATE OR REPLACE PROCEDURE SP_FACILTY_MASTER_MIG
AS
  CURSOR SP_FACILTY_MASTER_CUR
  IS
    SELECT FACILTY_MASTER_ID,
      NEW_FACILITY_NAME,
      NEW_FACILITY_CODE,
      NEW_FACILITY_TYPE,
      NEW_FACILITY_CATEGORY,
      LINE_NUMBER,
      AVAIL_AND_OPTION_APPLICABLE,
      Selected_RISK_TYPE_CODE
    FROM FACILTY_MASTER_MIG_TEMP
    WHERE UPDATE_STATUS = 'N' AND 
	IS_VALIDATED = 'Y';
    
  RC_FLAG_UPDATE SP_FACILTY_MASTER_CUR%ROWTYPE;
  
  COUNT_ACTUAL NUMBER(10);
  
BEGIN
  OPEN SP_FACILTY_MASTER_CUR;
  LOOP
    FETCH SP_FACILTY_MASTER_CUR INTO RC_FLAG_UPDATE;
    EXIT
  WHEN SP_FACILTY_MASTER_CUR%NOTFOUND;
    COUNT_ACTUAL := 0;
    SELECT COUNT(1)
    INTO COUNT_ACTUAL
    FROM CMS_FACILITY_NEW_MASTER
    WHERE NEW_FACILITY_CODE = RC_FLAG_UPDATE.NEW_FACILITY_CODE;
    
	IF(COUNT_ACTUAL >0) THEN
		
	  UPDATE CMS_FACILITY_NEW_MASTER
      SET
      SELECTED_RISK_TYPES       = RC_FLAG_UPDATE.Selected_RISK_TYPE_CODE
      WHERE NEW_FACILITY_CODE         = RC_FLAG_UPDATE.NEW_FACILITY_CODE;
      
      UPDATE CMS_STAGE_FACILITY_NEW_MASTER
      SET 
       SELECTED_RISK_TYPES       = RC_FLAG_UPDATE.Selected_RISK_TYPE_CODE
       WHERE NEW_FACILITY_CODE         = RC_FLAG_UPDATE.NEW_FACILITY_CODE;
		
      UPDATE FACILTY_MASTER_MIG_TEMP
      SET UPDATE_STATUS       = 'Y'
      WHERE NEW_FACILITY_CODE = RC_FLAG_UPDATE.NEW_FACILITY_CODE;
	  
	  if( RC_FLAG_UPDATE.AVAIL_AND_OPTION_APPLICABLE = 'on')then
	  UPDATE CMS_FACILITY_NEW_MASTER
      SET AVAIL_AND_OPTION_APPLICABLE = RC_FLAG_UPDATE.AVAIL_AND_OPTION_APPLICABLE
      WHERE NEW_FACILITY_CODE         = RC_FLAG_UPDATE.NEW_FACILITY_CODE;
      
      UPDATE CMS_STAGE_FACILITY_NEW_MASTER
      SET AVAIL_AND_OPTION_APPLICABLE = RC_FLAG_UPDATE.AVAIL_AND_OPTION_APPLICABLE
      WHERE NEW_FACILITY_CODE         = RC_FLAG_UPDATE.NEW_FACILITY_CODE;
		
     
	   END IF;
    END IF;
END LOOP;
CLOSE SP_FACILTY_MASTER_CUR;
COMMIT;
END;
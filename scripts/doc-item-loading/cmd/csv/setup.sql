DROP TABLE TMP_DOCUMENT_GLOBALLIST;
DROP TABLE ERR_DOCUMENT_GLOBALLIST;
DROP PROCEDURE LOAD_DOC_GLOBAL_ITEM;


CREATE TABLE TMP_DOCUMENT_GLOBALLIST ( 
	DOCUMENT_ID         	BIGINT generated by default as identity (MINVALUE 1 MAXVALUE 9999999999999999 START WITH 10000000000001 INCREMENT BY 1 NO CACHE CYCLE NO ORDER),
	DOCUMENT_DESCRIPTION	VARCHAR(500) NOT NULL,
	DOCUMENT_CODE       	VARCHAR(20),
	CATEGORY            	VARCHAR(20),
	EXPIRY_DATE         	TIMESTAMP,
	VERSION_TIME        	BIGINT  Default 0,
	MONITOR_TYPE        	VARCHAR(20), 
    DOC_VERSION      		VARCHAR(7),
    IS_PRE_APPROVE   		CHAR(1),
    IS_FOR_BORROWER  		CHAR(1),
    IS_FOR_PLEDGOR   		CHAR(1),
    LOAN_APP_TYPE    		VARCHAR(40)	
) IN CMS_SMALL_DATA INDEX IN CMS_INDEX;


CREATE TABLE ERR_DOCUMENT_GLOBALLIST LIKE TMP_DOCUMENT_GLOBALLIST;

ALTER TABLE ERR_DOCUMENT_GLOBALLIST
	ADD ERR_DATE		TIMESTAMP
	ADD LOAD_ERR_CODE	CLOB;
    
    

CREATE PROCEDURE LOAD_DOC_GLOBAL_ITEM 
LANGUAGE SQL
SPECIFIC LOAD_DOC_GLOBAL_ITEM 
begin NOT ATOMIC    

    ---------------------------------------------------------
	-- Part 1: Validation
	-- 1. Create Actual
	-- 2. Create Staging
    -- 3. Create Transaction
    -- 4. Create Transaction History
	---------------------------------------------------------
	
	INSERT INTO CMS_DOCUMENT_GLOBALLIST 
        (DOCUMENT_ID, DOCUMENT_DESCRIPTION, 
         DOCUMENT_CODE, CATEGORY, EXPIRY_DATE, VERSION_TIME, MONITOR_TYPE, 
         DOC_VERSION, IS_PRE_APPROVE, IS_FOR_BORROWER, IS_FOR_PLEDGOR, LOAN_APP_TYPE)
    SELECT DOCUMENT_ID, DOCUMENT_DESCRIPTION, 
            DOCUMENT_CODE, CATEGORY, EXPIRY_DATE, VERSION_TIME, MONITOR_TYPE, 
            DOC_VERSION, IS_PRE_APPROVE, IS_FOR_BORROWER, IS_FOR_PLEDGOR, LOAN_APP_TYPE	
	FROM TMP_DOCUMENT_GLOBALLIST;--  
	
	INSERT INTO STAGE_DOCUMENT_GLOBALLIST 
        (DOCUMENT_ID, DOCUMENT_DESCRIPTION, 
         DOCUMENT_CODE, CATEGORY, EXPIRY_DATE, VERSION_TIME, MONITOR_TYPE, 
         DOC_VERSION, IS_PRE_APPROVE, IS_FOR_BORROWER, IS_FOR_PLEDGOR, LOAN_APP_TYPE)
    SELECT DOCUMENT_ID, DOCUMENT_DESCRIPTION, 
            DOCUMENT_CODE, CATEGORY, EXPIRY_DATE, VERSION_TIME, MONITOR_TYPE, 
            DOC_VERSION, IS_PRE_APPROVE, IS_FOR_BORROWER, IS_FOR_PLEDGOR, LOAN_APP_TYPE	
	FROM TMP_DOCUMENT_GLOBALLIST;--  

    INSERT INTO TRANSACTION(TRANSACTION_ID, FROM_STATE, USER_ID, 
        TRANSACTION_TYPE, CREATION_DATE, TRANSACTION_DATE, 
        REFERENCE_ID, STATUS, STAGING_REFERENCE_ID, 
        TEAM_ID, TEAM_TYPE_ID, VERSION, REMARKS, TRX_REFERENCE_ID, OPSDESC, CUSTOMER_ID, 
        TRX_ORIGIN_COUNTRY, TRX_ORIGIN_ORGANISATION, TRX_SEGMENT, TO_GROUP_TYPE_ID, TO_GROUP_ID, TO_USER_ID) 
    SELECT TRIM(CHAR(100000000000 + NEXT VALUE FOR TRX_SEQ)), 'ND', -1, 
            'DOCITEM', CURRENT TIMESTAMP, CURRENT TIMESTAMP, 
            DOCUMENT_ID, 'ACTIVE', DOCUMENT_ID, 
            0, 2, 1, 'CHECKLIST_TEMPLATE_LOADING', -999999999, 'SYSTEM_CREATE', -999999999, 
            '--', '--', '--', '-999999999', -999999999, -999999999
    FROM TMP_DOCUMENT_GLOBALLIST;--

    
    INSERT INTO TRANS_HISTORY(TR_HISTORY_ID, TRANSACTION_ID, FROM_STATE, USER_ID, 
        TRANSACTION_TYPE, CREATION_DATE, TRANSACTION_DATE, 
        REFERENCE_ID, STATUS, STAGING_REFERENCE_ID, 
        TEAM_ID, TEAM_TYPE_ID, VERSION, REMARKS, TRX_REFERENCE_ID, OPSDESC, CUSTOMER_ID, 
        TRX_ORIGIN_COUNTRY, TRX_ORIGIN_ORGANISATION, TRX_SEGMENT, TO_GROUP_TYPE_ID, TO_GROUP_ID, TO_USER_ID) 
    SELECT CAST(transaction_id AS BIGINT), CHAR(TRANSACTION_ID), FROM_STATE, USER_ID, 
        TRANSACTION_TYPE, CREATION_DATE, TRANSACTION_DATE, 
        CHAR(REFERENCE_ID), STATUS, CHAR(STAGING_REFERENCE_ID), 
        TEAM_ID, TEAM_TYPE_ID, VERSION, REMARKS, CHAR(TRX_REFERENCE_ID), OPSDESC, CUSTOMER_ID, 
        TRX_ORIGIN_COUNTRY, TRX_ORIGIN_ORGANISATION, TRX_SEGMENT, TO_GROUP_TYPE_ID, TO_GROUP_ID, TO_USER_ID
    FROM TRANSACTION
    WHERE TRANSACTION_TYPE = 'DOCITEM'
    AND OPSDESC = 'SYSTEM_CREATE';--


end;  
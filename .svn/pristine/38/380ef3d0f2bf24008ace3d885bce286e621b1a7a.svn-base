/**************************************************************************
 Requestor : Tan Pei Cheng
 Desc : Aggregate exposure
 Date : 11 August 2008
*************************************************************************/


--DROP TABLE CMS_GROUP_CUSTOMER_TEMP@

CREATE TABLE CMS_GROUP_CUSTOMER_TEMP (
ID					BIGINT	NOT NULL	GENERATED ALWAYS
								AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20,
								NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
CMS_SUB_PROFILE_ID 			BIGINT,
FI_INDICATOR  				VARCHAR(1),
EXEMPTED_INDICATOR  		VARCHAR(1) DEFAULT 'N',
GRP_ID       				BIGINT,
SUB_GRP_ID       			BIGINT,
LE_ID	       				VARCHAR(20),
LE_ID_SOURCE				VARCHAR(10),
LEGAL_NAME					VARCHAR(100),
CATEGORY      				VARCHAR(100),
BUSINESS_SEC				VARCHAR(40),  -- ISIC CODE
CUST_REL_NUM				VARCHAR(40),
CUST_REL_VALUE				VARCHAR(255)
)in CMS_BATCH index in CMS_BATCH_INDEX@

CREATE INDEX CMS_GROUP_CUSTOMER_TEMP_IDX1 ON CMS_GROUP_CUSTOMER_TEMP
(CMS_SUB_PROFILE_ID ASC, GRP_ID ASC)@

--DROP TABLE CMS_LIMIT_EXPOSURE@
		
CREATE TABLE CMS_LIMIT_EXPOSURE (
ID							BIGINT	NOT NULL	GENERATED ALWAYS
								AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20,
								NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
CMS_LSP_APPR_LMTS_ID		BIGINT,
CMS_SUB_PROFILE_ID 			BIGINT,
LMT_LOAN_SECTOR_VALUE    	VARCHAR(40),
CMS_BKG_COUNTRY				CHARACTER(2),
CMS_BKG_ORGANISATION		VARCHAR(20),
BANK_ENTITY 				VARCHAR(10),
LMT_CRRNCY_ISO_CODE			CHARACTER(3),
LMT_AMT						DECIMAL(20,2),  
CMS_OUTSTANDING_AMT			DECIMAL(20,2),
LMT_PRD_TYPE_VALUE			VARCHAR(40),
SOURCE_ID					VARCHAR(10),
DISBURSED_IND   			VARCHAR(1),
IS_EXEMPTED_FAC   			VARCHAR(1) DEFAULT 'N',  -- N - Not exempted fac, Y - Is exempted fac, C - conditional exempted fac
EXEMPTED_LMT_AMT			DECIMAL(20,2),  -- limit amount will exclude exempted fac amount
APPR_LMT_AMT			DECIMAL(20,2)
)in CMS_BATCH index in CMS_BATCH_INDEX
@

CREATE INDEX CMS_LIMIT_EXPOSURE_IDX1 ON CMS_LIMIT_EXPOSURE
(CMS_SUB_PROFILE_ID ASC)@


--DROP TABLE CMS_LIMIT_GRP_AGGR@

CREATE TABLE CMS_LIMIT_GRP_AGGR (
ID							BIGINT	NOT NULL	GENERATED ALWAYS
								AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20,
								NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
CMS_LSP_APPR_LMTS_ID		BIGINT,
CMS_SUB_PROFILE_ID 			BIGINT,
LMT_LOAN_SECTOR_VALUE    	VARCHAR(40),
CMS_BKG_COUNTRY				CHARACTER(2),
CMS_BKG_ORGANISATION		VARCHAR(20),
BANK_ENTITY 				VARCHAR(10),
LMT_CRRNCY_ISO_CODE			CHARACTER(3),
LMT_AMT						DECIMAL(20,2),
CMS_OUTSTANDING_AMT			DECIMAL(20,2),
LMT_PRD_TYPE_VALUE			VARCHAR(40),
SOURCE_ID					VARCHAR(10),
DISBURSED_IND   			VARCHAR(1),
IS_EXEMPTED_FAC   			VARCHAR(1) DEFAULT 'N',  -- N - Not exempted fac, Y - Is exempted fac, C - conditional exempted fac
EXEMPTED_LMT_AMT			DECIMAL(20,2),  -- limit amount will exclude exempted fac amount
CMS_DRAWING_AMT				DECIMAL(20,2),
LMT_ID						VARCHAR(45),
LMT_OMNIBUS_IND				CHARACTER(1),
LMT_OUTER_LMT_ID			BIGINT,
CMS_OUTER_LMT_REF			VARCHAR(45),
LMT_TYPE_VALUE				VARCHAR(10),
SEQ_NO						VARCHAR(6),
GRP_ID						BIGINT
)in CMS_BATCH index in CMS_BATCH_INDEX
@


CREATE INDEX CMS_LIMIT_GRP_AGGR_IDX1 ON CMS_LIMIT_GRP_AGGR
(CMS_SUB_PROFILE_ID ASC)@

--DROP TABLE CMS_COL_GRP_AGGR@

CREATE TABLE CMS_COL_GRP_AGGR (
ID							BIGINT	NOT NULL	GENERATED ALWAYS
								AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20,
								NO MINVALUE, NO MAXVALUE, NO CYCLE, NO ORDER),
CMS_LSP_APPR_LMTS_ID		BIGINT,
CMS_SUB_PROFILE_ID 			BIGINT,
CMS_COLLATERAL_ID			BIGINT,
TYPE_NAME					VARCHAR(40),
SUBTYPE_NAME				VARCHAR(60),
OMV_CURR					CHARACTER(3),
OMV_AMT						DECIMAL(20,2),
GRP_ID						BIGINT
)in CMS_BATCH index in CMS_BATCH_INDEX
@

CREATE INDEX CMS_COL_GRP_AGGR_IDX1 ON CMS_COL_GRP_AGGR
(CMS_COLLATERAL_ID ASC)@


--DROP PROCEDURE PROC_POPULATE_EXPOSURE@

CREATE PROCEDURE PROC_POPULATE_EXPOSURE LANGUAGE SQL
BEGIN

CALL UTIL_TRUNCATE_TABLE('CMS_LIMIT_EXPOSURE');

INSERT INTO CMS_LIMIT_EXPOSURE 
( CMS_LSP_APPR_LMTS_ID, CMS_SUB_PROFILE_ID, 
	LMT_LOAN_SECTOR_VALUE, CMS_BKG_COUNTRY, 
	CMS_BKG_ORGANISATION, BANK_ENTITY, 
	LMT_CRRNCY_ISO_CODE, LMT_AMT, EXEMPTED_LMT_AMT, APPR_LMT_AMT,
	CMS_OUTSTANDING_AMT, LMT_PRD_TYPE_VALUE, 
	SOURCE_ID, DISBURSED_IND )
(  SELECT CMS_LSP_APPR_LMTS_ID, p.CMS_CUSTOMER_ID, 
			LMT_LOAN_SECTOR_VALUE, CMS_BKG_COUNTRY, 
			CMS_BKG_ORGANISATION, GET_BANK_ENTITY( CMS_BKG_ORGANISATION ),
			LMT_CRRNCY_ISO_CODE, LMT_AMT, LMT_AMT, LMT_AMT,
			CMS_OUTSTANDING_AMT, LMT_PRD_TYPE_VALUE, 
			l.SOURCE_ID, DISBURSED_IND
	FROM SCI_LSP_APPR_LMTS l, SCI_LSP_LMT_PROFILE p
	WHERE 
	p.CMS_LSP_LMT_PROFILE_ID = l.CMS_LIMIT_PROFILE_ID
	AND	p.CMS_BCA_STATUS <> 'DELETED' 
	AND	l.CMS_LIMIT_STATUS <> 'DELETED' 
	AND	l.LMT_TYPE_VALUE = 'OUTER' 
);						
			
commit;

UPDATE CMS_LIMIT_EXPOSURE l SET (LMT_AMT, EXEMPTED_LMT_AMT) = (APPR_LMT_AMT, APPR_LMT_AMT)
WHERE SOURCE_ID = 'QUAN';

UPDATE CMS_LIMIT_EXPOSURE l SET (CMS_OUTSTANDING_AMT) = (0)
WHERE CMS_OUTSTANDING_AMT  < 0 AND 
EXISTS ( SELECT '1'
				FROM SCI_LSP_SYS_XREF x, SCI_LSP_LMTS_XREF_MAP M
				WHERE LSX_EXT_SYS_ACCT_TYPE <> 'L'
				AND m.CMS_STATUS <> 'DELETED'
				AND x.ACCT_STATUS <> 'D');

UPDATE CMS_LIMIT_EXPOSURE l SET (LMT_AMT, EXEMPTED_LMT_AMT) = (CMS_OUTSTANDING_AMT, CMS_OUTSTANDING_AMT)
WHERE EXISTS ( SELECT '1'
				FROM SCI_LSP_SYS_XREF x, SCI_LSP_LMTS_XREF_MAP M
				WHERE 
					x.LSX_EXT_SYS_CODE_VALUE = 'ARBS' 
				AND L.CMS_LSP_APPR_LMTS_ID = M.CMS_LSP_APPR_LMTS_ID
				AND x.CMS_LSP_SYS_XREF_ID = M.CMS_LSP_SYS_XREF_ID 
		        AND LSX_EXT_SYS_ACCT_TYPE = 'L'
				AND m.CMS_STATUS <> 'DELETED'
				AND x.ACCT_STATUS <> 'D')
		AND L.SOURCE_ID = 'ARBS' 
        AND DISBURSED_IND = 'F'
		;
		 
UPDATE  CMS_LIMIT_EXPOSURE SET (LMT_AMT, EXEMPTED_LMT_AMT) = (0, 0)
WHERE LMT_AMT < 0;

UPDATE  CMS_LIMIT_EXPOSURE SET (IS_EXEMPTED_FAC) = ('Y')
WHERE 
EXISTS(
	SELECT '1' FROM CMS_EXEMPT_FACILITY WHERE FACILITY_STATUS_EXEMPTED = 'E' AND FACILITY_CODE = LMT_PRD_TYPE_VALUE AND STATUS <> 'DELETED'
);

UPDATE  CMS_LIMIT_EXPOSURE SET (EXEMPTED_LMT_AMT, IS_EXEMPTED_FAC) = 
( SELECT LMT_AMT*CONDITIONAL_PERCENT/100 , FACILITY_STATUS_EXEMPTED
	FROM CMS_EXEMPT_FACILITY e WHERE FACILITY_STATUS_EXEMPTED = 'C' AND FACILITY_CODE = LMT_PRD_TYPE_VALUE AND STATUS <> 'DELETED' )
WHERE EXISTS (
	SELECT '1' FROM CMS_EXEMPT_FACILITY WHERE FACILITY_STATUS_EXEMPTED = 'C' AND FACILITY_CODE = LMT_PRD_TYPE_VALUE AND STATUS <> 'DELETED'
);


END@


------------------------------------
--- Exposure aggregate country
------------------------------------
--DROP PROCEDURE PROC_AGGR_EXP_CTR@

CREATE PROCEDURE PROC_AGGR_EXP_CTR LANGUAGE SQL
BEGIN
	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_CTR');

	FOR cn_code AS
		SELECT DISTINCT COUNTRY_CODE code
		  FROM CMS_COUNTRY_LIMIT WHERE STATUS <> 'DELETED'
	DO 
	
		INSERT INTO CMS_AGGR_EXP_CTR(CTR, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
		(SELECT CMS_BKG_COUNTRY, 'MYR', sum(CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' ))
			FROM CMS_LIMIT_EXPOSURE WHERE 		
			CMS_BKG_COUNTRY = cn_code.code 			
			GROUP BY CMS_BKG_COUNTRY		
		)
		;
		
	END FOR;
	
commit;
END@

------------------------------------
--- Exposure aggregate entity
------------------------------------
	
--DROP PROCEDURE PROC_AGGR_EXP_ENTITY@

CREATE PROCEDURE PROC_AGGR_EXP_ENTITY LANGUAGE SQL
BEGIN
DECLARE TOTAL_LMT_AMT	DECIMAL(20,2);
DECLARE LMT_AMT			DECIMAL(20,2);

	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_ENTITY');

	FOR cn_code AS
		SELECT DISTINCT CMS_LE_SUB_PROFILE_ID code
		  FROM CMS_ENTITY_LIMIT WHERE STATUS <> 'DELETED'
	DO 		
			
		SET TOTAL_LMT_AMT = 0;		
			
		--retrieve the CCI of the customer if any
		FOR cci_code AS
			SELECT CMS_LE_SUB_PROFILE_ID CODE FROM
			CMS_CCI_MAP WHERE CMS_CCI_NO IN 
				(SELECT CMS_CCI_NO FROM CMS_CCI_MAP WHERE CMS_LE_SUB_PROFILE_ID = cn_code.code AND IS_DELETED <> 'Y')
			AND IS_DELETED <> 'Y'
		DO 										
			
			SET LMT_AMT = (	SELECT sum( LMT_AMT ) FROM (
								SELECT CMS_LSP_APPR_LMTS_ID, 
											CONVERT_AMT( EXEMPTED_LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT		
								FROM CMS_LIMIT_EXPOSURE
								WHERE 							
								CMS_SUB_PROFILE_ID = cci_code.code
								AND IS_EXEMPTED_FAC in ( 'N', 'C' )		
								UNION
								SELECT L.CMS_LSP_APPR_LMTS_ID, 
										CONVERT_AMT( E.EXEMPTED_LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT			 		
								 		FROM SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
										WHERE 
											J.CMS_LE_SUB_PROFILE_ID = cci_code.code
											AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
											AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
											AND J.UPDATE_STATUS_IND <> 'D'
											AND	P.CMS_BCA_STATUS <> 'DELETED' 
											AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
											AND	L.LMT_TYPE_VALUE = 'OUTER' 	
											AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID
											AND IS_EXEMPTED_FAC in ( 'N', 'C' )		
								) temp
							GROUP BY cci_code.code ); 		
			
			IF LMT_AMT IS NULL THEN
				SET LMT_AMT = 0;
			END IF;
			
			SET TOTAL_LMT_AMT = TOTAL_LMT_AMT + LMT_AMT;					
			
		END FOR;	
		
		--if no CCI, get the limit amount of the customer only
        IF TOTAL_LMT_AMT = 0 THEN						
			
			SET LMT_AMT = (	SELECT sum( LMT_AMT ) FROM (
								SELECT CMS_LSP_APPR_LMTS_ID, 
											CONVERT_AMT( EXEMPTED_LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT		
								FROM CMS_LIMIT_EXPOSURE
								WHERE 							
								CMS_SUB_PROFILE_ID = cn_code.code
								AND IS_EXEMPTED_FAC in ( 'N', 'C' )		
								UNION
								SELECT L.CMS_LSP_APPR_LMTS_ID, 
										CONVERT_AMT( E.EXEMPTED_LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT			 		
								 		FROM SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
										WHERE 
											J.CMS_LE_SUB_PROFILE_ID = cn_code.code
											AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
											AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
											AND J.UPDATE_STATUS_IND <> 'D'
											AND	P.CMS_BCA_STATUS <> 'DELETED' 
											AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
											AND	L.LMT_TYPE_VALUE = 'OUTER' 	
											AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID
											AND IS_EXEMPTED_FAC in ( 'N', 'C' )		
								) temp
							GROUP BY cn_code.code ); 			
			
			SET TOTAL_LMT_AMT = TOTAL_LMT_AMT + LMT_AMT;
			
		END IF;
		
		IF TOTAL_LMT_AMT <> 0 THEN
			INSERT INTO CMS_AGGR_EXP_ENTITY( CMS_LE_SUB_PROFILE_ID, EXPOSURE_AMT_CURR, EXPOSURE_AMT )
			VALUES ( cn_code.code, 'MYR', TOTAL_LMT_AMT );
		END IF;
		
	END FOR;
	
commit;
	
END@
			
------------------------------------
--- Exposure aggregate sector
------------------------------------
	
--DROP PROCEDURE PROC_AGGR_EXP_POL@

CREATE PROCEDURE PROC_AGGR_EXP_POL LANGUAGE SQL
BEGIN
	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_POL');

	FOR cn_code AS
		SELECT DISTINCT LOAN_PURPOSE_CODE_VALUE code
		  FROM CMS_ECO_SECTOR_LIMIT WHERE STATUS <> 'DELETED'
	DO 
	
		INSERT INTO CMS_AGGR_EXP_POL(POL, BANK_ENTITY, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
		(
			SELECT cn_code.code, BANK_ENTITY, 'MYR', sum(CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR'))
			FROM CMS_LIMIT_EXPOSURE WHERE 		
			LMT_LOAN_SECTOR_VALUE = cn_code.code 			
			GROUP BY LMT_LOAN_SECTOR_VALUE, BANK_ENTITY		
		);
	END FOR;

commit;	
	
END@

------------------------------------
--- Exposure aggregate product type
------------------------------------
	
--DROP PROCEDURE PROC_AGGR_EXP_PROD_TYPE@

CREATE PROCEDURE PROC_AGGR_EXP_PROD_TYPE LANGUAGE SQL
BEGIN
	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_PROD_TYPE');

	FOR cn_code AS
		SELECT DISTINCT REFERENCE_CODE code
		  FROM CMS_PRODUCT_TYPE WHERE STATUS <> 'DELETED'   
	DO 
	
		INSERT INTO CMS_AGGR_EXP_PROD_TYPE(PROD_TYPE, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
		(
			SELECT cn_code.code, 'MYR', sum(CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR'))
			FROM CMS_LIMIT_EXPOSURE WHERE 		
			LMT_PRD_TYPE_VALUE = cn_code.code 			
			GROUP BY LMT_PRD_TYPE_VALUE
		);
	END FOR;

commit;	
	
END@

------------------------------------
--- Exposure bank wide bank entity 
------------------------------------

--DROP PROCEDURE PROC_AGGR_EXP_BW_BE@

CREATE PROCEDURE PROC_AGGR_EXP_BW_BE LANGUAGE SQL
BEGIN

	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_BW_BE');
	
	INSERT INTO CMS_AGGR_EXP_BW_BE(BANK_ENTITY, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
	(
		SELECT 'ABG', 'MYR', sum(CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR'))
		FROM CMS_LIMIT_EXPOSURE 	
	);
	
	FOR cn_code AS
		SELECT DISTINCT DESCRIPTION_CODE code
		  FROM CMS_INTERNAL_LIMIT_PARAMETER WHERE STATUS <> 'DELETED' 
		    AND DESCRIPTION_CODE <> 'ABG' 
	DO 

	INSERT INTO CMS_AGGR_EXP_BW_BE(BANK_ENTITY, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
	(
		SELECT cn_code.code, 'MYR', sum(CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR'))
		FROM CMS_LIMIT_EXPOSURE WHERE 		
		BANK_ENTITY = cn_code.code 			
		GROUP BY BANK_ENTITY		
	);
	END FOR;
	
	UPDATE CMS_INTERNAL_LIMIT_PARAMETER a SET (total_loan_adv_amt_cur_code, total_loan_adv_amt) =
	(
	    SELECT EXPOSURE_AMT_CURR, EXPOSURE_AMT
	    FROM CMS_AGGR_EXP_BW_BE
	    WHERE bank_entity = description_code
	);

	COMMIT;

END
@

-------------------------------------------
--- Exposure bank wide bank entity customer
-------------------------------------------

--DROP PROCEDURE PROC_AGGR_EXP_BW_BE_CUST@

CREATE PROCEDURE PROC_AGGR_EXP_BW_BE_CUST LANGUAGE SQL
BEGIN

	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_BW_BE_CUST');
	
	FOR cn_code AS
		SELECT DISTINCT DESCRIPTION_CODE code
		  FROM CMS_INTERNAL_LIMIT_PARAMETER WHERE STATUS <> 'DELETED'
	DO 

	INSERT INTO CMS_AGGR_EXP_BW_BE_CUST(CMS_LE_SUB_PROFILE_ID, BANK_ENTITY, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
	(
		SELECT CMS_SUB_PROFILE_ID, cn_code.code, 'MYR', sum(CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR'))
		FROM CMS_LIMIT_EXPOSURE CLE WHERE 
		CLE.CMS_SUB_PROFILE_ID = CMS_SUB_PROFILE_ID
		AND BANK_ENTITY = cn_code.code 			
		GROUP BY BANK_ENTITY, CMS_SUB_PROFILE_ID		
	);
	END FOR;

	COMMIT;

END
@


------------------------------------
--- Exposure aggregate group
------------------------------------

--DROP PROCEDURE PROC_AGGR_EXP_GRP@

CREATE PROCEDURE PROC_AGGR_EXP_GRP LANGUAGE SQL
BEGIN
DECLARE v_no_data 		SMALLINT DEFAULT 0;
DECLARE relMemberCnt	DECIMAL(20) ;
DECLARE PREV_GRP_ID		BIGINT;
DECLARE PREV_CUST_ID	BIGINT;

	CALL UTIL_TRUNCATE_TABLE('CMS_AGGR_EXP_GRP');
	CALL UTIL_TRUNCATE_TABLE('CMS_GROUP_CUSTOMER_TEMP');	
	
	-- START TO POPULATE  ALL THE CUSTOMERS BELONGS TO THE GROUP 
	
	-- add master group id and members
	INSERT INTO CMS_GROUP_CUSTOMER_TEMP(LE_ID, LE_ID_SOURCE, LEGAL_NAME, CMS_SUB_PROFILE_ID, GRP_ID, CATEGORY, CUST_REL_NUM, CUST_REL_VALUE)  
		SELECT LMP_LE_ID, SOURCE_ID, SCI_LE_SUB_PROFILE.LSP_SHORT_NAME, SCI_LE_SUB_PROFILE.CMS_LE_SUB_PROFILE_ID, MAIN_GROUP.GRP_ID, 'Master group member', 'GENT_REL', RELATION_NAME
		FROM CMS_GROUP_MEMBER, SCI_LE_SUB_PROFILE, SCI_LE_MAIN_PROFILE, CMS_CUST_GRP MAIN_GROUP
					    WHERE  
						CMS_GROUP_MEMBER.GRP_ID = MAIN_GROUP.GRP_ID
						AND CMS_GROUP_MEMBER.ENTITY_TYPE = 'CUSTOMER'       
						AND CMS_GROUP_MEMBER.STATUS <> 'DELETED'
                        AND MAIN_GROUP.STATUS <> 'DELETED'
						AND CMS_GROUP_MEMBER.ENTITY_ID = SCI_LE_SUB_PROFILE.CMS_LE_SUB_PROFILE_ID 
						AND SCI_LE_SUB_PROFILE.CMS_LE_MAIN_PROFILE_ID = SCI_LE_MAIN_PROFILE.CMS_LE_MAIN_PROFILE_ID;
						
	COMMIT;
	
	-- add sub group ID and members
	INSERT INTO CMS_GROUP_CUSTOMER_TEMP (LE_ID, LE_ID_SOURCE, LEGAL_NAME, CMS_SUB_PROFILE_ID, GRP_ID, SUB_GRP_ID, CATEGORY, 
	CUST_REL_NUM, CUST_REL_VALUE)  
		(SELECT SCI_LE_MAIN_PROFILE.LMP_LE_ID, SCI_LE_MAIN_PROFILE.SOURCE_ID, SCI_LE_SUB_PROFILE.LSP_SHORT_NAME, 
					SCI_LE_SUB_PROFILE.CMS_LE_SUB_PROFILE_ID, MAIN_GROUP.GRP_ID, CHILD.GRP_ID, 'Sub group member',
					'GENT_REL', CHILD.RELATION_NAME
		FROM CMS_GROUP_MEMBER PARENT, CMS_GROUP_MEMBER CHILD, SCI_LE_SUB_PROFILE, SCI_LE_MAIN_PROFILE, CMS_CUST_GRP MAIN_GROUP
					WHERE   
					PARENT.ENTITY_TYPE = 'GROUP' 
					AND PARENT.STATUS <> 'DELETED'
					AND CHILD.STATUS <> 'DELETED'
					AND MAIN_GROUP.STATUS <> 'DELETED'
					AND PARENT.GRP_ID = MAIN_GROUP.GRP_ID
				    AND PARENT.ENTITY_ID = CHILD.GRP_ID              
				    AND CHILD.ENTITY_ID = SCI_LE_SUB_PROFILE.CMS_LE_SUB_PROFILE_ID 
				    AND SCI_LE_SUB_PROFILE.CMS_LE_MAIN_PROFILE_ID = SCI_LE_MAIN_PROFILE.CMS_LE_MAIN_PROFILE_ID 
				    AND 
					   NOT EXISTS (SELECT '1' FROM CMS_GROUP_CUSTOMER_TEMP 
					   WHERE GRP_ID = MAIN_GROUP.GRP_ID
					   AND CMS_SUB_PROFILE_ID = CHILD.ENTITY_ID) );	
	COMMIT;
	
	-- add CCI
	INSERT INTO CMS_GROUP_CUSTOMER_TEMP(CMS_SUB_PROFILE_ID, GRP_ID, CATEGORY)  
		( SELECT DISTINCT C.CMS_LE_SUB_PROFILE_ID, CMS_GROUP_CUSTOMER_TEMP.GRP_ID, 'CCI'
			FROM CMS_CCI_MAP P, CMS_CCI_MAP C, CMS_GROUP_CUSTOMER_TEMP
			WHERE							
				CMS_GROUP_CUSTOMER_TEMP.CMS_SUB_PROFILE_ID = P.CMS_LE_SUB_PROFILE_ID
				AND CMS_GROUP_CUSTOMER_TEMP.CMS_SUB_PROFILE_ID <> C.CMS_LE_SUB_PROFILE_ID
				AND P.CMS_CCI_NO = C.CMS_CCI_NO     
				AND P.IS_DELETED <> 'Y'		
				AND C.IS_DELETED <> 'Y'								
				AND 
				NOT EXISTS (SELECT '1' FROM CMS_GROUP_CUSTOMER_TEMP T
					   WHERE T.GRP_ID = CMS_GROUP_CUSTOMER_TEMP.GRP_ID
					   AND T.CMS_SUB_PROFILE_ID =C.CMS_LE_SUB_PROFILE_ID ) );
	
	
		 
    COMMIT;
	
	-- add related member	   
	WHILE (v_no_data = 0) DO    
   
		SET PREV_CUST_ID = NULL;  
		SET PREV_GRP_ID = NULL;  
		
		SET relMemberCnt =( SELECT DISTINCT COUNT(*)
							FROM SCI_LE_REL,CMS_GROUP_CUSTOMER_TEMP TEMP_GROUP  
							WHERE SCI_LE_REL.PARENT_SUB_PROFILE_ID = TEMP_GROUP.CMS_SUB_PROFILE_ID 		
							AND STATUS = 'ACTIVE'
								 AND ( ( REL_VALUE = '8' AND PERCENT_OWN >= 20 ) 
								   OR REL_VALUE = '6'
								 OR REL_VALUE = '33' )
							AND 
							NOT EXISTS (SELECT '1' FROM CMS_GROUP_CUSTOMER_TEMP T
							   WHERE T.GRP_ID = TEMP_GROUP.GRP_ID
							   AND T.CMS_SUB_PROFILE_ID = SCI_LE_REL.CMS_LE_SUB_PROFILE_ID ) 
							);
							
		--INSERT INTO CMS_GROUP_CUSTOMER_TEMP(CATEGORY) VALUES ('debug related member count:'||char(relMemberCnt));
		
		IF (relMemberCnt > 0) THEN
		 									
			FOR REL_CUR AS
				SELECT DISTINCT CMS_LE_SUB_PROFILE_ID CUST_ID, TEMP_GROUP.GRP_ID GRP_ID, REL_NUM, REL_VALUE			
				FROM SCI_LE_REL R, CMS_GROUP_CUSTOMER_TEMP TEMP_GROUP  
				WHERE R.PARENT_SUB_PROFILE_ID = TEMP_GROUP.CMS_SUB_PROFILE_ID 		
				AND STATUS = 'ACTIVE'
					 AND ( ( REL_VALUE = '8' AND PERCENT_OWN >= 20 ) 
					   OR REL_VALUE = '6'
					 OR REL_VALUE = '33' ) 
				AND 
				NOT EXISTS (SELECT '1' FROM CMS_GROUP_CUSTOMER_TEMP t
				   WHERE t.GRP_ID = TEMP_GROUP.GRP_ID
				   AND t.CMS_SUB_PROFILE_ID = R.CMS_LE_SUB_PROFILE_ID ) 
				ORDER BY GRP_ID, CUST_ID
			DO 
				-- to avoid adding same customer who is shareholder or director of different members in the group
				IF ( PREV_GRP_ID IS NULL OR PREV_GRP_ID <> REL_CUR.GRP_ID )
					AND ( PREV_CUST_ID IS NULL OR PREV_CUST_ID <> REL_CUR.CUST_ID )
				THEN
					
					INSERT INTO CMS_GROUP_CUSTOMER_TEMP (CMS_SUB_PROFILE_ID, GRP_ID, CATEGORY, CUST_REL_NUM, CUST_REL_VALUE)  
					VALUES (
						REL_CUR.CUST_ID, REL_CUR.GRP_ID, 'Related Member', REL_CUR.REL_NUM, REL_CUR.REL_VALUE		
					);
				
				END IF;
				
				SET PREV_CUST_ID = REL_CUR.CUST_ID;  
				SET PREV_GRP_ID = REL_CUR.GRP_ID;  
			
			END FOR;
						
			--CCI of related members
			INSERT INTO CMS_GROUP_CUSTOMER_TEMP(CMS_SUB_PROFILE_ID, GRP_ID, CATEGORY)  
			( SELECT DISTINCT C.CMS_LE_SUB_PROFILE_ID, CMS_GROUP_CUSTOMER_TEMP.GRP_ID, 'Related CCI'
			FROM CMS_CCI_MAP P, CMS_CCI_MAP C, CMS_GROUP_CUSTOMER_TEMP
			WHERE							
				CMS_GROUP_CUSTOMER_TEMP.CMS_SUB_PROFILE_ID = P.CMS_LE_SUB_PROFILE_ID
				AND CMS_GROUP_CUSTOMER_TEMP.CMS_SUB_PROFILE_ID <> C.CMS_LE_SUB_PROFILE_ID
				AND P.CMS_CCI_NO = C.CMS_CCI_NO     
				AND P.IS_DELETED <> 'Y'		
				AND C.IS_DELETED <> 'Y'								
				AND 
				NOT EXISTS (SELECT '1' FROM CMS_GROUP_CUSTOMER_TEMP T
					   WHERE T.GRP_ID = CMS_GROUP_CUSTOMER_TEMP.GRP_ID
					   AND T.CMS_SUB_PROFILE_ID =C.CMS_LE_SUB_PROFILE_ID ) );
					   			
		ELSE 
			SET v_no_data = 1;
		END IF;

	END WHILE;  
	
	COMMIT;
	
	-- update customer is FI indicator
    UPDATE  CMS_GROUP_CUSTOMER_TEMP SET (FI_INDICATOR) =
		(SELECT CASE SCI_LE_MAIN_PROFILE.LMP_TYPE_VALUE 
                WHEN 'F' THEN 'Y'
                ELSE 'N' 
					END
		 FROM SCI_LE_MAIN_PROFILE, SCI_LE_SUB_PROFILE
		 WHERE  SCI_LE_SUB_PROFILE.CMS_LE_MAIN_PROFILE_ID = SCI_LE_MAIN_PROFILE.CMS_LE_MAIN_PROFILE_ID
		    AND SCI_LE_SUB_PROFILE.CMS_LE_SUB_PROFILE_ID = CMS_GROUP_CUSTOMER_TEMP.CMS_SUB_PROFILE_ID
		 );
	
	COMMIT;
	
	-- update is exempted customer
	UPDATE  CMS_GROUP_CUSTOMER_TEMP SET (EXEMPTED_INDICATOR) = 'Y'
	WHERE 
	EXISTS(
		SELECT '1' FROM CMS_EXEMPTED_INST_GP5 WHERE CMS_LE_SUB_PROFILE_ID = CMS_SUB_PROFILE_ID AND STATUS <> 'DELETED'
	);
	
	COMMIT;
	
	-- update is exempted customer for CCI
	UPDATE CMS_GROUP_CUSTOMER_TEMP g SET (EXEMPTED_INDICATOR) = 'Y'
	WHERE 
	EXISTS(
		SELECT '1'
			FROM CMS_CCI_MAP P, CMS_CCI_MAP C, CMS_GROUP_CUSTOMER_TEMP t
			WHERE							
				t.CMS_SUB_PROFILE_ID = P.CMS_LE_SUB_PROFILE_ID
				AND g.CMS_SUB_PROFILE_ID = C.CMS_LE_SUB_PROFILE_ID
				AND P.CMS_CCI_NO = C.CMS_CCI_NO     
				AND P.IS_DELETED <> 'Y'		
				AND C.IS_DELETED <> 'Y'	
                AND t.EXEMPTED_INDICATOR = 'Y'        
	)
	AND g.EXEMPTED_INDICATOR = 'N';
	
	COMMIT;
	
	--update customer LE ID, ID Source and legal name
	UPDATE CMS_GROUP_CUSTOMER_TEMP SET (LE_ID, LE_ID_SOURCE, LEGAL_NAME)=
	(SELECT SCI_LE_MAIN_PROFILE.LMP_LE_ID, SCI_LE_MAIN_PROFILE.SOURCE_ID, SCI_LE_SUB_PROFILE.LSP_SHORT_NAME
	 FROM SCI_LE_SUB_PROFILE, SCI_LE_MAIN_PROFILE
	 WHERE  SCI_LE_SUB_PROFILE.CMS_LE_MAIN_PROFILE_ID = SCI_LE_MAIN_PROFILE.CMS_LE_MAIN_PROFILE_ID
		   AND SCI_LE_SUB_PROFILE.CMS_LE_SUB_PROFILE_ID = CMS_GROUP_CUSTOMER_TEMP.CMS_SUB_PROFILE_ID
		   AND CMS_GROUP_CUSTOMER_TEMP.LE_ID IS NULL
	)
	WHERE CMS_GROUP_CUSTOMER_TEMP.LE_ID IS NULL;
	COMMIT;									  
		
		
	UPDATE CMS_GROUP_CUSTOMER_TEMP CUST_TEMP SET (CUST_TEMP.BUSINESS_SEC) = 
	(
		SELECT ISIC.LID_ISIC_CODE_VALUE 
			FROM SCI_LE_ISIC_DTL ISIC, 
			SCI_LE_MAIN_PROFILE MAIN, 
			SCI_LE_SUB_PROFILE SUB
			WHERE ISIC.LID_LE_ID = MAIN.LMP_LE_ID
			AND ISIC.CMS_LE_MAIN_PROFILE_ID = MAIN.CMS_LE_MAIN_PROFILE_ID
			AND MAIN.CMS_LE_MAIN_PROFILE_ID = SUB.CMS_LE_MAIN_PROFILE_ID
			AND SUB.CMS_LE_SUB_PROFILE_ID = CUST_TEMP.CMS_SUB_PROFILE_ID
	);
	
	COMMIT;
	
	-- START AGGREGATION OF EXPOSURE FOR GROUP DIMENTIONS
	
	-- aggregate group exposure 1, banking group, exclude exempted facility and customer					
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID, EXPOSURE_AMT_CURR, EXPOSURE_AMT)
	  ( SELECT GRP_ID, 'MYR', sum( LMT_AMT ) FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( EXEMPTED_LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT								 
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
					AND IS_EXEMPTED_FAC in ( 'N', 'C' )
					AND EXEMPTED_INDICATOR = 'N'				
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.EXEMPTED_LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT			 		
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 										
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID
						AND IS_EXEMPTED_FAC in ( 'N', 'C' )		
						AND EXEMPTED_INDICATOR = 'N'	
			) temp
		GROUP BY GRP_ID ); 
	
			
	COMMIT;
	
	-- AGGR_EXP -> Outstanding Amount should not excludes exempted facility and exempted institution
	UPDATE CMS_AGGR_EXP_GRP G SET (OUTSTANDING_AMT_CURR, OUTSTANDING_AMT)	
	= ( SELECT 'MYR', sum( OS_BAL ) FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( CMS_OUTSTANDING_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	OS_BAL								 
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID							
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.CMS_OUTSTANDING_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) OS_BAL			 		
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 										
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID						
			) temp
		WHERE temp.GRP_ID = G.GROUP_ID
		GROUP BY GRP_ID ); 		
	
	COMMIT;
	
	-- update total booked amount to exposure group table, exclude exempted institution
	UPDATE CMS_AGGR_EXP_GRP G SET (LIMIT_BOOKED_CURR, LIMIT_BOOKED_AMT)
		= (SELECT 'MYR', sum(temp.LIMIT_BOOKED_AMT) 		
 		FROM 
		(   -- query limit book amount for group
			SELECT GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE			
				AND ( ( B.CMS_LE_SUB_PROFILE_ID IS NOT NULL	
							AND B.CMS_LE_SUB_PROFILE_ID NOT IN ( SELECT CMS_LE_SUB_PROFILE_ID FROM CMS_EXEMPTED_INST_GP5 WHERE STATUS <> 'DELETED') ) 
						OR 	B.CMS_LE_SUB_PROFILE_ID IS NULL	)			
			UNION -- query limit book amount for all the members of the group
            SELECT GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b 
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 						
				AND EXEMPTED_INDICATOR = 'N'
			UNION -- query limit book amount for sub group 
			SELECT P.GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D, CMS_GROUP_CUSTOMER_TEMP P 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE			
				AND ( ( B.CMS_LE_SUB_PROFILE_ID IS NOT NULL	
							AND b.CMS_LE_SUB_PROFILE_ID NOT IN ( SELECT CMS_LE_SUB_PROFILE_ID FROM CMS_EXEMPTED_INST_GP5 WHERE STATUS <> 'DELETED') ) 
						OR 	B.CMS_LE_SUB_PROFILE_ID IS NULL	)					
				AND t.GRP_ID = P.SUB_GRP_ID 
				AND P.SUB_GRP_ID IS NOT NULL
			UNION -- query limit book amount for all the members in the sub group
			SELECT P.GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b, CMS_GROUP_CUSTOMER_TEMP P
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 						
				AND T.EXEMPTED_INDICATOR = 'N'
				AND t.GRP_ID = P.SUB_GRP_ID  
				AND P.SUB_GRP_ID IS NOT NULL	
		) temp 
		WHERE temp.GRP_ID = G.GROUP_ID	
		GROUP BY GRP_ID);			
				
	COMMIT;		
	
	-- aggregate group exposure 2, banking group, includes all facility and customer
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID, EXPOSURE_AMT_CURR, EXPOSURE_AMT, OUTSTANDING_AMT_CURR, OUTSTANDING_AMT, 
									IS_EXEMPTED_INST)	
	( SELECT GRP_ID, 'MYR', sum( LMT_AMT ), 'MYR', sum( OS_BAL ), 'Y' FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					CONVERT_AMT( CMS_OUTSTANDING_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	OS_BAL		
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID							
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					CONVERT_AMT( E.CMS_OUTSTANDING_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) OS_BAL							
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 							
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID						
			) temp
		GROUP BY GRP_ID ); 
		
	COMMIT;
	
	-- update total booked amount to exposure group table, include exempted institution
	UPDATE CMS_AGGR_EXP_GRP G SET (LIMIT_BOOKED_CURR, LIMIT_BOOKED_AMT)
		= (SELECT 'MYR', sum(temp.LIMIT_BOOKED_AMT) 		
 		FROM 
		(   -- query limit book amount for group
			SELECT GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE										
			UNION -- query limit book amount for all the members of the group
            SELECT GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b 
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 						
			UNION -- query limit book amount for sub group 
			SELECT P.GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D, CMS_GROUP_CUSTOMER_TEMP P 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE									
				AND t.GRP_ID = P.SUB_GRP_ID 
				AND P.SUB_GRP_ID IS NOT NULL
			UNION -- query limit book amount for all the members in the sub group
			SELECT P.GRP_ID, b.LMT_BK_ID, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b, CMS_GROUP_CUSTOMER_TEMP P
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 						
				AND t.GRP_ID = P.SUB_GRP_ID  
				AND P.SUB_GRP_ID IS NOT NULL	
		) temp 
		WHERE temp.GRP_ID = G.GROUP_ID		
		GROUP BY GRP_ID)
	WHERE 		
	G.IS_EXEMPTED_INST IS NOT NULL 
	AND G.IS_EXEMPTED_INST = 'Y'
	AND G.LIMIT_BOOKED_AMT IS NULL
	;			
				
	COMMIT;		
	
	-- aggregate group exposure 3, is exempted inst = Y, FI ind = Y, includes all facility (exempted or non exempted)
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID,EXPOSURE_AMT_CURR,EXPOSURE_AMT, IS_EXEMPTED_INST, FI_INDICATOR)	
	( SELECT GRP_ID, 'MYR', sum( LMT_AMT ), 'Y', FI_INDICATOR FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					T.FI_INDICATOR					
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID				
					AND EXEMPTED_INDICATOR = 'Y'		
					AND FI_INDICATOR = 'Y'				
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT,
					T.FI_INDICATOR					
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 							
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID						
						AND EXEMPTED_INDICATOR = 'Y'		
						AND FI_INDICATOR = 'Y'	
			) temp
		GROUP BY GRP_ID, FI_INDICATOR ); 
		
	COMMIT;
	
	-- aggregate group exposure 4, is exempted inst = N, FI ind = Y
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID,EXPOSURE_AMT_CURR,EXPOSURE_AMT, IS_EXEMPTED_INST, FI_INDICATOR)	
	( SELECT GRP_ID, 'MYR', sum( LMT_AMT ), 'N', FI_INDICATOR FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( EXEMPTED_LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					T.FI_INDICATOR					
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
					AND IS_EXEMPTED_FAC in ( 'N', 'C' )
					AND EXEMPTED_INDICATOR = 'N'		
					AND FI_INDICATOR = 'Y'			
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.EXEMPTED_LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT,
					T.FI_INDICATOR					
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 							
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID
						AND IS_EXEMPTED_FAC in ( 'N', 'C' )
						AND EXEMPTED_INDICATOR = 'N'		
						AND FI_INDICATOR = 'Y'
			) temp
		GROUP BY GRP_ID, FI_INDICATOR ); 
		
	COMMIT;
	
	-- aggregate group exposure 5, is exempted inst = N, FI ind = N
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID,EXPOSURE_AMT_CURR,EXPOSURE_AMT, IS_EXEMPTED_INST, FI_INDICATOR)	
	( SELECT GRP_ID, 'MYR', sum( LMT_AMT ), 'N', FI_INDICATOR FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( EXEMPTED_LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					T.FI_INDICATOR					
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
					AND IS_EXEMPTED_FAC in ( 'N', 'C' )
					AND EXEMPTED_INDICATOR = 'N'		
					AND FI_INDICATOR = 'N'				
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.EXEMPTED_LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT,
					T.FI_INDICATOR					
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 							
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID
						AND IS_EXEMPTED_FAC in ( 'N', 'C' )
						AND EXEMPTED_INDICATOR = 'N'		
						AND FI_INDICATOR = 'N'	
			) temp
		GROUP BY GRP_ID, FI_INDICATOR ); 
		
	COMMIT;
			
	-- update Contingent Liabilities to exposure group table
	UPDATE CMS_AGGR_EXP_GRP g SET (CONTG_LIAB_CURR, CONTG_LIAB_AMT) =
	( SELECT 'MYR', sum(CONVERT_AMT( GRT.GUARANTEE_AMT, GRT.CURRENCY_CODE, 'MYR' )  )  
		FROM  CMS_SECURITY SEC,
				CMS_GUARANTEE GRT,
				SCI_PLEDGOR_DTL PLEDGOR_DTL,
				SCI_SEC_PLDGR_MAP PLEDGOR_MAP,
				CMS_GROUP_CUSTOMER_TEMP t				  
			WHERE SEC.SCI_SECURITY_TYPE_VALUE =  'GT' 
					AND SEC.CMS_COLLATERAL_ID = GRT.CMS_COLLATERAL_ID
					AND SEC.CMS_COLLATERAL_ID = PLEDGOR_MAP.CMS_COLLATERAL_ID
					AND PLEDGOR_DTL.CMS_PLEDGOR_DTL_ID = PLEDGOR_MAP.CMS_PLEDGOR_DTL_ID 
					AND PLEDGOR_DTL.PLG_LE_ID = T.LE_ID
					AND PLEDGOR_DTL.SOURCE_ID = T.LE_ID_SOURCE
					AND SEC.STATUS <> 'DELETED'
					AND PLEDGOR_DTL.UPDATE_STATUS_IND <> 'D'
					AND PLEDGOR_MAP.UPDATE_STATUS_IND <> 'D'		
					and t.GRP_ID = g.GROUP_ID 		
					GROUP BY GRP_ID
	);		
		
	COMMIT;				
	
							
	-- aggregate group exposure 6, by bank entity
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID, EXPOSURE_AMT_CURR, EXPOSURE_AMT, BANK_ENTITY, IS_EXEMPTED_INST, 
									LIMIT_BOOKED_CURR, LIMIT_BOOKED_AMT)	
	( SELECT GRP_ID, 'MYR', sum( LMT_AMT ), BANK_ENTITY, 'N', 'MYR', sum( LIMIT_BOOKED_AMT ) FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( EXEMPTED_LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					L.BANK_ENTITY, 0 LIMIT_BOOKED_AMT
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
					AND IS_EXEMPTED_FAC in ( 'N', 'C' )
					AND EXEMPTED_INDICATOR = 'N'				
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.EXEMPTED_LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT,
					E.BANK_ENTITY, 0 LIMIT_BOOKED_AMT				
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 							
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID
						AND IS_EXEMPTED_FAC in ( 'N', 'C' )
						AND EXEMPTED_INDICATOR = 'N'	
			UNION  -- query limit book amount for group
			SELECT GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE			
				AND ( ( B.CMS_LE_SUB_PROFILE_ID IS NOT NULL	
							AND B.CMS_LE_SUB_PROFILE_ID NOT IN ( SELECT CMS_LE_SUB_PROFILE_ID FROM CMS_EXEMPTED_INST_GP5 WHERE STATUS <> 'DELETED') ) 
						OR 	B.CMS_LE_SUB_PROFILE_ID IS NULL	)			
			UNION -- query limit book amount for all the members of the group
            SELECT GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b 
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 						
				AND EXEMPTED_INDICATOR = 'N'
			UNION -- query limit book amount for sub group 
			SELECT P.GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D, CMS_GROUP_CUSTOMER_TEMP P 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE			
				AND ( ( B.CMS_LE_SUB_PROFILE_ID IS NOT NULL	
							AND b.CMS_LE_SUB_PROFILE_ID NOT IN ( SELECT CMS_LE_SUB_PROFILE_ID FROM CMS_EXEMPTED_INST_GP5 WHERE STATUS <> 'DELETED') ) 
						OR 	B.CMS_LE_SUB_PROFILE_ID IS NULL	)					
				AND t.GRP_ID = P.SUB_GRP_ID 
				AND P.SUB_GRP_ID IS NOT NULL
			UNION -- query limit book amount for all the members in the sub group
			SELECT P.GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b, CMS_GROUP_CUSTOMER_TEMP P
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 						
				AND T.EXEMPTED_INDICATOR = 'N'
				AND t.GRP_ID = P.SUB_GRP_ID  
				AND P.SUB_GRP_ID IS NOT NULL			
			) temp
		GROUP BY GRP_ID, BANK_ENTITY ); 
		
	COMMIT;
	
	-- aggregate group exposure 7 by bank entity
	INSERT INTO CMS_AGGR_EXP_GRP(GROUP_ID, EXPOSURE_AMT_CURR, EXPOSURE_AMT, BANK_ENTITY, IS_EXEMPTED_INST, 
									LIMIT_BOOKED_CURR, LIMIT_BOOKED_AMT)	
	( SELECT GRP_ID, 'MYR', sum( LMT_AMT ), BANK_ENTITY, 'Y', 'MYR', sum( LIMIT_BOOKED_AMT ) FROM (
			SELECT t.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( LMT_AMT, LMT_CRRNCY_ISO_CODE, 'MYR' )	LMT_AMT,
					L.BANK_ENTITY, 0 LIMIT_BOOKED_AMT					
					FROM CMS_LIMIT_EXPOSURE l, CMS_GROUP_CUSTOMER_TEMP t
					WHERE 
					L.CMS_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID								
			UNION
			SELECT  T.GRP_ID GRP_ID, L.CMS_LSP_APPR_LMTS_ID, 
					CONVERT_AMT( E.LMT_AMT, E.LMT_CRRNCY_ISO_CODE, 'MYR' ) LMT_AMT,
					E.BANK_ENTITY, 0 LIMIT_BOOKED_AMT							
			 		FROM CMS_GROUP_CUSTOMER_TEMP T,	SCI_LSP_APPR_LMTS L, SCI_LSP_LMT_PROFILE P, SCI_LSP_JOINT_BORROWER J, CMS_LIMIT_EXPOSURE E
					WHERE 
						J.CMS_LE_SUB_PROFILE_ID = T.CMS_SUB_PROFILE_ID
						AND P.CMS_LSP_LMT_PROFILE_ID = L.CMS_LIMIT_PROFILE_ID
						AND J.CMS_LMP_LIMIT_PROFILE_ID = P.CMS_LSP_LMT_PROFILE_ID
						AND J.UPDATE_STATUS_IND <> 'D'
						AND	P.CMS_BCA_STATUS <> 'DELETED' 
						AND	L.CMS_LIMIT_STATUS <> 'DELETED' 
						AND	L.LMT_TYPE_VALUE = 'OUTER' 							
						AND L.CMS_LSP_APPR_LMTS_ID	= E.CMS_LSP_APPR_LMTS_ID			
			UNION  -- query limit book amount for group
			SELECT GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE								
			UNION -- query limit book amount for all the members of the group
            SELECT GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b 
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 					
			UNION -- query limit book amount for sub group 
			SELECT P.GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK B, CMS_LMT_BOOK_DTL D, CMS_GROUP_CUSTOMER_TEMP P 
				WHERE 			 
		        b.LMT_BK_ID = d.LMT_BK_ID 
		        AND d.BK_TYPE_CAT = 'BGEL'     
	            AND d.BK_SUB_TYPE_CAT = 'BANK'
		        AND b.BK_STATUS = 'B' 
				AND d.STATUS = 'B' 	
				AND CHAR(T.GRP_ID) = D.BK_TYPE_CODE											
				AND t.GRP_ID = P.SUB_GRP_ID 
				AND P.SUB_GRP_ID IS NOT NULL 
			UNION -- query limit book amount for all the members in the sub group
			SELECT P.GRP_ID, b.LMT_BK_ID, 0 LMT_AMT, b.BK_BANK_ENTITY BANK_ENTITY, 
						CONVERT_AMT( b.BK_AMT, b.BK_CURR, 'MYR' ) LIMIT_BOOKED_AMT 
				FROM CMS_GROUP_CUSTOMER_TEMP T, CMS_LMT_BOOK b, CMS_GROUP_CUSTOMER_TEMP P
				WHERE 
				t.CMS_SUB_PROFILE_ID = b.CMS_LE_SUB_PROFILE_ID 
				AND BK_STATUS = 'B' 								
				AND t.GRP_ID = P.SUB_GRP_ID  
				AND P.SUB_GRP_ID IS NOT NULL							
			) temp
		GROUP BY GRP_ID, BANK_ENTITY ); 
		
	COMMIT;
	
	-- update Contingent Liabilities to exposure group table
	UPDATE CMS_AGGR_EXP_GRP g SET (CONTG_LIAB_CURR, CONTG_LIAB_AMT) =
	  ( SELECT 'MYR', sum(CONVERT_AMT( GRT.GUARANTEE_AMT, GRT.CURRENCY_CODE, 'MYR' )  )
		FROM  CMS_SECURITY SEC,
				CMS_GUARANTEE GRT,
				SCI_PLEDGOR_DTL PLEDGOR_DTL,
				SCI_SEC_PLDGR_MAP PLEDGOR_MAP,
				CMS_GROUP_CUSTOMER_TEMP t				  
			WHERE SEC.SCI_SECURITY_TYPE_VALUE =  'GT' 
					AND SEC.CMS_COLLATERAL_ID = GRT.CMS_COLLATERAL_ID
					AND SEC.CMS_COLLATERAL_ID = PLEDGOR_MAP.CMS_COLLATERAL_ID
					AND PLEDGOR_DTL.CMS_PLEDGOR_DTL_ID = PLEDGOR_MAP.CMS_PLEDGOR_DTL_ID 
					AND PLEDGOR_DTL.PLG_LE_ID = T.LE_ID
					AND PLEDGOR_DTL.SOURCE_ID = T.LE_ID_SOURCE
					AND SEC.STATUS <> 'DELETED'
					AND PLEDGOR_DTL.UPDATE_STATUS_IND <> 'D'
					AND PLEDGOR_MAP.UPDATE_STATUS_IND <> 'D'
					and t.GRP_ID = g.GROUP_ID
					AND GET_BANK_ENTITY( SEC.SECURITY_ORGANISATION ) = g.BANK_ENTITY 		
					GROUP BY GRP_ID, BANK_ENTITY )
	WHERE 
	g.CONTG_LIAB_AMT IS NULL
	AND BANK_ENTITY IS NOT NULL;
					
	COMMIT;	
	
END@

--DROP PROCEDURE PROC_POPULATE_LIMIT_GRP@

CREATE PROCEDURE PROC_POPULATE_LIMIT_GRP LANGUAGE SQL
BEGIN

	DECLARE COUNTER	DECIMAL (6); 
	CALL UTIL_TRUNCATE_TABLE('CMS_LIMIT_GRP_AGGR');

	INSERT INTO CMS_LIMIT_GRP_AGGR 
	( CMS_LSP_APPR_LMTS_ID, CMS_SUB_PROFILE_ID, 
		LMT_LOAN_SECTOR_VALUE, CMS_BKG_COUNTRY, 
		CMS_BKG_ORGANISATION, BANK_ENTITY, 
		LMT_CRRNCY_ISO_CODE, LMT_AMT, 
		CMS_OUTSTANDING_AMT, LMT_PRD_TYPE_VALUE, 
		SOURCE_ID, DISBURSED_IND,
		CMS_DRAWING_AMT, LMT_ID, 
		LMT_OMNIBUS_IND, LMT_OUTER_LMT_ID, 
		CMS_OUTER_LMT_REF, LMT_TYPE_VALUE, GRP_ID)
	(  SELECT DISTINCT CMS_LSP_APPR_LMTS_ID, p.CMS_CUSTOMER_ID, 
				LMT_LOAN_SECTOR_VALUE, CMS_BKG_COUNTRY, 
				CMS_BKG_ORGANISATION, GET_BANK_ENTITY( CMS_BKG_ORGANISATION ),
				LMT_CRRNCY_ISO_CODE, LMT_AMT, 
				CMS_OUTSTANDING_AMT, LMT_PRD_TYPE_VALUE, 
				l.SOURCE_ID, DISBURSED_IND,
				CMS_DRAWING_LIMIT, LMT_ID, 
				LMT_OMNIBUS_IND, LMT_OUTER_LMT_ID, 
				CMS_OUTER_LMT_REF, LMT_TYPE_VALUE, GRP_ID
		FROM SCI_LSP_APPR_LMTS l, SCI_LSP_LMT_PROFILE p, CMS_GROUP_CUSTOMER_TEMP t
		WHERE 
		p.CMS_LSP_LMT_PROFILE_ID = l.CMS_LIMIT_PROFILE_ID
		AND	p.CMS_BCA_STATUS <> 'DELETED' 
		AND	l.CMS_LIMIT_STATUS <> 'DELETED' 
		AND p.CMS_CUSTOMER_ID = t.CMS_SUB_PROFILE_ID
		UNION
		SELECT DISTINCT CMS_LSP_APPR_LMTS_ID, t.CMS_SUB_PROFILE_ID AS CMS_CUSTOMER_ID, 
				LMT_LOAN_SECTOR_VALUE, CMS_BKG_COUNTRY, 
				CMS_BKG_ORGANISATION, GET_BANK_ENTITY( CMS_BKG_ORGANISATION ),
				LMT_CRRNCY_ISO_CODE, LMT_AMT, 
				CMS_OUTSTANDING_AMT, LMT_PRD_TYPE_VALUE, 
				l.SOURCE_ID, DISBURSED_IND,
				CMS_DRAWING_LIMIT, LMT_ID, 
				LMT_OMNIBUS_IND, LMT_OUTER_LMT_ID, 
				CMS_OUTER_LMT_REF, LMT_TYPE_VALUE, GRP_ID
		FROM SCI_LSP_APPR_LMTS l, SCI_LSP_LMT_PROFILE p, CMS_GROUP_CUSTOMER_TEMP t, SCI_LSP_JOINT_BORROWER s
		WHERE 
		p.CMS_LSP_LMT_PROFILE_ID = l.CMS_LIMIT_PROFILE_ID
		AND	p.CMS_BCA_STATUS <> 'DELETED' 
		AND	l.CMS_LIMIT_STATUS <> 'DELETED' 
		AND p.CMS_LSP_LMT_PROFILE_ID = s.CMS_LMP_LIMIT_PROFILE_ID
		AND s.CMS_LE_SUB_PROFILE_ID = t.CMS_SUB_PROFILE_ID
	);						
			
	COMMIT;
			 
	UPDATE  CMS_LIMIT_GRP_AGGR SET (LMT_AMT, EXEMPTED_LMT_AMT) = (0, 0)
	WHERE LMT_AMT < 0;
	
	COMMIT;
	
	UPDATE  CMS_LIMIT_GRP_AGGR SET (IS_EXEMPTED_FAC) = ('Y')
	WHERE 
	EXISTS(
		SELECT '1' FROM CMS_EXEMPT_FACILITY WHERE FACILITY_STATUS_EXEMPTED = 'E' AND FACILITY_CODE = LMT_PRD_TYPE_VALUE AND STATUS <> 'DELETED'
	);
	
	COMMIT;

	UPDATE  CMS_LIMIT_GRP_AGGR SET (EXEMPTED_LMT_AMT, IS_EXEMPTED_FAC) = 
	( SELECT LMT_AMT*CONDITIONAL_PERCENT/100 , FACILITY_STATUS_EXEMPTED
		FROM CMS_EXEMPT_FACILITY e WHERE FACILITY_STATUS_EXEMPTED = 'C' AND FACILITY_CODE = LMT_PRD_TYPE_VALUE AND STATUS <> 'DELETED' )
	WHERE EXISTS (
		SELECT '1' FROM CMS_EXEMPT_FACILITY WHERE FACILITY_STATUS_EXEMPTED = 'C' AND FACILITY_CODE = LMT_PRD_TYPE_VALUE AND STATUS <> 'DELETED'
	);
	
	COMMIT;
	
	SET COUNTER = 0;
	
	FOR group_code AS
		SELECT DISTINCT GRP_ID grp_id
		  FROM CMS_LIMIT_GRP_AGGR
	DO 
		
		FOR group_code2 AS 
			SELECT LMT_ID FROM CMS_LIMIT_GRP_AGGR
			WHERE GRP_ID = group_code.grp_id
			AND LMT_TYPE_VALUE = 'OUTER'
			ORDER BY GRP_ID, CMS_SUB_PROFILE_ID, LMT_PRD_TYPE_VALUE
		
		DO
			SET COUNTER = COUNTER + 1;
			UPDATE CMS_LIMIT_GRP_AGGR A SET 
			SEQ_NO = replace(replace(rtrim(ltrim(replace(char(COUNTER), '0', ' '))), ' ', '0'), '.', '') 
			WHERE GRP_ID = group_code.grp_id
			AND LMT_ID = group_code2.LMT_ID;
		
		END FOR;
		
		SET COUNTER = 0;
	END FOR;
	
	COMMIT;
	
	FOR lmt AS
		SELECT DISTINCT A.LMT_ID, A.CMS_LSP_APPR_LMTS_ID, A.SEQ_NO, A.GRP_ID
		FROM CMS_LIMIT_GRP_AGGR A, CMS_LIMIT_GRP_AGGR B
		WHERE B.SEQ_NO IS NULL 
		AND B.LMT_TYPE_VALUE <> 'OUTER'
		AND B.LMT_OUTER_LMT_ID IS NOT NULL
		AND A.LMT_ID = B.CMS_OUTER_LMT_REF
		AND A.CMS_LSP_APPR_LMTS_ID = B.LMT_OUTER_LMT_ID
		ORDER BY A.GRP_ID, A.LMT_ID
	DO
		SET COUNTER = 0;
		FOR lmt2 AS
			SELECT ID FROM CMS_LIMIT_GRP_AGGR
			WHERE CMS_OUTER_LMT_REF = lmt.LMT_ID
			AND LMT_OUTER_LMT_ID = lmt.CMS_LSP_APPR_LMTS_ID
			AND lmt.GRP_ID = GRP_ID
			
		DO
			SET COUNTER = COUNTER + 1;
			UPDATE CMS_LIMIT_GRP_AGGR SET
			SEQ_NO = lmt.SEQ_NO ||'.'||replace(replace(rtrim(ltrim(replace(char(COUNTER), '0', ' '))), ' ', '0'), '.', '') 
			WHERE ID = lmt2.ID;
		END FOR;
	END FOR;
	
	COMMIT;
			
END@

--DROP PROCEDURE PROC_POPULATE_COL_GRP@

CREATE PROCEDURE PROC_POPULATE_COL_GRP LANGUAGE SQL
BEGIN

	CALL UTIL_TRUNCATE_TABLE('CMS_COL_GRP_AGGR');

	-- Populate collateral 
	INSERT INTO CMS_COL_GRP_AGGR 
	( CMS_LSP_APPR_LMTS_ID, CMS_SUB_PROFILE_ID, 
		CMS_COLLATERAL_ID, TYPE_NAME,
		SUBTYPE_NAME, OMV_CURR,
		OMV_AMT, GRP_ID)
	(  SELECT L.CMS_LSP_APPR_LMTS_ID, L.CMS_SUB_PROFILE_ID, 
				C.CMS_COLLATERAL_ID, C.TYPE_NAME,
				C.SUBTYPE_NAME, C.CMV_CURRENCY, 
				C.CMV, L.GRP_ID
		FROM CMS_LIMIT_GRP_AGGR L, CMS_SECURITY C, CMS_LIMIT_SECURITY_MAP M
		WHERE 
		L.CMS_LSP_APPR_LMTS_ID = M.CMS_LSP_APPR_LMTS_ID
		AND	M.CMS_COLLATERAL_ID = C.CMS_COLLATERAL_ID 
		AND	C.STATUS <> 'DELETED'
	);	

	COMMIT;

END
@

--DROP PROCEDURE PROC_AGGR_EXP_ALL@

CREATE PROCEDURE PROC_AGGR_EXP_ALL
	LANGUAGE SQL
BEGIN 
	
	CALL PROC_POPULATE_EXPOSURE;
	CALL PROC_AGGR_EXP_CTR;
	CALL PROC_AGGR_EXP_ENTITY;
	CALL PROC_AGGR_EXP_POL;
	CALL PROC_AGGR_EXP_PROD_TYPE;
	CALL PROC_AGGR_EXP_BW_BE;
    CALL PROC_AGGR_EXP_BW_BE_CUST;
	CALL PROC_AGGR_EXP_GRP;
	CALL PROC_POPULATE_LIMIT_GRP;
	CALL PROC_POPULATE_COL_GRP;
	
END@

/*********************************************************************
   Build : GEMS_R1.0_B001V1
   Type  : Schema Patch for CCI
   Date  : 24/01/2008
   Owner : Jitu
   Patch : Schema Patch for CCI
*********************************************************************/


CREATE TABLE CMS_CCI_MAP  (
        CCI_MAP_ID BIGINT NOT NULL,
        CMS_CCI_NO BIGINT NOT NULL ,
        CMS_LE_SUB_PROFILE_ID BIGINT ,
        VERSION_TIME BIGINT,
        IS_DELETED CHAR(1),
        CCI_REF_ID BIGINT
   )
IN CMS_DATA;

CREATE TABLE CMS_STAGE_CCI_MAP  (
         CCI_MAP_ID BIGINT NOT NULL,
         CMS_CCI_NO BIGINT NOT NULL ,
         CMS_LE_SUB_PROFILE_ID BIGINT ,
         VERSION_TIME BIGINT,
         IS_DELETED CHAR(1),
         CCI_REF_ID BIGINT
   )
IN CMS_DATA;

CREATE SEQUENCE "CMS_CCI_MAP_SEQ" AS INTEGER
 MINVALUE 1 MAXVALUE 999999
 START WITH 1 INCREMENT BY 1
 NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "CMS_CCI_NO_SEQ" AS INTEGER
 MINVALUE 1 MAXVALUE 999999
 START WITH 1 INCREMENT BY 1
 NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "CCI_REF_ID_SEQ" AS INTEGER
 MINVALUE 1 MAXVALUE 999999
 START WITH 1 INCREMENT BY 1
 NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "CCI_REF_ID_STG_SEQ" AS INTEGER
 MINVALUE 1 MAXVALUE 999999
 START WITH 1 INCREMENT BY 1
 NO CACHE CYCLE NO ORDER;
 
-------------------------------------------------------
-- LMS-Standard Code - Internal Limit Parameter
-- Author: Priya
-- 28 March 2008
-------------------------------------------------------

--DROP TABLE CMS_INTERNAL_LIMIT_PARAMETER;
--DROP TABLE CMS_STAGE_INTERNAL_LIMIT_PARAMETER;
--DROP SEQUENCE CMS_INTERNAL_LIMIT_PARAMETER_SEQ;
--DROP SEQUENCE CMS_STG_INTERNAL_LIMIT_PARAMETER_SEQ;

CREATE TABLE CMS_INTERNAL_LIMIT_PARAMETER
(
	INT_LIMIT_PARAM_ID				BIGINT       NOT NULL,
	DESCRIPTION_CODE				VARCHAR(40),
	CAP_FUND_AMT_CUR_CODE			VARCHAR(3),			
	CAP_FUND_AMT					DECIMAL(20,0),
	TOTAL_LOAN_ADV_AMT_CUR_CODE		VARCHAR(3),	
	TOTAL_LOAN_ADV_AMT  			DECIMAL(15,0),
	GP5_LIM_PERCENTAGE 				DECIMAL(5,2),
	INT_LIM_PERCENTAGE				DECIMAL(5,2),
	GROUP_ID						BIGINT,
	CMS_REF_ID						BIGINT,
	STATUS							VARCHAR(20),
	VERSION_TIME        			BIGINT,
	PRIMARY KEY(INT_LIMIT_PARAM_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE TABLE CMS_STAGE_INTERNAL_LIMIT_PARAMETER
(
	INT_LIMIT_PARAM_ID				BIGINT       NOT NULL,
	DESCRIPTION_CODE				VARCHAR(40),
	CAP_FUND_AMT_CUR_CODE			VARCHAR(3),			
	CAP_FUND_AMT					DECIMAL(20,0),
	TOTAL_LOAN_ADV_AMT_CUR_CODE		VARCHAR(3),	
	TOTAL_LOAN_ADV_AMT  			DECIMAL(15,0),
	GP5_LIM_PERCENTAGE 				DECIMAL(5,2),
	INT_LIM_PERCENTAGE				DECIMAL(5,2),
	GROUP_ID						BIGINT,
	CMS_REF_ID						BIGINT,
	STATUS							VARCHAR(20),
	VERSION_TIME        			BIGINT,
	PRIMARY KEY(INT_LIMIT_PARAM_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE SEQUENCE CMS_INTERNAL_LIMIT_PARAMETER_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER;   

CREATE SEQUENCE CMS_STG_INTERNAL_LIMIT_PARAMETER_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 
	 
/*********************************************************************
	Build : GEMS_R1.0_B001V89
	Type : DB patches Customer Relationship
	Date : Wednesday, February 27, 2008 3:36 PM
	Owner : Lini
	Patch : DB Patch for Build# B001V89(Shareholder/ Relationship table)
*********************************************************************/
-- ShareHolder/Related Party Table Schema
CREATE TABLE SCI_LE_REL ( 
    SCI_LE_REL_ID       	BIGINT NOT NULL,
    PARENT_SUB_PROFILE_ID	BIGINT NOT NULL,
    CMS_LE_SUB_PROFILE_ID   BIGINT NOT NULL,
    REL_NUM             	VARCHAR(40),
    REL_VALUE           	VARCHAR(40),
    PERCENT_OWN         	DECIMAL(20,2),
    VERSION_TIME        	BIGINT,
    REMARK              	VARCHAR(100),
	CMS_REF_ID				BIGINT,
    LAST_MODIFIED_DATE    	TIMESTAMP,
    LAST_MODIFIED_USER   	VARCHAR(50),
    PRIMARY KEY(SCI_LE_REL_ID)
) IN "CMS_DATA";

CREATE INDEX SCI_LE_REL_IND2
    ON SCI_LE_REL(CMS_LE_SUB_PROFILE_ID)
    PCTFREE 10
    MINPCTUSED 10
    ALLOW REVERSE SCANS ;
	
CREATE INDEX SCI_LE_REL_IND1
    ON SCI_LE_REL(PARENT_SUB_PROFILE_ID)
    CLUSTER 
    PCTFREE 10
    MINPCTUSED 10
    ALLOW REVERSE SCANS ;


-- ShareHolder/Related Party Stage Table Schema
CREATE TABLE STAGE_LE_REL ( 
    SCI_LE_REL_ID        BIGINT NOT NULL,
    PARENT_SUB_PROFILE_ID BIGINT NOT NULL,
    CMS_LE_SUB_PROFILE_ID   BIGINT NOT NULL,
    REL_NUM              VARCHAR(40),
    REL_VALUE            VARCHAR(40),
    PERCENT_OWN          DECIMAL(20,2),
    VERSION_TIME         BIGINT,
    REMARK               VARCHAR(100),
    CMS_REF_ID    BIGINT,
    LAST_MODIFIED_DATE     TIMESTAMP,
    LAST_MODIFIED_USER    VARCHAR(50),
    PRIMARY KEY(SCI_LE_REL_ID)
) IN "CMS_DATA";

CREATE INDEX STG_LE_REL_IND2
    ON STAGE_LE_REL(CMS_LE_SUB_PROFILE_ID)
    PCTFREE 10
    MINPCTUSED 10
    ALLOW REVERSE SCANS ;
	
CREATE INDEX STG_LE_REL_IND1
    ON STAGE_LE_REL(PARENT_SUB_PROFILE_ID)
    CLUSTER 
    PCTFREE 10
    MINPCTUSED 10
    ALLOW REVERSE SCANS ;


/*********************************************************************
	Build : GEMS_R1.0_B001V89
	Type : DB patches for New SC Module
	Date : Wednesday, February 27, 2008 5:49 PM
	Owner : Lini
	Patch : [DB Patch for Build# B001V90 (Exempted Institution)] 
*********************************************************************/
CREATE TABLE CMS_EXEMPTED_INST_GP5 (
  EXEMPTED_INST_GP5_ID      BIGINT  NOT NULL,
  CMS_LE_SUB_PROFILE_ID  BIGINT,   
  CMS_REF_ID     BIGINT, 
  VERSION_TIME     BIGINT
  ) IN "CMS_DATA";
 

ALTER TABLE CMS_EXEMPTED_INST_GP5
ADD CONSTRAINT "EI_GP5_ID_PK" PRIMARY KEY
("EXEMPTED_INST_GP5_ID"); 
 
CREATE TABLE CMS_STAGE_EXEMPTED_INST_GP5 (
  EXEMPTED_INST_GP5_ID      BIGINT  NOT NULL,
  CMS_LE_SUB_PROFILE_ID  BIGINT,   
  CMS_REF_ID BIGINT, 
  VERSION_TIME   BIGINT
  ) IN "CMS_DATA";
  
ALTER TABLE CMS_STAGE_EXEMPTED_INST_GP5
ADD CONSTRAINT "EI_ST_GP5_ID_PK" PRIMARY KEY
("EXEMPTED_INST_GP5_ID"); 
 	


/*********************************************************************
	Build : GEMS_R1.0_B001V90
	Type : DB patches Group
	Date : Thursday, February 28, 2008 10:51 AM
	Owner : Jitendra Parida <jitendra@integrosys.com>
	Patch : DB Patch for Build# B001V90(Group Module)
*********************************************************************/

 

--  FOR GROUP  ***********************************

CREATE TABLE CMS_CUST_GRP (
        GRP_ID    BIGINT      NOT NULL,
        GRP_NAME  VARCHAR(150),
        GRP_TYPE  VARCHAR(40),
        ACCOUNT_MGMT    VARCHAR(40),
        GRP_ACC_MGR_ID BIGINT,
        GRP_COUNTRY     CHARACTER(3),
        GRP_CURRENCY    CHARACTER(3),
        BUSINESS_UNIT   VARCHAR(40),
        LAST_REVIEW_DATE      DATE,
        REMARKS   VARCHAR(4000),
        INTERNAL_LMT VARCHAR(10),
        GRP_LMT   DECIMAL(30,2),
        APPROVED_BY   VARCHAR(40),
        IS_MASTER_GRP   CHARACTER(1),
        STATUS    VARCHAR(10),
        VERSION_TIME    BIGINT,
        GRP_REF_ID      BIGINT,
        GRP_NO      BIGINT,
        GRP_ACC_MGR_CODE VARCHAR(20),
        IS_BGEL CHARACTER(1)
) IN "CMS_DATA";

ALTER TABLE CMS_CUST_GRP ADD CONSTRAINT  PK_GRP_ID PRIMARY KEY (GRP_ID);
      
CREATE TABLE CMS_STAGE_CUST_GRP  (
        GRP_ID    BIGINT      NOT NULL,
        GRP_NAME  VARCHAR(150),
        GRP_TYPE  VARCHAR(40),
        ACCOUNT_MGMT    VARCHAR(40),
        GRP_ACC_MGR_ID BIGINT,
        GRP_COUNTRY     CHARACTER(3),
        GRP_CURRENCY    CHARACTER(3),
        BUSINESS_UNIT VARCHAR(40),
        LAST_REVIEW_DATE      DATE,
        REMARKS   VARCHAR(4000),
        INTERNAL_LMT VARCHAR(10),
        GRP_LMT   DECIMAL(30,2),
        APPROVED_BY   VARCHAR(40),
        IS_MASTER_GRP   CHARACTER(1),
        STATUS    VARCHAR(10),
        VERSION_TIME    BIGINT,
        GRP_REF_ID      BIGINT,
        GRP_NO      BIGINT,
        GRP_ACC_MGR_CODE VARCHAR(20),
        IS_BGEL CHARACTER(1)
)  IN "CMS_DATA"; 

ALTER TABLE CMS_STAGE_CUST_GRP ADD CONSTRAINT  PK_STAGE_GRP_ID PRIMARY KEY (GRP_ID);

CREATE SEQUENCE "CMS_CUST_GRP_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;     

CREATE SEQUENCE "CMS_STAGE_CUST_GRP_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;

--  FOR GROUP GRADE ******************************

CREATE TABLE CMS_GRP_CREDIT_GRADE(
      GRP_CREDIT_GRADE_ID     BIGINT      NOT NULL,
      CREDIT_GRADE_TYPE VARCHAR(20),
      RATING      VARCHAR(20),
      RATING_DATE       DATE,
      EXP_TREND_RATING  VARCHAR(100),
      REASON            VARCHAR(100),
      STATUS            VARCHAR(10),
      VERSION_TIME      BIGINT,
      GRP_CREDIT_GRADE_REF_ID BIGINT,
      GRP_ID BIGINT 
) IN "CMS_DATA";

ALTER TABLE CMS_GRP_CREDIT_GRADE   ADD PRIMARY KEY (GRP_CREDIT_GRADE_ID);

CREATE TABLE CMS_STAGE_GRP_CREDIT_GRADE(
      GRP_CREDIT_GRADE_ID     BIGINT      NOT NULL,
      CREDIT_GRADE_TYPE       VARCHAR(20),
      RATING      VARCHAR(20),
      RATING_DATE       DATE,
      EXP_TREND_RATING  VARCHAR(100),
      REASON            VARCHAR(100),
      STATUS            VARCHAR(10),
      VERSION_TIME      BIGINT,
      GRP_CREDIT_GRADE_REF_ID BIGINT,
      GRP_ID BIGINT 
) IN "CMS_DATA";

ALTER TABLE CMS_STAGE_GRP_CREDIT_GRADE  ADD PRIMARY KEY (GRP_CREDIT_GRADE_ID);

CREATE SEQUENCE "CMS_GRP_CREDIT_GRADE_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;      

CREATE SEQUENCE "CMS_STAGE_GRP_CREDIT_GRADE_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;

--  FOR GROUP SUBLIMIT ***************************

CREATE TABLE CMS_GROUP_SUBLIMIT (
      GRP_SUBLIMIT_ID   BIGINT      NOT NULL,  
      SUB_LIMIT_TYPE    VARCHAR(40),
      LAST_REVIEW_DATE DATE,
      LIMIT_CURRENCY  VARCHAR(3),
      LIMIT_AMT  DECIMAL(30,2),
      REMARKS           VARCHAR(150),
      DESCRIPTION             VARCHAR(40),
      STATUS            VARCHAR(10),
      GRP_ID            BIGINT,
      GRP_SUBLIMIT_REF_ID     BIGINT
) IN "CMS_DATA";

ALTER TABLE CMS_GROUP_SUBLIMIT  ADD PRIMARY KEY (GRP_SUBLIMIT_ID);

CREATE TABLE CMS_STAGE_GROUP_SUBLIMIT (
      GRP_SUBLIMIT_ID   BIGINT      NOT NULL,  
      SUB_LIMIT_TYPE    VARCHAR(40),
      LAST_REVIEW_DATE DATE,
      LIMIT_CURRENCY  VARCHAR(3),
      LIMIT_AMT  DECIMAL(30,2),
      REMARKS           VARCHAR(150),
      DESCRIPTION             VARCHAR(40),
      STATUS            VARCHAR(10),
      GRP_ID            BIGINT,
      GRP_SUBLIMIT_REF_ID     BIGINT
) IN "CMS_DATA";

ALTER TABLE CMS_STAGE_GROUP_SUBLIMIT  ADD PRIMARY KEY (GRP_SUBLIMIT_ID);

CREATE SEQUENCE "CMS_GROUP_SUBLIMIT_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "CMS_STAGE_GROUP_SUBLIMIT_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;
      
-- FOR GROUP OTHER LIMIT ***********************
CREATE TABLE CMS_GROUP_OTRLIMIT (
      GRP_OTRLIMIT_ID   BIGINT      NOT NULL,  
      OTR_LIMIT_TYPE    VARCHAR(40),
      LAST_REVIEW_DATE DATE,
      LIMIT_CURRENCY  VARCHAR(3),
      LIMIT_AMT  DECIMAL(30,2),
      REMARKS           VARCHAR(150),
      DESCRIPTION             VARCHAR(40),
      STATUS            VARCHAR(10),
      GRP_ID            BIGINT,
      GRP_OTRLIMIT_REF_ID     BIGINT
) IN "CMS_DATA";

ALTER TABLE CMS_GROUP_OTRLIMIT  ADD PRIMARY KEY (GRP_OTRLIMIT_ID);

CREATE TABLE CMS_STAGE_GROUP_OTRLIMIT (
      GRP_OTRLIMIT_ID   BIGINT      NOT NULL,  
      OTR_LIMIT_TYPE    VARCHAR(40),
      LAST_REVIEW_DATE DATE,
      LIMIT_CURRENCY  VARCHAR(3),
      LIMIT_AMT  DECIMAL(30,2),
      REMARKS           VARCHAR(150),
      DESCRIPTION             VARCHAR(40),
      STATUS            VARCHAR(10),
      GRP_ID            BIGINT,
      GRP_OTRLIMIT_REF_ID     BIGINT
) IN "CMS_DATA";

ALTER TABLE CMS_STAGE_GROUP_OTRLIMIT  ADD PRIMARY KEY (GRP_OTRLIMIT_ID);

CREATE SEQUENCE "CMS_GROUP_OTRLIMIT_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "CMS_STAGE_GROUP_OTRLIMIT_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;      


--FOR GROUP MEMBER *****************************

CREATE TABLE CMS_GROUP_MEMBER (
       GRP_MEMBER_ID        BIGINT NOT NULL,
       ENTITY_ID     BIGINT ,
       ENTITY_TYPE          VARCHAR(10),
       RELATION_NAME        VARCHAR(40),
       PERCENT_OWNED      DECIMAL(5,2),
       REL_BOR_MEMBER_NAME VARCHAR(40),   
       STATUS         VARCHAR(10),
       GRP_ID        BIGINT,
       GRP_MEMBER_REF_ID  BIGINT
) IN "CMS_DATA";

ALTER TABLE CMS_GROUP_MEMBER  ADD PRIMARY KEY (GRP_MEMBER_ID);

CREATE TABLE CMS_STAGE_GROUP_MEMBER (
       GRP_MEMBER_ID        BIGINT NOT NULL,
       ENTITY_ID     BIGINT ,
       ENTITY_TYPE          VARCHAR(10),
       RELATION_NAME        VARCHAR(40),
       PERCENT_OWNED      DECIMAL(5,2),
       REL_BOR_MEMBER_NAME VARCHAR(40),   
       STATUS         VARCHAR(10),
       GRP_ID        BIGINT,
       GRP_MEMBER_REF_ID  BIGINT
)IN "CMS_DATA";
 

ALTER TABLE CMS_STAGE_GROUP_MEMBER  ADD PRIMARY KEY (GRP_MEMBER_ID); 

CREATE SEQUENCE "CMS_GROUP_MEMBER_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "CMS_STAGE_GROUP_MEMBER_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;

/*********************************************************************
	Build : GEMS_R1.0_B001V90
	Type : DB patches Shareholder/ Relationship
	Date : Thursday, February 28, 2008 7:52 PM
	Owner : Lini
	Patch : DB Patch for Build# B001V90(Shareholder/ Relationship STATUS column)
*********************************************************************/
ALTER TABLE SCI_LE_REL 
ADD COLUMN STATUS VARCHAR(20);

ALTER TABLE STAGE_LE_REL 
ADD COLUMN STATUS VARCHAR(20);


/*********************************************************************
	Build : GEMS_R1.0_B001V90
	Type : DB patches Exempt Institution
	Date : Thursday, February 28, 2008 7:53 PM
	Owner : Lini
	Patch : DB Patch for Build# B001V90 (Exempted Institution Status)
*********************************************************************/

ALTER TABLE CMS_EXEMPTED_INST_GP5
ADD COLUMN STATUS VARCHAR(20); 

ALTER TABLE CMS_STAGE_EXEMPTED_INST_GP5
ADD COLUMN STATUS VARCHAR(20); 


 /*********************************************************************
	Build : GEMS_R1.0_B001V91
	Type :  
	Date :  Monday, March 03, 2008 6:25 PM
	Owner : Tan Pei Cheng <pctan@integrosys.com>
	Patch :  DB Patch for Build# B001V91(Shareholder/ Relationship GROUP_ID  column)
*********************************************************************/
ALTER TABLE SCI_LE_REL 
ADD COLUMN GROUP_ID  BIGINT;
ALTER TABLE STAGE_LE_REL 
ADD COLUMN GROUP_ID  BIGINT;

/*********************************************************************
	Build : GEMS_R1.0_B001V91
	Type :  
	Date : Tuesday, March 04, 2008 10:21 AM
	Owner : Tan Pei Cheng <pctan@integrosys.com>
	Patch :  DB Patch for Build# B001V91(Sequence for Shareholder/ Relationship and exempted inst)
*********************************************************************/
CREATE SEQUENCE  CUST_RELNSHIP_SEQ 
INCREMENT BY 1 
MINVALUE 1 MAXVALUE 999999 
START WITH 1 CYCLE NOCACHE NOORDER;

CREATE SEQUENCE  CMS_EXEMPTED_INST_SEQ 
INCREMENT BY 1 
MINVALUE 1 MAXVALUE 999999 
START WITH 1 CYCLE NOCACHE NOORDER;

 /*********************************************************************
	Build : GEMS_R1.0_B001V91
	Type :  
	Date : Wednesday, March 05, 2008 7:51 PM
	Owner : Tan Pei Cheng <pctan@integrosys.com>
	Patch :  DB Patch for Build# B001V91(Exempted Inst GROUP_ID  column)
*********************************************************************/
	
ALTER TABLE CMS_EXEMPTED_INST_GP5
ADD COLUMN GROUP_ID  BIGINT;

ALTER TABLE CMS_STAGE_EXEMPTED_INST_GP5
ADD COLUMN GROUP_ID  BIGINT;
	
/*********************************************************************
   Build : GCMS_R1.0_B001V99C
   Type  :  data
   Date  :  Thursday, April 03, 2008 7:52 PM
   Owner :  Lini Elsy Varghese <lini@integrosys.com>
   Patch : DB Patch for Build# B001V99c jira- (mbbgems-273)
*********************************************************************/

--DROP TABLE CMS_STAGE_EXEMPT_FACILITY;

CREATE TABLE CMS_STAGE_EXEMPT_FACILITY (
EXEMPT_FACILITY_ID BIGINT NOT NULL,
GROUP_ID BIGINT,
CMS_REF_ID BIGINT,
LOS_SYSTEM VARCHAR(40),
FACILITY_CODE VARCHAR(40),
FACILITY_STATUS_EXEMPTED VARCHAR(1),
CONDITIONAL_PERCENT DECIMAL(7,2),
REMARKS VARCHAR(250),
STATUS VARCHAR(20),
VERSION_TIME BIGINT
) 
IN CMS_DATA;


ALTER TABLE CMS_STAGE_EXEMPT_FACILITY
ADD CONSTRAINT EXM_FAC_STG_ID_PK PRIMARY KEY
(EXEMPT_FACILITY_ID);

-------------------------------------------------

--DROP TABLE CMS_EXEMPT_FACILITY;

CREATE TABLE CMS_EXEMPT_FACILITY (
EXEMPT_FACILITY_ID BIGINT NOT NULL,
GROUP_ID BIGINT,
CMS_REF_ID BIGINT,
LOS_SYSTEM VARCHAR(40),
FACILITY_CODE VARCHAR(40),
FACILITY_STATUS_EXEMPTED VARCHAR(1),
CONDITIONAL_PERCENT DECIMAL(7,2),
REMARKS VARCHAR(250),
STATUS VARCHAR(20),
VERSION_TIME BIGINT
) 
IN CMS_DATA;

ALTER TABLE CMS_EXEMPT_FACILITY
ADD CONSTRAINT EXM_FAC_ID_PK PRIMARY KEY
(EXEMPT_FACILITY_ID);
	
CREATE SEQUENCE  CMS_EXEMPT_FAC_SEQ
  AS INTEGER
  NO CACHE
  MAXVALUE 999999
  CYCLE;		
  
  
 /*********************************************************************
	Build : GEMS_R1.0_B001V98
	Type :  
	Date : Wednesday, March 26, 2008 9:14 PM
	Owner : j2
	Patch : DB Patch for Build# B001V98( Group Module)
*********************************************************************/	
--ALTER TABLE CMS_CUST_GRP ADD GRP_NO BIGINT ;

--ALTER TABLE CMS_STAGE_CUST_GRP ADD GRP_NO BIGINT ;

CREATE SEQUENCE "CMS_CUST_GRP_NO_SEQ" AS INTEGER
      MINVALUE 1 MAXVALUE 999999
      START WITH 1 INCREMENT BY 1
      NO CACHE CYCLE NO ORDER;
			
/*********************************************************************
	Build : GEMS_R1.0
	Type :  
	Date : 27 May 2008
	Owner : Andy Wong
	Patch : DB Schema for Bank Entity Branch Code parameter
*********************************************************************/	
-- WLS: DDL Statements for "CMS_BANK_ENTITY_PARAM"				
CREATE TABLE CMS_BANK_ENTITY_PARAM
(
	BANK_ENTITY_ID            	BIGINT       NOT NULL,
	GROUP_ID										BIGINT,
	ENTITY_TYPE									VARCHAR(2),
	BRANCH_CODE               	VARCHAR(20),
	BRANCH_CODE_SRC         		VARCHAR(40),
	STATUS											VARCHAR(10),
	VERSION_TIME               	BIGINT,
	CMS_REF_ID									BIGINT,
	PRIMARY KEY(BANK_ENTITY_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

-- WLS: DDL Statements for "CMS_STAGE_BANK_ENTITY_PARAM"			
CREATE TABLE CMS_STAGE_BANK_ENTITY_PARAM
(
	BANK_ENTITY_ID            	BIGINT       NOT NULL,
	GROUP_ID										BIGINT,
	ENTITY_TYPE									VARCHAR(2),
	BRANCH_CODE               	VARCHAR(20),
	BRANCH_CODE_SRC         		VARCHAR(40),
	STATUS											VARCHAR(10),
	VERSION_TIME               	BIGINT,
	CMS_REF_ID									BIGINT,
	PRIMARY KEY(BANK_ENTITY_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE SEQUENCE CMS_BANK_ENTITY_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 

CREATE SEQUENCE CMS_STG_BANK_ENTITY_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 	

	
/**************************************************************************
Entity Limit - LMS Standard Code 
Author : Siew Kheat
Date : 28 May 2008
*************************************************************************/
--drop TABLE CMS_ENTITY_LIMIT;
--drop TABLE CMS_STAGE_ENTITY_LIMIT;
--drop SEQUENCE ENTITY_LIMIT_SEQ;

CREATE TABLE  CMS_ENTITY_LIMIT (
	ENTITY_LIMIT_ID			BIGINT NOT NULL,
    CMS_LE_SUB_PROFILE_ID	BIGINT,
	LIMIT_CURRENCY			CHAR(3),
    LIMIT_AMOUNT       		DECIMAL(20,0),
	LIMIT_REVIEW_DATE       TIMESTAMP,
    GROUP_ID            	BIGINT NOT NULL,
	CMS_REF_ID				BIGINT,
	STATUS					VARCHAR(10),
    VERSION_TIME        	BIGINT    
    )
    IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

ALTER TABLE  CMS_ENTITY_LIMIT
	ADD CONSTRAINT "ENT_LMT_PK" PRIMARY KEY
		("ENTITY_LIMIT_ID");
		
CREATE TABLE  CMS_STAGE_ENTITY_LIMIT (
    ENTITY_LIMIT_ID			BIGINT NOT NULL,
	CMS_LE_SUB_PROFILE_ID	BIGINT,
	LIMIT_CURRENCY			CHAR(3),
    LIMIT_AMOUNT       		DECIMAL(20,0),
	LIMIT_REVIEW_DATE       TIMESTAMP,
    GROUP_ID            	BIGINT NOT NULL,
	CMS_REF_ID				BIGINT,
	STATUS					VARCHAR(10),	
    VERSION_TIME        	BIGINT    
    )
    IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

ALTER TABLE  CMS_STAGE_ENTITY_LIMIT
	ADD CONSTRAINT "ST_ENT_LMT_PK" PRIMARY KEY
		("ENTITY_LIMIT_ID");

CREATE SEQUENCE  ENTITY_LIMIT_SEQ AS INTEGER
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NO CACHE;
	
	
/**************************************************************************
Maximum Country Limit  
*************************************************************************/
--drop table CMS_COUNTRY_RATING;
--drop table CMS_STAGE_COUNTRY_RATING;
--drop table CMS_COUNTRY_LIMIT;
--drop table CMS_STAGE_COUNTRY_LIMIT;

CREATE TABLE  CMS_COUNTRY_RATING (
    COUNTRY_RATING_ID				BIGINT NOT NULL,
	COUNTRY_RATING_CODE				VARCHAR(40) NOT NULL,
    BANK_CAPITAL_FUND_PERCENT       DECIMAL(5,2),
	PRESET_COUNTRY_LIMIT_PERCENT    DECIMAL(5,2),
    GROUP_ID            			BIGINT NOT NULL,
    VERSION_TIME        			BIGINT    
    )
    IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

ALTER TABLE  CMS_COUNTRY_RATING
	ADD CONSTRAINT "CTRY_RATING_PK" PRIMARY KEY
		("COUNTRY_RATING_ID");
		
CREATE TABLE  CMS_STAGE_COUNTRY_RATING (
    COUNTRY_RATING_ID				BIGINT NOT NULL,
	COUNTRY_RATING_CODE				VARCHAR(40) NOT NULL,
    BANK_CAPITAL_FUND_PERCENT       DECIMAL(5,2),
	PRESET_COUNTRY_LIMIT_PERCENT    DECIMAL(5,2),
    GROUP_ID            			BIGINT NOT NULL,
    VERSION_TIME        			BIGINT    
    )
    IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

ALTER TABLE  CMS_STAGE_COUNTRY_RATING
	ADD CONSTRAINT "ST_CTRY_RATING_PK" PRIMARY KEY
		("COUNTRY_RATING_ID");

CREATE SEQUENCE  COUNTRY_RATING_SEQ 
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NOCACHE NOORDER;

/**************************************************************************
Country Rating 
*************************************************************************/
	
CREATE TABLE  CMS_COUNTRY_LIMIT (
    COUNTRY_LIMIT_ID		BIGINT NOT NULL,
	COUNTRY_CODE				CHAR(2),
	COUNTRY_RATING_CODE			VARCHAR(40),
    COUNTRY_LIMIT_CCY_CODE 		CHAR(3),
	COUNTRY_LIMIT_AMOUNT        DECIMAL(20,2),
	GROUP_ID            		BIGINT NOT NULL,
	COUNTRY_LIMIT_REF			BIGINT,
    VERSION_TIME        		BIGINT,
	STATUS               		VARCHAR(20)    
    )
    IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

ALTER TABLE  CMS_COUNTRY_LIMIT
	ADD CONSTRAINT "CTRY_LIMIT_PK" PRIMARY KEY
		("COUNTRY_LIMIT_ID");		
		
CREATE TABLE  CMS_STAGE_COUNTRY_LIMIT (
    COUNTRY_LIMIT_ID		BIGINT NOT NULL,
	COUNTRY_CODE				CHAR(2),
	COUNTRY_RATING_CODE			VARCHAR(40),
	COUNTRY_LIMIT_CCY_CODE 		CHAR(3),
    COUNTRY_LIMIT_AMOUNT        DECIMAL(20,2),
	GROUP_ID            		BIGINT NOT NULL,
	COUNTRY_LIMIT_REF			BIGINT,
    VERSION_TIME        		BIGINT,
	STATUS               		VARCHAR(20)    
    )
    IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

ALTER TABLE  CMS_STAGE_COUNTRY_LIMIT
	ADD CONSTRAINT "ST_CTRY_LIMIT_PK" PRIMARY KEY
		("COUNTRY_LIMIT_ID");				

CREATE SEQUENCE  COUNTRY_LIMIT_SEQ 
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NOCACHE NOORDER;	

-------------------------------------------------------
-- LMS-Standard Code - Internal Credit Rating Parameter
-- Author: Priya
-- 03 June 2008
-------------------------------------------------------

--drop table CMS_INTERNAL_CREDIT_RATING;
--drop table CMS_STAGE_INTERNAL_CREDIT_RATING;
--drop sequence CMS_INTERNAL_CREDIT_RATING_SEQ;
--drop sequence CMS_STG_INTERNAL_CREDIT_RATING_SEQ;

CREATE TABLE CMS_INTERNAL_CREDIT_RATING
(
	INT_CR_ID							BIGINT 		NOT NULL,
	INT_CR_CODE							VARCHAR(40),
	INT_CR_LMT_AMT_CUR_CODE				VARCHAR(3),	
	INT_CR_LMT_AMT						DECIMAL(20,0),	
	GROUP_ID							BIGINT,
	CMS_REF_ID							BIGINT,		
	STATUS								VARCHAR(20),
	VERSION_TIME        				BIGINT,
	PRIMARY KEY(INT_CR_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";


CREATE TABLE CMS_STAGE_INTERNAL_CREDIT_RATING
(
	INT_CR_ID							BIGINT       NOT NULL,
	INT_CR_CODE							VARCHAR(40),
	INT_CR_LMT_AMT_CUR_CODE				VARCHAR(3),	
	INT_CR_LMT_AMT						DECIMAL(20,0),			
	STATUS								VARCHAR(20),
	GROUP_ID							BIGINT,
	CMS_REF_ID							BIGINT,
	VERSION_TIME        				BIGINT,
	PRIMARY KEY(INT_CR_ID)
)	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";


CREATE SEQUENCE CMS_INTERNAL_CREDIT_RATING_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 

CREATE SEQUENCE CMS_STG_INTERNAL_CREDIT_RATING_SEQ AS INTEGER
	MINVALUE 1 MAXVALUE 999999999
	START WITH 1 INCREMENT BY 1
	NO CACHE CYCLE NO ORDER; 	
	
------------------------------------
-- LMS-Standard Code - Sector Limit
-- Author: Syukri
-- 28 May 2008
------------------------------------

CREATE TABLE CMS_SECTOR_LIMIT (
  SECTOR_LIMIT_ID   BIGINT NOT NULL,
  GROUP_ID  BIGINT NOT NULL,
  LOAN_PURPOSE_CODE_VALUE   VARCHAR(60),
  LIMIT_PERCENT   DECIMAL(5,2),
  LIMIT_REVIEW_DATE   TIMESTAMP,
  STATUS    VARCHAR(20),
  VERSION_TIME    BIGINT
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

ALTER TABLE CMS_SECTOR_LIMIT
  ADD CONSTRAINT "SCTR_LMT_PK" PRIMARY KEY
    ("SECTOR_LIMIT_ID");


CREATE TABLE CMS_STAGE_SECTOR_LIMIT (
  SECTOR_LIMIT_ID   BIGINT NOT NULL,
  GROUP_ID  BIGINT NOT NULL,
  LOAN_PURPOSE_CODE_VALUE   VARCHAR(60),
  LIMIT_PERCENT   DECIMAL(5,2),
  LIMIT_REVIEW_DATE   TIMESTAMP,
  STATUS    VARCHAR(20),
  VERSION_TIME    BIGINT
) IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

ALTER TABLE CMS_STAGE_SECTOR_LIMIT
  ADD CONSTRAINT "ST_SCTR_LMT_PK" PRIMARY KEY
    ("SECTOR_LIMIT_ID");
    
CREATE SEQUENCE SECTOR_LIMIT_SEQ AS INTEGER
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NO CACHE;

/**************************************************************************
CR_ABCMSEXT-199 - Auto Finance Report
*************************************************************************/

CREATE TABLE CMS_BRANCH_MAP (
	BRANCH_MAP_ID 	BIGINT NOT NULL, 
    BRANCH_CODE     VARCHAR(20),
    REGION          VARCHAR(40),
	ACTIVE_STATUS   CHAR(1)
);

CREATE SEQUENCE  BRANCH_MAP_SEQ 
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NOCACHE NOORDER;

/**************************************************************************
Limit Booking
*************************************************************************/	

CREATE TABLE CMS_AGGR_EXP_CTR ( 
	CMS_AGGR_EXP_CTR_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	CTR                	VARCHAR(3),
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2) 
	)    
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

CREATE TABLE CMS_AGGR_EXP_ENTITY ( 
	CMS_AGGR_EXP_ENTITY_ID		BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	CMS_LE_SUB_PROFILE_ID 	BIGINT ,	
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2) --NEED TO INCLUDE CUSTOMER FROM CCI
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	
	

CREATE TABLE CMS_AGGR_EXP_POL ( 
	CMS_AGGR_EXP_POL_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	POL                	VARCHAR(40),
	BANK_ENTITY 		VARCHAR(10),
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2) 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	
	
CREATE TABLE CMS_AGGR_EXP_PROD_TYPE ( 
	CMS_AGGR_EXP_PROD_TYPE_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	PROD_TYPE           VARCHAR(40),
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2) 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";
	
CREATE TABLE CMS_AGGR_EXP_BW_BE ( 
	CMS_AGGR_EXP_BW_BE_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	BANK_ENTITY 		VARCHAR(10),
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2) 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";
	
CREATE TABLE CMS_AGGR_EXP_BW_BE_CUST ( 
	CMS_AGGR_EXP_BW_BE_CUST_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	CMS_LE_SUB_PROFILE_ID BIGINT ,
	BANK_ENTITY 		VARCHAR(10),
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2) 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";

CREATE TABLE CMS_AGGR_EXP_GRP ( 
	CMS_AGGR_EXP_GRP_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	GROUP_ID           	BIGINT,
	BANK_ENTITY     	VARCHAR(10),
	FI_INDICATOR  		VARCHAR(1),
	IS_EXEMPTED_INST	VARCHAR(1),
	EXPOSURE_AMT_CURR  	VARCHAR(3),
	EXPOSURE_AMT       	DECIMAL(17,2),
	OUTSTANDING_AMT_CURR  	VARCHAR(3),
	OUTSTANDING_AMT       	DECIMAL(17,2),
	LIMIT_BOOKED_CURR	VARCHAR(3),
	LIMIT_BOOKED_AMT	DECIMAL(17,2),
	CONTG_LIAB_CURR		VARCHAR(3),
	CONTG_LIAB_AMT		DECIMAL(17,2)
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	
	
CREATE INDEX CMS_AGGR_EXP_CTR_IDX
	ON CMS_AGGR_EXP_CTR(CTR)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
CREATE INDEX CMS_AGGR_EXP_GRP_IDX
	ON CMS_AGGR_EXP_GRP(GROUP_ID)
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
CREATE INDEX CMS_AGGR_EXP_POL_IDX
	ON CMS_AGGR_EXP_POL(POL, BANK_ENTITY)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
CREATE INDEX CMS_AGGR_EXP_PROD_TYPE_IDX
	ON CMS_AGGR_EXP_PROD_TYPE(CMS_AGGR_EXP_PROD_TYPE_ID)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
CREATE INDEX CMS_AGGR_EXP_BW_BE_IDX
	ON CMS_AGGR_EXP_BW_BE(BANK_ENTITY)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
CREATE INDEX CMS_AGGR_EXP_BW_BE_CUST_IDX
	ON CMS_AGGR_EXP_BW_BE_CUST(BANK_ENTITY)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
CREATE INDEX CMS_AGGR_EXP_ENTITY_IDX
	ON CMS_AGGR_EXP_ENTITY(CMS_LE_SUB_PROFILE_ID)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
	
------------------------------------
--- Limit Booking table
------------------------------------
	
CREATE TABLE CMS_LMT_BOOK ( 
	LMT_BK_ID   	BIGINT NOT NULL,
	CMS_LE_SUB_PROFILE_ID 	BIGINT,	
	TICKET_NO      	VARCHAR(10),
	AA_NO       	VARCHAR(19),
	AA_SOURCE   	VARCHAR(10),
	BK_NAME     	VARCHAR(25),
	BK_ID_NO    	VARCHAR(20),
	BK_CURR     	VARCHAR(3),
	BK_AMT      	DECIMAL(17,2),
	BK_CTRY     	VARCHAR(3),
	BK_BUS_SECTOR 	VARCHAR(10),
	BK_BUS_UNIT 	VARCHAR(10),
	BK_BANK_ENTITY 	VARCHAR(10),
	IS_EXISTING_CUSTOMER 		VARCHAR(1),
	IS_FINANCIAL_INSTITUTION 	VARCHAR(1),
	BK_STATUS   	VARCHAR(5), --PB/B/
	OVERALL_RESULT   	VARCHAR(5),
	DATE_CREATED	TIMESTAMP,
	EXPIRY_DATE 	TIMESTAMP,	
	LAST_MODIFIED_DATE 	TIMESTAMP,	
	LAST_MODIFIED_BY VARCHAR(30),
	CMS_REF			BIGINT,
	VERSION_TIME	BIGINT 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	
	
CREATE TABLE CMS_LMT_BOOK_DTL ( 
	LMT_BK_DETAIL_ID     	BIGINT NOT NULL,
	LMT_BK_ID            	BIGINT NOT NULL,
	BK_TYPE_CAT          	VARCHAR(10), --GRP/EL/POL/CTR/BANKENT
	BK_TYPE_CODE         	VARCHAR(40), --grp_id/ sub profile id/ entry_code of POL/ ctry code
	BK_TYPE_DESC         	VARCHAR(255), --grp_name/ bk_name/ entry_desc of POL/ country name
	BK_SUB_TYPE_CAT          	VARCHAR(10), --CONV/ISLM/INV/BANK/BANKNONFI/EXEMPT/NONEXEMPT
	BK_SUB_TYPE_CODE         	VARCHAR(40), --grp_sub_id
	BK_SUB_TYPE_DESC         	VARCHAR(255), --bank entity name
	BK_CURR              	VARCHAR(3),  --your bookin. SI Will update  
	BK_AMT               	DECIMAL(17,2),
	LMT_PB_AMT_CURR      	VARCHAR(3),   --your bookin
	LMT_PB_AMT           	DECIMAL(17,2),
	LMT_AMT_CURR         	VARCHAR(3), --credit risk param set at pre booked time
	LMT_AMT              	DECIMAL(17,2),
	CUR_EXP_AMT_CURR     	VARCHAR(3), --get exposure from exposure tables 
	CUR_EXP_AMT          	DECIMAL(17,2), 
	TOTAL_BOOKED_AMT_CURR	VARCHAR(3),   --booked + PB amount in this table (based on BK_STATUS in CMS_lmt_book table)
	TOTAL_BOOKED_AMT     	DECIMAL(15,5),
	BOOKING_RESULT       	VARCHAR(5),    --pass/fail
	GRP_IS_RETRIEVED        VARCHAR(1),
	CMS_REF					BIGINT,
	STATUS   				VARCHAR(5),
	VERSION_TIME			BIGINT 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	
	
CREATE TABLE CMS_STAGE_LMT_BOOK ( 
	LMT_BK_ID   	BIGINT NOT NULL,
	CMS_LE_SUB_PROFILE_ID 	BIGINT,	
	TICKET_NO      	VARCHAR(10),
	AA_NO       	VARCHAR(19),
	AA_SOURCE   	VARCHAR(10),
	BK_NAME     	VARCHAR(25),
	BK_ID_NO    	VARCHAR(20),
	BK_CURR     	VARCHAR(3),
	BK_AMT      	DECIMAL(17,2),
	BK_CTRY     	VARCHAR(3),
	BK_BUS_SECTOR 	VARCHAR(10),
	BK_BUS_UNIT 	VARCHAR(10),
	BK_BANK_ENTITY 	VARCHAR(10),
	IS_EXISTING_CUSTOMER 		VARCHAR(1),
	IS_FINANCIAL_INSTITUTION 	VARCHAR(1),
	BK_STATUS   	VARCHAR(5), --PB/B/
	OVERALL_RESULT   	VARCHAR(5),
	DATE_CREATED	TIMESTAMP,
	EXPIRY_DATE 	TIMESTAMP,	
	LAST_MODIFIED_DATE 	TIMESTAMP,	
	LAST_MODIFIED_BY VARCHAR(30),
	CMS_REF			BIGINT,
	VERSION_TIME	BIGINT 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	
	


CREATE TABLE CMS_STAGE_LMT_BOOK_DTL ( 
	LMT_BK_DETAIL_ID     	BIGINT NOT NULL,
	LMT_BK_ID            	BIGINT NOT NULL,
	BK_TYPE_CAT          	VARCHAR(10), --GRP/EL/POL/CTR
	BK_TYPE_CODE         	VARCHAR(40), --grp_id/ sub profile id/ entry_code of POL/ ctry code
	BK_TYPE_DESC         	VARCHAR(255), --grp_name/ bk_name/ entry_desc of POL/ country name
	BK_SUB_TYPE_CAT          	VARCHAR(10), --GRP/EL/POL/CTR
	BK_SUB_TYPE_CODE         	VARCHAR(40), --grp_id/ sub profile id/ entry_code of POL/ ctry code
	BK_SUB_TYPE_DESC         	VARCHAR(255), --grp_name/ bk_name/ entry_desc of POL/ country name
	BK_CURR              	VARCHAR(3),  --your bookin. SI Will update  
	BK_AMT               	DECIMAL(17,2),
	LMT_PB_AMT_CURR      	VARCHAR(3),   --your bookin
	LMT_PB_AMT           	DECIMAL(17,2),
	LMT_AMT_CURR         	VARCHAR(3), --credit risk param set at pre booked time
	LMT_AMT              	DECIMAL(17,2),
	CUR_EXP_AMT_CURR     	VARCHAR(3), --get exposure from exposure tables 
	CUR_EXP_AMT          	DECIMAL(17,2), 
	TOTAL_BOOKED_AMT_CURR	VARCHAR(3),   --booked + PB amount in this table (based on BK_STATUS in CMS_lmt_book table)
	TOTAL_BOOKED_AMT     	DECIMAL(15,5),
	BOOKING_RESULT       	VARCHAR(5),    --pass/fail
	GRP_IS_RETRIEVED        VARCHAR(1),
	CMS_REF					BIGINT,
	STATUS   				VARCHAR(5),
	VERSION_TIME			BIGINT 
	)
	IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	


ALTER TABLE CMS_LMT_BOOK
	ADD CONSTRAINT PK_CMS_LMT_BK
	PRIMARY KEY (LMT_BK_ID);
	
ALTER TABLE CMS_LMT_BOOK_DTL
	ADD CONSTRAINT PK_CMS_LMT_BK_DTL
	PRIMARY KEY (LMT_BK_DETAIL_ID);
		
ALTER TABLE CMS_STAGE_LMT_BOOK
	ADD CONSTRAINT PK_ST_CMS_LMT_BK
	PRIMARY KEY (LMT_BK_ID);
	
ALTER TABLE CMS_STAGE_LMT_BOOK_DTL
	ADD CONSTRAINT PK_ST_LMT_BK_DTL
	PRIMARY KEY (LMT_BK_DETAIL_ID);

CREATE SEQUENCE  LMT_BOOK_SEQ 
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NOCACHE NOORDER;
	
CREATE SEQUENCE  LMT_BOOK_DTL_SEQ 
	INCREMENT BY 1 MINVALUE 1 MAXVALUE 999999999 
	START WITH 1 CYCLE NOCACHE NOORDER;

------------------------------------
--- New fields for limit table
------------------------------------

alter table sci_lsp_appr_lmts
        add LMT_PURPOSE_LOAN_NUM    VARCHAR(40)
        add LMT_PURPOSE_LOAN_VALUE    VARCHAR(40)
        add DISBURSED_IND    VARCHAR(1);

 alter table stage_limit
        add LMT_PURPOSE_LOAN_NUM    VARCHAR(40)
        add LMT_PURPOSE_LOAN_VALUE    VARCHAR(40)
        add DISBURSED_IND    VARCHAR(1);	

------------------------------------
--- New fields for report table
------------------------------------	

alter table CMS_REPORT
add GRP_ID    BIGINT;

alter table CMS_REPORT_ERRLOG
add GRP_ID    BIGINT;

------------------------------------
--- Change field name purpose of loan to loan sector code in limit table
------------------------------------

alter table sci_lsp_appr_lmts
       drop LMT_PURPOSE_LOAN_NUM 
       drop LMT_PURPOSE_LOAN_VALUE;

alter table stage_limit
       drop LMT_PURPOSE_LOAN_NUM 
       drop LMT_PURPOSE_LOAN_VALUE;

alter table sci_lsp_appr_lmts
       add LMT_LOAN_SECTOR_NUM    VARCHAR(40)
       add LMT_LOAN_SECTOR_VALUE    VARCHAR(10);

alter table stage_limit
       add LMT_LOAN_SECTOR_NUM    VARCHAR(40)
       add LMT_LOAN_SECTOR_VALUE    VARCHAR(10);

reorg table sci_lsp_appr_lmts;

reorg table stage_limit;

------------------------------------
--- Limit Booking
------------------------------------

alter table CMS_LMT_BOOK 
	alter column BK_NAME set data type VARCHAR(150);

alter table CMS_STAGE_LMT_BOOK 
	alter column BK_NAME set data type VARCHAR(150);
	
alter table CMS_LMT_BOOK 
    alter column TICKET_NO set data type VARCHAR(15);
    
alter table CMS_STAGE_LMT_BOOK 
    alter column TICKET_NO set data type VARCHAR(15);

alter table CMS_LMT_BOOK 
	alter column BK_AMT set data type DECIMAL(20,2);

alter table CMS_STAGE_LMT_BOOK 
	alter column BK_AMT set data type DECIMAL(20,2);

alter table CMS_LMT_BOOK
	alter column AA_NO set data type VARCHAR(35);

alter table CMS_STAGE_LMT_BOOK
	alter column AA_NO set data type VARCHAR(35);
	
alter table CMS_LMT_BOOK_DTL 
	alter column BK_AMT set data type DECIMAL(20,2)
	alter column LMT_PB_AMT set data type DECIMAL(20,2)
	alter column LMT_AMT set data type DECIMAL(20,2)
	alter column CUR_EXP_AMT set data type DECIMAL(20,2);

alter table CMS_STAGE_LMT_BOOK_DTL 
	alter column BK_AMT set data type DECIMAL(20,2)
	alter column LMT_PB_AMT set data type DECIMAL(20,2)
	alter column LMT_AMT set data type DECIMAL(20,2)
	alter column CUR_EXP_AMT set data type DECIMAL(20,2);
	
alter table CMS_LMT_BOOK_DTL drop column TOTAL_BOOKED_AMT;

alter table CMS_LMT_BOOK_DTL 
	add column TOTAL_BOOKED_AMT DECIMAL(20,2);
	
alter table CMS_STAGE_LMT_BOOK_DTL drop column TOTAL_BOOKED_AMT;

alter table CMS_STAGE_LMT_BOOK_DTL 
	add column TOTAL_BOOKED_AMT DECIMAL(20,2);

alter table CMS_LMT_BOOK_DTL 
	add BK_PROD_TYPE_CODE VARCHAR(40) 
	add BK_PROD_TYPE_DESC VARCHAR(255);
		
alter table CMS_STAGE_LMT_BOOK_DTL 
	add BK_PROD_TYPE_CODE VARCHAR(40) 
	add BK_PROD_TYPE_DESC VARCHAR(255);
	
reorg table CMS_LMT_BOOK;

reorg table CMS_STAGE_LMT_BOOK;

reorg table CMS_LMT_BOOK_DTL;

reorg table CMS_STAGE_LMT_BOOK_DTL;

CREATE TABLE CMS_MAIN_SECTOR_LIMIT (
  MAIN_SECTOR_LIMIT_ID	BIGINT	NOT NULL,
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE VARCHAR(10),
  LIMIT_PERCENT	DECIMAL(5,2),
  LIMIT_REVIEW_DATE	TIMESTAMP,
  CONV_BK_PERCENT	DECIMAL(5,2),
  ISLAMIC_BK_PERCENT	DECIMAL(5,2),
  INV_BK_PERCENT	DECIMAL(5,2),
  STATUS	VARCHAR(20),
  VERSION_TIME	BIGINT,
  CMS_REF_ID BIGINT
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
ALTER TABLE CMS_MAIN_SECTOR_LIMIT
ADD CONSTRAINT MAIN_SECTOR_LIMIT PRIMARY KEY
(MAIN_SECTOR_LIMIT_ID);
       
CREATE TABLE CMS_SUB_SECTOR_LIMIT (
  SUB_SECTOR_LIMIT_ID	BIGINT	NOT NULL,
  MAIN_SECTOR_LIMIT_ID	BIGINT,
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE VARCHAR(10),
  LIMIT_PERCENT	DECIMAL(5,2),
  LIMIT_REVIEW_DATE	TIMESTAMP,
  CONV_BK_PERCENT	DECIMAL(5,2),
  ISLAMIC_BK_PERCENT	DECIMAL(5,2),
  INV_BK_PERCENT	DECIMAL(5,2),
  STATUS	VARCHAR(20),
  CMS_REF_ID BIGINT
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
ALTER TABLE CMS_SUB_SECTOR_LIMIT
ADD CONSTRAINT SUB_SECTOR_LIMIT PRIMARY KEY
(SUB_SECTOR_LIMIT_ID);
    
CREATE TABLE CMS_ECO_SECTOR_LIMIT (
  ECO_SECTOR_LIMIT_ID	BIGINT	NOT NULL,
  SUB_SECTOR_LIMIT_ID	BIGINT,
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE VARCHAR(10),
  LIMIT_PERCENT	DECIMAL(5,2),
  LIMIT_REVIEW_DATE	TIMESTAMP,
  CONV_BK_PERCENT	DECIMAL(5,2),
  ISLAMIC_BK_PERCENT	DECIMAL(5,2),
  INV_BK_PERCENT	DECIMAL(5,2),
  STATUS	VARCHAR(20),
  CMS_REF_ID BIGINT
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
ALTER TABLE CMS_ECO_SECTOR_LIMIT
ADD CONSTRAINT ECO_SECTOR_LIMIT PRIMARY KEY
(ECO_SECTOR_LIMIT_ID);
    
CREATE TABLE CMS_STAGE_MAIN_SECTOR_LIMIT (
  MAIN_SECTOR_LIMIT_ID	BIGINT	NOT NULL,
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE VARCHAR(10),
  LIMIT_PERCENT	DECIMAL(5,2),
  LIMIT_REVIEW_DATE	TIMESTAMP,
  CONV_BK_PERCENT	DECIMAL(5,2),
  ISLAMIC_BK_PERCENT	DECIMAL(5,2),
  INV_BK_PERCENT	DECIMAL(5,2),
  STATUS	VARCHAR(20),
  VERSION_TIME	BIGINT,
  CMS_REF_ID BIGINT
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;

ALTER TABLE CMS_STAGE_MAIN_SECTOR_LIMIT
ADD CONSTRAINT MAIN_SECTOR_LIMIT PRIMARY KEY
(MAIN_SECTOR_LIMIT_ID);
    
CREATE TABLE CMS_STAGE_SUB_SECTOR_LIMIT (
  SUB_SECTOR_LIMIT_ID	BIGINT	NOT NULL,
  MAIN_SECTOR_LIMIT_ID	BIGINT,
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE VARCHAR(10),
  LIMIT_PERCENT	DECIMAL(5,2),
  LIMIT_REVIEW_DATE	TIMESTAMP,
  CONV_BK_PERCENT	DECIMAL(5,2),
  ISLAMIC_BK_PERCENT	DECIMAL(5,2),
  INV_BK_PERCENT	DECIMAL(5,2),
  STATUS	VARCHAR(20),
  CMS_REF_ID BIGINT
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
ALTER TABLE CMS_STAGE_SUB_SECTOR_LIMIT
ADD CONSTRAINT SUB_SECTOR_LIMIT PRIMARY KEY
(SUB_SECTOR_LIMIT_ID);
       
CREATE TABLE CMS_STAGE_ECO_SECTOR_LIMIT (
  ECO_SECTOR_LIMIT_ID	BIGINT	NOT NULL,
  SUB_SECTOR_LIMIT_ID	BIGINT,
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE VARCHAR(10),
  LIMIT_PERCENT	DECIMAL(5,2),
  LIMIT_REVIEW_DATE	TIMESTAMP,
  CONV_BK_PERCENT	DECIMAL(5,2),
  ISLAMIC_BK_PERCENT	DECIMAL(5,2),
  INV_BK_PERCENT	DECIMAL(5,2),
  STATUS	VARCHAR(20),
  CMS_REF_ID BIGINT
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
ALTER TABLE CMS_STAGE_ECO_SECTOR_LIMIT
ADD CONSTRAINT ECO_SECTOR_LIMIT PRIMARY KEY
(ECO_SECTOR_LIMIT_ID);
       
CREATE SEQUENCE "MAIN_SECTOR_LIMIT_SEQ" AS INTEGER
MINVALUE 1 MAXVALUE 999999
START WITH 1 INCREMENT BY 1
NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "SUB_SECTOR_LIMIT_SEQ" AS INTEGER
MINVALUE 1 MAXVALUE 999999
START WITH 1 INCREMENT BY 1
NO CACHE CYCLE NO ORDER;
 
CREATE SEQUENCE "ECO_SECTOR_LIMIT_SEQ" AS INTEGER
MINVALUE 1 MAXVALUE 999999
START WITH 1 INCREMENT BY 1
NO CACHE CYCLE NO ORDER;
 
CREATE TABLE CMS_PRODUCT_PROGRAM (
  PRODUCT_PROGRAM_ID BIGINT	NOT NULL,
  PRODUCT_PROGRAM_DESC	VARCHAR(150),
  REFERENCE_CODE	VARCHAR(10),
  LIMIT_AMOUNT	DECIMAL(13,2),
  STATUS	VARCHAR(20),
  VERSION_TIME	BIGINT,
  CMS_REF_ID BIGINT,
  PRIMARY KEY(PRODUCT_PROGRAM_ID)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
    
CREATE TABLE CMS_PRODUCT_TYPE (
  PRODUCT_TYPE_ID BIGINT	NOT NULL,
  PRODUCT_PROGRAM_ID BIGINT,
  PRODUCT_TYPE_DESC	VARCHAR(150),
  REFERENCE_CODE	VARCHAR(10),
  STATUS	VARCHAR(20),
  CMS_REF_ID BIGINT,
  PRIMARY KEY(PRODUCT_TYPE_ID)
)  IN CMS_SMALL_DATA
  INDEX IN CMS_INDEX;
    
CREATE TABLE CMS_STAGE_PRODUCT_PROGRAM (
  PRODUCT_PROGRAM_ID BIGINT	NOT NULL,
  PRODUCT_PROGRAM_DESC	VARCHAR(150),
  REFERENCE_CODE	VARCHAR(10),
  LIMIT_AMOUNT	DECIMAL(13,2),
  STATUS	VARCHAR(20),
  VERSION_TIME	BIGINT,
  CMS_REF_ID BIGINT,
  PRIMARY KEY(PRODUCT_PROGRAM_ID)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
CREATE TABLE CMS_STAGE_PRODUCT_TYPE (
  PRODUCT_TYPE_ID BIGINT	NOT NULL,
  PRODUCT_PROGRAM_ID BIGINT,
  PRODUCT_TYPE_DESC	VARCHAR(150),
  REFERENCE_CODE	VARCHAR(10),
  STATUS	VARCHAR(20),
  CMS_REF_ID BIGINT,
  PRIMARY KEY(PRODUCT_TYPE_ID)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
 
CREATE SEQUENCE "PRODUCT_PROGRAM_SEQ" AS INTEGER
MINVALUE 1 MAXVALUE 999999
START WITH 1 INCREMENT BY 1
NO CACHE CYCLE NO ORDER;

CREATE SEQUENCE "PRODUCT_TYPE_SEQ" AS INTEGER
MINVALUE 1 MAXVALUE 999999
START WITH 1 INCREMENT BY 1
NO CACHE CYCLE NO ORDER;

CREATE TABLE CMS_NEW_PROD_TYPE ( 
	CMS_NEW_PROD_TYPE_ID	BIGINT GENERATED ALWAYS AS IDENTITY (START WITH 1, INCREMENT BY 1, CACHE 20) NOT NULL,
	SOURCE_SYSTEM           VARCHAR(40),
	PROD_TYPE_CODE 			VARCHAR(40),
	PROD_TYPE_DESC  		VARCHAR(255)
	)
IN "CMS_SMALL_DATA" INDEX IN "CMS_INDEX";	

CREATE INDEX CMS_NEW_PROD_TYPE_IDX
	ON CMS_NEW_PROD_TYPE(CMS_NEW_PROD_TYPE_ID)
	CLUSTER 
	PCTFREE 10
	MINPCTUSED 10
	ALLOW REVERSE SCANS ;
	
CREATE TABLE CMS_TEMP_MAIN_SECTOR_LIMIT (
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE	VARCHAR(10)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;

CREATE TABLE CMS_TEMP_SUB_SECTOR_LIMIT (
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE	VARCHAR(10),
  MAIN_SECTOR_LIMIT_SECTOR_CODE	VARCHAR(10)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;

CREATE TABLE CMS_TEMP_ECO_SECTOR_LIMIT (
  LOAN_PURPOSE_CODE_VALUE	VARCHAR(150),
  SECTOR_CODE	VARCHAR(10),
  SUB_SECTOR_LIMIT_SECTOR_CODE	VARCHAR(10)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
	
CREATE TABLE CMS_TEMP_PRODUCT_PROGRAM (
  PRODUCT_PROGRAM_DESC	VARCHAR(150),
  REFERENCE_CODE	VARCHAR(10)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
  
CREATE TABLE CMS_TEMP_PRODUCT_TYPE (
  PRODUCT_TYPE_DESC	VARCHAR(150),
  REFERENCE_CODE	VARCHAR(10),
  PRODUCT_PROGRAM_REFERENCE_CODE	VARCHAR(10)
)  IN CMS_SMALL_DATA
INDEX IN CMS_INDEX;
 

 

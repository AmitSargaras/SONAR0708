<?xml version="1.0" encoding="UTF-8"?>
<reports>
	<report>
		<query>
SELECT empId,
			  userName,
			  old_br_code,
			  new_br_code,
			  old_br_name,
			  new_br_name,
			  old_profile_name,
			  new_profile_name,
			  dept,
			  status,
			  Operation,
			  Creation_date,
			  Maker,
			  Modified_On,
			  Approved_By,
			  Authorized_Date,
			  maker_IPAddress,
			  checker_IPAddress
			FROM
			  (SELECT stguser.employee_id       AS empId,
			    stguser.user_name               AS userName,
			    ''                              AS old_br_code,
			    LPAD(stguser.branch_code,4,'0') AS new_br_code,
			    ''                              AS old_br_name,
			    (SELECT sysbank.system_bank_branch_name
			    FROM cms_system_bank_branch sysBank
			    WHERE sysbank.system_bank_branch_code = stguser.branch_code
			    )                    AS new_br_name,
			    ''                   AS old_profile_name,
			    team.membership_name AS new_profile_name,
			    cc.entry_name        AS dept,
			    CASE
			      WHEN UPPER(stguser.status)   = 'A' AND UPPER(stguser.is_unlock) = 'Y'
    			  THEN 'Unlocked'	
			      WHEN UPPER(stguser.status) = 'A'
			      THEN 'Enabled'
			      WHEN UPPER(stguser.status) = 'D'
			      THEN 'Disabled'
			      WHEN UPPER(stguser.status) = 'T'
			      THEN 'Terminate '
			      WHEN UPPER(stguser.status) = 'I'
			      THEN 'Disabled'
			      WHEN UPPER(stguser.status) = 'N'
			      THEN 'Disabled'
			      WHEN UPPER(stguser.status) = 'O'
			      THEN 'Locked'
			      WHEN UPPER(stguser.status) = 'S'
			      THEN 'Suspend '
			      WHEN UPPER(stguser.status) = 'L'
			      THEN 'Leave'
			      WHEN UPPER(stguser.status) = 'R'
			      THEN 'Disabled'
			      WHEN UPPER(stguser.status) = 'NR'
			      THEN 'Disabled'
			    END                                                         AS status,
			    GET_ACTIVITY_MESSAGE(transhis.FROM_STATE,transhis.TO_STATE) AS Operation,
			    TO_CHAR(trans.creation_date,'DD-Mon-YYYY')                  AS Creation_date,
			    CASE 
							WHEN USR.REF_NUMBER IS NOT NULL
							THEN (  select ISAC_MAKER_ID from CMS_INTERFACE_LOG where ID=(select Max (ID) from CMS_INTERFACE_LOG where 
							ISAC_REFERENCE_NO = usr.REF_NUMBER
							))
							ELSE
								CASE
                              WHEN trans.status = 'REJECTED'
                              THEN
                                (SELECT login_id
                                FROM TRANS_HISTORY
                                WHERE TRANSACTION_ID = trans.transaction_id
                                AND from_state       = 'ND'
                                AND to_state         = 'PENDING_CREATE'
                                )
                              WHEN trans.status = 'PENDING_CREATE'
                              THEN trans.login_id
							  END END AS Maker,
			    CASE
			      WHEN trans.status = 'REJECTED'
			      THEN
				(SELECT TO_CHAR(to_timestamp(trans.transaction_date),'DD-Mon-YYYY HH:MI:SS')
				FROM TRANS_HISTORY
				WHERE TRANSACTION_ID = trans.transaction_id
				AND from_state       = 'ND'
				AND to_state         = 'PENDING_CREATE'
				)
			      WHEN trans.status = 'PENDING_CREATE'
			      THEN TO_CHAR(to_timestamp(trans.transaction_date),'DD-Mon-YYYY HH:MI:SS')
			    END AS Modified_On,
			    
			     CASE 
							WHEN USR.REF_NUMBER IS NOT NULL
							THEN (  select ISAC_CHECKER_ID from CMS_INTERFACE_LOG where ID=(select Max (ID) from CMS_INTERFACE_LOG where 
							ISAC_REFERENCE_NO = usr.REF_NUMBER
							))
							ELSE
			    
			    CASE
			      WHEN trans.status = 'REJECTED'
			      THEN trans.login_id
			      WHEN trans.status = 'PENDING_CREATE'
			      THEN ''
			    END END AS Approved_By,
			    CASE
			      WHEN trans.status = 'REJECTED'
			      THEN TO_CHAR(to_timestamp(trans.transaction_date),'DD-Mon-YYYY HH:MI:SS')
			      WHEN trans.status = 'PENDING_CREATE'
			      THEN ''
			    END                               AS Authorized_Date,
			  --  COALESCE(ip.ip_address,'0.0.0.0') AS maker_IPAddress,
			    CASE 
                       WHEN  usr.ref_number is not null
                               THEN '“ISAC interface'
					   WHEN usr.ref_number is null
                              THEN '0.0.0.0'  
				 END AS maker_IPAddress,
			  --  ''                                AS checker_IPAddress,
			   CASE 
                       WHEN  usr.ref_number is not null
                               THEN '“ISAC interface'
					   WHEN usr.ref_number is null
                              THEN ''  
				 END AS checker_IPAddress,
			  
				 stguser.ref_number as ref_number ,
			    stguser.user_Id                   AS userId,
			    sysBranch.ID               AS userBranchCode,
			    transhis1.transaction_date            AS trxDate
			  FROM   Transaction_User  trans,
			    stage_user stguser,
				CMS_SYSTEM_BANK_BRANCH sysBranch,
			    cms_team_type_membership team,
				cms_user usr,
			    cms_team_type_membership oldteam,
			    Trans_history_User transhis,
				  Trans_history_User  transhis1,
			    common_code_category_entry cc,
			    TRANS_HISTORY_IPADDRESS ip

			  WHERE
			
			 -- trans.transaction_type         = 'USER'
			 -- AND 
        TRANSHIS.TR_HISTORY_ID in (select (transhis1.TR_HISTORY_ID)   from trans_history transhis1
                      where      transhis1.transaction_id = trans.transaction_id )     
              AND  transhis1.TR_HISTORY_ID = TRANSHIS.TR_HISTORY_ID
              and transhis.staging_reference_id = stguser.user_id 
              and transhis.reference_id = usr.user_id 
			  AND team.team_type_membership_id   =stguser.team_type_membership_id
			  AND oldteam.team_type_membership_id=stguser.team_type_membership_id
			  AND cc.entry_code (+)              = stguser.department
			  AND cc.category_code               = 'HDFC_DEPARTMENT'
			  AND transhis.from_state           IN ('ND','REJECTED','PENDING_CREATE')
			  AND transhis.to_state             IN ('PENDING_CREATE','REJECTED')
			  AND ip.tr_history_id               = transhis.tr_history_id
			  AND stguser.BRANCH_CODE =	TO_CHAR(sysBranch.SYSTEM_BANK_BRANCH_CODE)
			
			  UNION
			 SELECT distinct
             usr.login_id,
				  usr.user_name,
				  CASE
					WHEN transhis.from_state = 'ND'
					AND transhis.to_state    = 'PENDING_CREATE'
					THEN ''
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'ACTIVE'
					THEN
					  CASE
						WHEN 'REJECTED' = GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN compare_old_branch_details(
						  (SELECT stguser1.branch_code
						  FROM stage_user stguser1
						  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
						  ), usr.branch_code,transhis.from_state,transhis.to_state)
				
						WHEN 'REJECTED' != GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN
           
            (SELECT sysbank.system_bank_branch_code
						  FROM cms_system_bank_branch sysBank
						  WHERE sysbank.system_bank_branch_code = compare_old_branch_details(
							(SELECT stguser1.branch_code
							FROM stage_user stguser1
							WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,2)
							),usr.branch_code,transhis.from_state,transhis.to_state)
						  )
            
					  END
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'REJECTED'
					THEN
					  CASE
						WHEN usr.branch_code = stguser.branch_code
						THEN ''
						WHEN usr.branch_code != stguser.branch_code
						
						THEN ''
					  END
					WHEN transhis.from_state = 'ACTIVE'
					AND transhis.to_state    = 'PENDING_UPDATE'
					THEN
					  CASE
						WHEN 'REJECTED' = GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN 
            compare_old_branch_details(
						  (SELECT stguser1.branch_code
						  FROM stage_user stguser1
						  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
						  ), usr.branch_code,transhis.from_state,transhis.to_state)
						WHEN 'REJECTED' != GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN
						  CASE
							WHEN usr.branch_code = stguser.branch_code
							THEN ''
							WHEN usr.branch_code != stguser.branch_code
							THEN ''
							 
						  END
					  END
					WHEN transhis.from_state = 'REJECTED'
					AND transhis.to_state    = 'PENDING_UPDATE'
					THEN compare_old_branch_details(
					  (SELECT stguser1.branch_code
					  FROM stage_user stguser1
					  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
					  ), usr.branch_code,transhis.from_state,transhis.to_state)
					WHEN transhis.from_state = 'ACTIVE'
					AND transhis.to_state    = 'PENDING_DELETE'
					THEN compare_old_branch_details(
					  (SELECT stguser1.branch_code
					  FROM stage_user stguser1
					  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,1)
					  ), usr.branch_code,transhis.from_state,transhis.to_state)
					WHEN transhis.from_state = 'REJECTED'
					AND transhis.to_state    = 'PENDING_DELETE'
					THEN
					  (SELECT LPAD(stguser1.branch_code,4,'0')
					  FROM stage_user stguser1
					  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
					  )
				  END AS old_br_code,
				  CASE
					WHEN transhis.from_state = 'ACTIVE'
					AND transhis.to_state    = 'PENDING_UPDATE'
					THEN LPAD(usr.branch_code,4,'0')
					WHEN transhis.from_state IN ('PENDING_UPDATE','PENDING_CREATE')
					AND transhis.to_state     = 'ACTIVE'
					THEN LPAD(usr.branch_code,4,'0')
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'REJECTED'
					THEN
					  CASE
						WHEN usr.branch_code = stguser.branch_code
						THEN LPAD(stguser.branch_code,4,'0')
						WHEN usr.branch_code != stguser.branch_code
						THEN LPAD(usr.branch_code,4,'0')
					  END
					WHEN transhis.from_state = 'REJECTED'
					AND (transhis.to_state   = 'PENDING_UPDATE'
					OR transhis.to_state     = 'ACTIVE')
					THEN LPAD(usr.branch_code,4,'0')
				  END AS new_br_code,
				  CASE
					WHEN transhis.from_state = 'ND'
					AND transhis.to_state    = 'PENDING_CREATE'
					THEN ''
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'ACTIVE'
					THEN
					  CASE
						WHEN 'REJECTED' = GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN
						  (SELECT sysbank.system_bank_branch_name
						  FROM cms_system_bank_branch sysBank
						  WHERE sysbank.system_bank_branch_code = compare_old_branch_details(
							(SELECT stguser1.branch_code
							FROM stage_user stguser1
							WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
							),usr.branch_code,transhis.from_state,transhis.to_state)
						  )
						WHEN 'REJECTED' != GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN
						  (SELECT sysbank.system_bank_branch_name
						  FROM cms_system_bank_branch sysBank
						  WHERE sysbank.system_bank_branch_code = compare_old_branch_details(
							(SELECT stguser1.branch_code
							FROM stage_user stguser1
							WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,2)
							),usr.branch_code,transhis.from_state,transhis.to_state)
						  )
					  END
					WHEN transhis.from_state = 'ACTIVE'
					AND transhis.to_state    = 'PENDING_UPDATE'
					THEN
					  CASE
						WHEN 'REJECTED' = GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN
						  (SELECT sysbank.system_bank_branch_name
						  FROM cms_system_bank_branch sysBank
						  WHERE sysbank.system_bank_branch_code = compare_old_branch_details(
							(SELECT stguser1.branch_code
							FROM stage_user stguser1
							WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
							),usr.branch_code,transhis.from_state,transhis.to_state)
						  )
						WHEN 'REJECTED' != GET_OLD_FROM_STATE(transhis.transaction_id)
						THEN
						  CASE
							WHEN usr.branch_code = stguser.branch_code
							THEN ''
							WHEN usr.branch_code != stguser.branch_code
							THEN ''
							 
						  END
					  END
					WHEN transhis.from_state = 'REJECTED'
					AND transhis.to_state    = 'PENDING_UPDATE'
					THEN
					  (SELECT sysbank.system_bank_branch_name
					  FROM cms_system_bank_branch sysBank
					  WHERE sysbank.system_bank_branch_code = (compare_old_branch_details(
						(SELECT stguser1.branch_code
						FROM stage_user stguser1
						WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
						), usr.branch_code,transhis.from_state,transhis.to_state) )
					  )
					WHEN transhis.from_state = 'ACTIVE'
					AND transhis.to_state    = 'PENDING_DELETE'
					THEN
					  (SELECT sysbank.system_bank_branch_name
					  FROM cms_system_bank_branch sysBank
					  WHERE sysbank.system_bank_branch_code = compare_old_branch_details(
						(SELECT stguser1.branch_code
						FROM stage_user stguser1
						WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,1)
						),usr.branch_code,transhis.from_state,transhis.to_state)
					  )
					WHEN transhis.from_state = 'REJECTED'
					AND transhis.to_state    = 'PENDING_DELETE'
					THEN
					  (SELECT sysbank.system_bank_branch_name
					  FROM cms_system_bank_branch sysBank
					  WHERE sysbank.system_bank_branch_code =
						(SELECT stguser1.branch_code
						FROM stage_user stguser1
						WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
						)
					  )
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'REJECTED'
					THEN
					  CASE
						WHEN usr.branch_code = stguser.branch_code
						THEN ''
						WHEN usr.branch_code != stguser.branch_code
						THEN
						  CASE
							WHEN 'REJECTED' = GET_OLD_FROM_STATE(transhis.transaction_id)
							THEN ''
							
							WHEN 'REJECTED' != GET_OLD_FROM_STATE(transhis.transaction_id)
							THEN ''
						  END
					  END
				  END AS old_br_name,
				  CASE
					WHEN transhis.from_state = 'ACTIVE'
					AND transhis.to_state   IN ('PENDING_UPDATE','PENDING_DELETE')
					THEN
					  (SELECT sysbank.system_bank_branch_name
					  FROM cms_system_bank_branch sysBank
					  WHERE sysbank.system_bank_branch_code = usr.branch_code
					  AND sysbank.deprecated = 'N'
					  )
					WHEN transhis.from_state = 'REJECTED'
					AND transhis.to_state   IN ('PENDING_UPDATE','PENDING_DELETE','ACTIVE')
					THEN
					  (SELECT sysbank.system_bank_branch_name
					  FROM cms_system_bank_branch sysBank
					  WHERE sysbank.system_bank_branch_code = usr.branch_code
					  )
					WHEN transhis.from_state IN ('PENDING_UPDATE','PENDING_CREATE')
					AND transhis.to_state     = 'ACTIVE'
					THEN
					  (SELECT sysbank.system_bank_branch_name
					  FROM cms_system_bank_branch sysBank
					  WHERE sysbank.system_bank_branch_code = compare_new_branch_details(stguser.branch_code,usr.branch_code,transhis.from_state,transhis.to_state)
					  AND sysbank.deprecated               = 'N' )
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'REJECTED'
					THEN
					  CASE
						WHEN usr.branch_code = stguser.branch_code
						THEN
						  (SELECT sysbank.system_bank_branch_name
						  FROM cms_system_bank_branch sysBank
						  WHERE sysbank.system_bank_branch_code = stguser.branch_code
						  )
						WHEN usr.branch_code != stguser.branch_code
						THEN
						  (SELECT sysbank.system_bank_branch_name
						  FROM cms_system_bank_branch sysBank
						  WHERE sysbank.system_bank_branch_code = usr.branch_code
						  )
					  END
				  END AS new_br_name,
         
				  CASE
					WHEN transhis.from_state = 'ND'
					AND transhis.to_state    = 'PENDING_CREATE'
					THEN ''
					WHEN transhis.from_state = 'PENDING_UPDATE'
					AND transhis.to_state    = 'ACTIVE'
					THEN
					  CASE
						WHEN usr.TEAM_TYPE_MEMBERSHIP_ID =
						  (SELECT stguser1.TEAM_TYPE_MEMBERSHIP_ID
						  FROM stage_user stguser1
						  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,2)
						  )
						THEN ''
						WHEN usr.TEAM_TYPE_MEMBERSHIP_ID !=
						  (SELECT stguser1.TEAM_TYPE_MEMBERSHIP_ID
						  FROM stage_user stguser1
						  WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,2)
						  )
						THEN
						  (SELECT MEMBERSHIP_NAME
						  FROM CMS_TEAM_TYPE_MEMBERSHIP
						  WHERE TEAM_TYPE_MEMBERSHIP_ID =
							(SELECT stguser1.TEAM_TYPE_MEMBERSHIP_ID
							FROM stage_user stguser1
							WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,2)
							)
						  )
					  END
					WHEN transhis.from_state IN ('ACTIVE','REJECTED')
					AND transhis.to_state    IN ('PENDING_UPDATE','PENDING_DELETE')
					THEN
					  CASE
						WHEN usr.TEAM_TYPE_MEMBERSHIP_ID = stguser.TEAM_TYPE_MEMBERSHIP_ID
						THEN ''
						WHEN usr.TEAM_TYPE_MEMBERSHIP_ID != stguser.TEAM_TYPE_MEMBERSHIP_ID
						THEN
						  (SELECT MEMBERSHIP_NAME
						  FROM CMS_TEAM_TYPE_MEMBERSHIP
						  WHERE TEAM_TYPE_MEMBERSHIP_ID =
							(SELECT stguser1.TEAM_TYPE_MEMBERSHIP_ID
							FROM cms_user stguser1
							 
							WHERE stguser1.USER_ID = GET_OLD_USER_ID_DETAIL(usr.login_id,3)
							)
						  )
					  END
				  END AS old_profile_name,
				  CASE
					WHEN trans.status = 'PENDING_UPDATE'
					THEN
					  CASE
						WHEN usr.TEAM_TYPE_MEMBERSHIP_ID = stguser.TEAM_TYPE_MEMBERSHIP_ID
						THEN team.membership_name
						WHEN usr.TEAM_TYPE_MEMBERSHIP_ID != stguser.TEAM_TYPE_MEMBERSHIP_ID
						THEN team.membership_name
						  
					  END
					WHEN trans.status != 'PENDING_UPDATE'
					 
					THEN team.membership_name
					WHEN trans.status != 'PENDING_DELETE'
					THEN oldteam.membership_name
				  END           AS new_profile_name ,
				  cc.entry_name AS dept,
          CASE
          			WHEN UPPER(stguser.status) = 'A' AND UPPER(stguser.is_unlock) = 'Y'
    			  	THEN 'Unlocked'
					WHEN UPPER(stguser.status) = 'A'
					THEN 'Enabled'
					WHEN UPPER(stguser.status) = 'D'
					THEN 'Disabled'
					WHEN UPPER(stguser.status) = 'T'
					THEN 'Terminate'
					WHEN UPPER(stguser.status) = 'I'
					THEN 'Inactive'
					WHEN UPPER(stguser.status) = 'N'
					THEN 'Disabled'
					WHEN UPPER(stguser.status) = 'O'
					THEN 'Locked'
					WHEN UPPER(stguser.status) = 'S'
					THEN 'Suspend '
					WHEN UPPER(stguser.status) = 'L'
					THEN 'Leave'
					WHEN UPPER(stguser.status) = 'R'
					THEN 'Disabled1'
					WHEN UPPER(stguser.status) = 'NR'
					THEN 'Disabled2'
				  END                                                         AS status,
				  GET_ACTIVITY_MESSAGE(transhis.FROM_STATE,transhis.TO_STATE) AS Operation,
				  TO_CHAR(trans.creation_date,'DD-Mon-YYYY')                  AS Creation_date,
				  
				  
				  
				  CASE 
							WHEN USR.REF_NUMBER IS NOT NULL
							THEN (  select ISAC_MAKER_ID from CMS_INTERFACE_LOG where ID=(select Max (ID) from CMS_INTERFACE_LOG where 
							ISAC_REFERENCE_NO = usr.REF_NUMBER
							))
							ELSE
				  CASE
					WHEN trans.from_state = 'PENDING_PERFECTION'
					THEN
					  (SELECT hist.login_id
					  FROM trans_history hist
					  WHERE hist.transaction_id = trans.transaction_id
					  AND hist.from_state       = 'PENDING_PERFECTION'
					  AND hist.to_state         ='DRAFT'
					  )
					WHEN trans.from_state = 'PENDING_CREATE'
					THEN
					  (SELECT hist.login_id
					  FROM trans_history hist
					  WHERE hist.transaction_id = trans.transaction_id
					  AND hist.from_state      IN ('ND','DRAFT')
					  AND hist.to_state         ='PENDING_CREATE'
					  )
					WHEN trans.from_state = 'PENDING_UPDATE'
					THEN
					  (SELECT hist.login_id
					  FROM trans_history hist
					  WHERE hist.TR_HISTORY_ID=
						(SELECT MAX(TR_HISTORY_ID)
						FROM trans_history
						WHERE transaction_id = trans.transaction_id
						AND from_state      IN ('ACTIVE','DRAFT')
						AND to_state         = 'PENDING_UPDATE'
						)
					  )
					WHEN trans.from_state = 'PENDING_DELETE'
					THEN
					  (SELECT hist.login_id
					  FROM trans_history hist
					  WHERE hist.TR_HISTORY_ID=
						(SELECT MAX(TR_HISTORY_ID)
						FROM trans_history
						WHERE transaction_id = trans.transaction_id
						AND from_state       ='ACTIVE'
						AND to_state         ='PENDING_DELETE'
						)
					  )
					WHEN trans.from_state = 'ACTIVE'
					THEN
					  (SELECT hist.login_id
					  FROM trans_history hist
					  WHERE hist.TR_HISTORY_ID=
						(SELECT MAX(TR_HISTORY_ID)
						FROM trans_history
						WHERE transaction_id = trans.transaction_id
						AND from_state       ='ACTIVE'
						AND to_state        IN ('PENDING_UPDATE','PENDING_DELETE')
						)
					  )
					WHEN trans.from_state = 'REJECTED'
					THEN
					  (SELECT hist.login_id
					  FROM trans_history hist
					  WHERE hist.TR_HISTORY_ID=
						(SELECT MAX(TR_HISTORY_ID)
						FROM trans_history
						WHERE transaction_id = trans.transaction_id
						AND from_state       = 'REJECTED'
						AND to_state         ='ACTIVE'
						)
					  )
					WHEN trans.from_state = 'DRAFT'
					THEN
					  CASE
						WHEN trans.status = 'PENDING_UPDATE'
						THEN
						  (SELECT hist.login_id
						  FROM trans_history hist
						  WHERE hist.TR_HISTORY_ID=
							(SELECT MAX(TR_HISTORY_ID)
							FROM trans_history
							WHERE transaction_id = trans.transaction_id
							AND from_state       = 'DRAFT'
							AND to_state         ='PENDING_UPDATE'
							)
						  )
						WHEN trans.status = 'ACTIVE'
						THEN
						  (SELECT hist.login_id
						  FROM trans_history hist
						  WHERE hist.TR_HISTORY_ID=
							(SELECT MAX(TR_HISTORY_ID)
							FROM trans_history
							WHERE transaction_id = trans.transaction_id
							AND from_state       = 'DRAFT'
							AND to_state         ='ACTIVE'
							)
						  )
					  END
				  END    END                                       AS Maker,
				  TO_CHAR(to_timestamp(transhis.transaction_date),'DD-Mon-YYYY HH:MI:SS') AS Modified_On,
				  
				  
				   CASE 
							WHEN USR.REF_NUMBER IS NOT NULL
							THEN (  select ISAC_CHECKER_ID from CMS_INTERFACE_LOG where ID=(select Max (ID) from CMS_INTERFACE_LOG where 
							ISAC_REFERENCE_NO = usr.REF_NUMBER
							))
							ELSE
				  CASE
					WHEN trans.status = 'PENDING_CREATE'
					OR trans.status   = 'PENDING_UPDATE'
					THEN ''
					WHEN trans.status != 'PENDING_CREATE'
					AND trans.status  != 'PENDING_UPDATE'
					THEN TO_CHAR(trans.login_id)
				  END END AS Approved_By,
				  CASE
					WHEN trans.status = 'PENDING_CREATE'
					OR trans.status   = 'PENDING_UPDATE'
					THEN ''
					WHEN trans.status != 'PENDING_CREATE'
					AND trans.status  != 'PENDING_UPDATE'
					THEN TO_CHAR(to_timestamp(transhis.transaction_date),'DD-Mon-YYYY HH:MI:SS')
				  END AS Authorized_Date,
--				  COALESCE(
--				  (SELECT ip1.ip_address
--				  FROM trans_history hist,
--					TRANS_HISTORY_IPADDRESS ip1
--				  WHERE hist.tr_history_id = ip1.tr_history_id
--				  AND hist.tr_history_id   =
--					(SELECT MAX(tr_history_id)
--					FROM trans_history
--					WHERE TRANSACTION_ID = TRANS.TRANSACTION_ID
--					)
--				  ),'0.0.0.0') AS maker_IPAddress,

						CASE 
                           WHEN  usr.ref_number is not null
                                THEN 'ISAC interface'
						   WHEN usr.ref_number is null
                              THEN '0.0.0.0'  
							 END AS maker_IPAddress,
				  CASE
				   
                     WHEN  usr.ref_number is not null
                       THEN 'ISAC interface'
					   
					WHEN trans.status = 'PENDING_CREATE'
					OR trans.status   = 'PENDING_UPDATE'
					THEN ''
					WHEN trans.status != 'PENDING_CREATE'
					AND trans.status  != 'PENDING_UPDATE'
					THEN COALESCE(ip.ip_address ,'0.0.0.0')
				  END AS checker_IPAddress,
				   stguser.ref_number as ref_number,
				  usr.user_Id            AS userId,
			    sysBranch.ID        AS userBranchCode,
			    transhis1.transaction_date AS trxDate
        
          
				FROM 
         Transaction_User  trans,
				  stage_user stguser,
				  cms_user usr,
				  CMS_SYSTEM_BANK_BRANCH SYSBRANCH,
				  cms_team_type_membership team,
				  cms_team_type_membership oldteam,
				  Trans_history_User transhis,
				  Trans_history_User  transhis1,
				  common_code_category_entry cc,
				  TRANS_HISTORY_IPADDRESS ip

		where
				--trans.transaction_type         = 'USER'
       -- AND 
        TRANSHIS.TR_HISTORY_ID in (select (transhis1.TR_HISTORY_ID)   from trans_history transhis1
        where      transhis1.transaction_id = trans.transaction_id )     
        AND  transhis1.TR_HISTORY_ID = TRANSHIS.TR_HISTORY_ID
       
        and transhis.staging_reference_id = stguser.user_id 
        and transhis.reference_id = usr.user_id 
    		AND team.team_type_membership_id   =usr.team_type_membership_id
				AND oldteam.team_type_membership_id=stguser.team_type_membership_id
				AND cc.entry_code (+)              = usr.department
				AND cc.category_code               = 'HDFC_DEPARTMENT'
				AND ip.tr_history_id               = transhis.tr_history_id
				AND usr.BRANCH_CODE           	   = TO_CHAR(SYSBRANCH.SYSTEM_BANK_BRANCH_CODE) 
			  
			  
			  )

			</query>
		<whereClause>
			<mandatoryClause>
				1=1
		 </mandatoryClause>
			<param>
				<name>userId</name>
				<condition> AND userId = </condition>
			</param>
			<param>
				<name>branch</name>
				<condition> AND userBranchCode = </condition>
			</param>
			<param>
				<name>fromDate</name>
				<condition> and TO_DATE(TRUNC(trxDate)) between </condition>
			</param>
			<param>
				<name>toDate</name>
				<condition> AND </condition>
 			</param>
			
		</whereClause>
		<reportParamters>
			<reportColumns>
				<reportColumn>
					<width>25</width>
					<format>textFormat</format>
					<header>User Id</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>User Name</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Old Branch Code</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>New Branch Code</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Old Branch Name</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>New Branch Name</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Old Profile</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>New Profile</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Department Name</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Status</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Exact Activity carried out</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Creation Date</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Maker</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Modified on</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Authorized by</header>
				</reportColumn>
				<reportColumn>
					<width>50</width>
					<format>textFormat</format>
					<header>Authorized Date and Time</header>
				</reportColumn>
				<reportColumn>
					<width>25</width>
					<format>textFormat</format>
					<header>Maker IP Address</header>
				</reportColumn>
				
				<reportColumn>
					<width>25</width>
					<format>textFormat</format>
					<header>Checker IP Address</header>
				</reportColumn>
				
			</reportColumns>
			<reportName>User Admin Report</reportName>
		</reportParamters>
	</report>
</reports>
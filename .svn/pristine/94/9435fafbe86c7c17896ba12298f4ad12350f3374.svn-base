

CREATE OR REPLACE PROCEDURE SP_NEW_UPDATE_COMPONENT_MASTER
AS
  CURSOR CR_FETCH_TEMP_COMPONENT
  IS
    SELECT ID ,
      COMPONENT_CODE ,
      COMPONENT_NAME ,
      COMPONENT_CATEGORY,
      COMPONENT_CATEGORY_NEW,
      COMPONENT_TYPE_NEW
    FROM DP_REGULATORY_DAY0
    WHERE UPDATE_STATUS = 'N';
  RC_COMPONENT_UPDATE CR_FETCH_TEMP_COMPONENT%ROWTYPE;
  COUNT_ACTUAL NUMBER(10);
BEGIN
  OPEN CR_FETCH_TEMP_COMPONENT;
  LOOP
    FETCH CR_FETCH_TEMP_COMPONENT INTO RC_COMPONENT_UPDATE;
    EXIT
  WHEN CR_FETCH_TEMP_COMPONENT%NOTFOUND;
    COUNT_ACTUAL := 0;
    SELECT COUNT(1)
    INTO COUNT_ACTUAL
    FROM CMS_COMPONENT
    WHERE ID           = RC_COMPONENT_UPDATE.ID
    AND COMPONENT_NAME = RC_COMPONENT_UPDATE.COMPONENT_NAME
    AND COMPONENT_CODE = RC_COMPONENT_UPDATE.COMPONENT_CODE 
    AND STATUS='ACTIVE' 
    AND DEPRECATED ='N' ;
    
    
   -- dbms_output.put_line('ID::::'|| RC_COMPONENT_UPDATE.ID );
   -- dbms_output.put_line('COMPONENT_NAME::::'||RC_COMPONENT_UPDATE.COMPONENT_CATEGORY_NEW );
   
   
    UPDATE CMS_COMPONENT
    SET COMPONENT_CATEGORY = RC_COMPONENT_UPDATE.COMPONENT_CATEGORY_NEW,
    COMPONENT_TYPE = RC_COMPONENT_UPDATE.COMPONENT_TYPE_NEW
    WHERE ID               = RC_COMPONENT_UPDATE.ID
    AND COMPONENT_NAME     = RC_COMPONENT_UPDATE.COMPONENT_NAME
    AND COMPONENT_CODE     = RC_COMPONENT_UPDATE.COMPONENT_CODE;
   
   
    UPDATE CMS_STAGE_COMPONENT
    SET COMPONENT_CATEGORY = RC_COMPONENT_UPDATE.COMPONENT_CATEGORY_NEW,
      COMPONENT_TYPE = RC_COMPONENT_UPDATE.COMPONENT_TYPE_NEW
    WHERE ID              IN
      (SELECT STAGING_REFERENCE_ID
      FROM Transaction
      WHERE reference_id  = RC_COMPONENT_UPDATE.ID
      AND transaction_type='COMPONENT'
      AND COMPONENT_NAME  = RC_COMPONENT_UPDATE.COMPONENT_NAME
      );
      
      
    IF(COUNT_ACTUAL>0) THEN
      UPDATE DP_REGULATORY_DAY0
      SET UPDATE_STATUS = 'Y'
      WHERE ID          = RC_COMPONENT_UPDATE.ID ;
    END IF;
  END LOOP;
  CLOSE CR_FETCH_TEMP_COMPONENT;
  COMMIT;
END;



CREATE OR REPLACE PROCEDURE SP_CAM_MIG
AS
  CURSOR CR_CAM_INSERT
  IS
    SELECT * FROM CAM_MIG_TEMP WHERE UPDATE_STATUS = 'N';
  v_OTHER_COVENANT_id            NUMBER (19);
  v_stg_OTHER_COVENANT_id        NUMBER (19);
  v_stg_OTHER_COVENANT_values_id NUMBER (19);
  v_OTHER_COVENANT_values_id     NUMBER (19);
  v_display_id                   NUMBER (19);
  RC_OTHER_COVENANT_INSERT CR_CAM_INSERT%ROWTYPE;
  COUNT_ACTUAL NUMBER(10);
BEGIN
  OPEN CR_CAM_INSERT;
  LOOP
    FETCH CR_CAM_INSERT INTO RC_OTHER_COVENANT_INSERT;
    EXIT
  WHEN CR_CAM_INSERT%NOTFOUND;
    COUNT_ACTUAL := 0;
    SELECT COUNT(1)
    INTO COUNT_ACTUAL
    FROM SCI_LSP_LMT_PROFILE
    WHERE LLP_BCA_REF_NUM = RC_OTHER_COVENANT_INSERT.CAM_NO ;
    IF(COUNT_ACTUAL       > 0) THEN
      SELECT TO_CHAR (SYSDATE, 'YYYYMMDD')
        || LPAD(SCI_LSP_OTHER_COVENANT_SEQ.NEXTVAL,9,'0')
      INTO v_OTHER_COVENANT_id
      FROM dual;
      SELECT TO_CHAR (SYSDATE, 'YYYYMMDD')
        || LPAD(STAGE_SCI_LSP_OTHER_COVENANT_SEQ.NEXTVAL,9,'0')
      INTO v_stg_OTHER_COVENANT_id
      FROM dual;
      SELECT TO_CHAR (SYSDATE, 'YYYYMMDD')
        || LPAD(CAM_OC_MAP_SEQ.NEXTVAL,9,'0')
      INTO v_display_id
      FROM dual;
      SELECT TO_CHAR (SYSDATE, 'YYYYMMDD')
        || LPAD(SCI_LSP_OTHER_COVENANT_VALUES_SEQ.NEXTVAL,9,'0')
      INTO v_OTHER_COVENANT_values_id
      FROM dual;
      SELECT TO_CHAR (SYSDATE, 'YYYYMMDD')
        || LPAD(STAGE_SCI_LSP_OTHER_COVENANT_VALUES_SEQ.NEXTVAL,9,'0')
      INTO v_stg_OTHER_COVENANT_values_id
      FROM dual;
      INSERT
      INTO SCI_LSP_OTHER_COVENANT
        (
          CMS_LE_OTHER_COVENANT_ID,
          CMS_LE_COVENANT_TYPE,
          CMS_LE_ID,
          CMS_LE_COVENANT_CONDITION,
          CMS_LE_COVENANT_COMPILED,
          CMS_LE_COVENANT_CATEGORY,
          CMS_LE_COVENANT_ADVISED,
          CMS_LE_COVENANT_DESCRIPTION,
          CMS_LE_COVENANT_REMARKS,
          CMS_LE_COVENANT_TARGETDATE,
          CMS_LE_LMT_PROFILE_ID,
          CMS_LE_STATUS,
          CMS_LE_STAGE_ID
        )
        VALUES
        (
          v_OTHER_COVENANT_id,
          RC_OTHER_COVENANT_INSERT.COVENANT_TYPE,
          RC_OTHER_COVENANT_INSERT.LLP_LE_ID,
          RC_OTHER_COVENANT_INSERT.COVENANT_CONDITION,
          RC_OTHER_COVENANT_INSERT.COVENANT_COMPILED,
          RC_OTHER_COVENANT_INSERT.COVENANT_CATEGORY,
          RC_OTHER_COVENANT_INSERT.COVENANT_ADVISED,
          RC_OTHER_COVENANT_INSERT.COVENANT_DESCRIPTION,
          RC_OTHER_COVENANT_INSERT.COVENANT_REMARKS,
          RC_OTHER_COVENANT_INSERT.COVENANT_TARGETDATE,
          RC_OTHER_COVENANT_INSERT.CMS_LSP_LMT_PROFILE_ID,
          'ACTIVE',
          v_display_id
        );
      INSERT
      INTO STAGE_SCI_LSP_OTHER_COVENANT
        (
          CMS_LE_OTHER_COVENANT_ID,
          CMS_LE_COVENANT_TYPE,
          CMS_LE_ID,
          CMS_LE_COVENANT_CONDITION,
          CMS_LE_COVENANT_COMPILED,
          CMS_LE_COVENANT_CATEGORY,
          CMS_LE_COVENANT_ADVISED,
          CMS_LE_COVENANT_DESCRIPTION,
          CMS_LE_COVENANT_REMARKS,
          CMS_LE_COVENANT_TARGETDATE,
          CMS_LE_LMT_PROFILE_ID,
          CMS_LE_STATUS,
          CMS_LE_PREV_STAGE_ID,
          CMS_LE_IS_UPDATE_FLAG
        )
        VALUES
        (
          v_stg_OTHER_COVENANT_id,
          RC_OTHER_COVENANT_INSERT.COVENANT_TYPE,
          RC_OTHER_COVENANT_INSERT.LLP_LE_ID,
          RC_OTHER_COVENANT_INSERT.COVENANT_CONDITION,
          RC_OTHER_COVENANT_INSERT.COVENANT_COMPILED,
          RC_OTHER_COVENANT_INSERT.COVENANT_CATEGORY,
          RC_OTHER_COVENANT_INSERT.COVENANT_ADVISED,
          RC_OTHER_COVENANT_INSERT.COVENANT_DESCRIPTION,
          RC_OTHER_COVENANT_INSERT.COVENANT_REMARKS,
          RC_OTHER_COVENANT_INSERT.COVENANT_TARGETDATE,
          RC_OTHER_COVENANT_INSERT.CMS_LSP_LMT_PROFILE_ID,
          'ACTIVE',
          v_display_id,
          'N'
        );
      IF(RC_OTHER_COVENANT_INSERT.MONITORING_RESPONSIBILITY_1 IS NOT NULL OR RC_OTHER_COVENANT_INSERT.COVENANT_FACILTY_NAME_1 IS NOT NULL) then
	  DBMS_OUTPUT.PUT_LINE('MONITORING_RESPONSIBILITY_1--'||MONITORING_RESPONSIBILITY_1);
        INSERT
        INTO STAGE_SCI_LSP_OTHER_COVENANT_VALUES
          (
            CMS_LE_OTHER_COVENANT_DETAILS_ID,
            COVENANT_MONITORING_RESP_VALUE,
            CMS_LE_ID,
            COVENANT_FACILITY_NAME_VALUE,
            CMS_LE_LMT_PROFILE_ID,
            CMS_LE_STAGE_OC_ID,
            STATUS,
            UNIQUE_SEQ_FROM_OC
          )
          VALUES
          (
            v_stg_OTHER_COVENANT_values_id,
            RC_FLAG_UPDATE.MONITORING_RESPONSIBILITY_1,
            RC_FLAG_UPDATE.CMS_LE_ID,
            RC_FLAG_UPDATE.COVENANT_FACILTY_NAME_1,
            NULL,
            v_stg_OTHER_COVENANT_id,
            'ACTIVE',
            NULL
          );
        INSERT
        INTO SCI_LSP_OTHER_COVENANT_VALUES
          (
            CMS_LE_OTHER_COVENANT_DETAILS_ID,
            COVENANT_MONITORING_RESP_VALUE,
            CMS_LE_ID,
            COVENANT_FACILITY_NAME_VALUE,
            CMS_LE_LMT_PROFILE_ID,
            CMS_LE_STAGE_OC_ID,
            STATUS,
            UNIQUE_SEQ_FROM_OC
          )
          VALUES
          (
            v_OTHER_COVENANT_values_id,
            RC_FLAG_UPDATE.MONITORING_RESPONSIBILITY_1,
            RC_FLAG_UPDATE.CMS_LE_ID,
            RC_FLAG_UPDATE.COVENANT_FACILTY_NAME_1,
            NULL,
            v_OTHER_COVENANT_id,
            'ACTIVE',
            NULL
          );
      END IF;
    END IF;
    IF(COUNT_ACTUAL>0) THEN
      UPDATE CAM_MIG_TEMP
      SET UPDATE_STATUS = 'Y'
      WHERE CAM_NO      = RC_OTHER_COVENANT_INSERT.CAM_NO;
      COMMIT;
    END IF;
  END LOOP;
  CLOSE CR_CAM_INSERT;
  COMMIT;
END;